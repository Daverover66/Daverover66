###############################################################################
#   @author         :   Rueben
#   @date           :   
#   @package        :   Home Battery Automations
#   @description    :   Daily charge and discharge of home battery. 
# 
#   @modified by    :   Dave Forrester(@) 
#   @date           :    
############################################################################### 
  
###############################################################################
### Actionable notification to request charge level of battery overnight
###############################################################################

alias: Get desired battery %
description: Send a notification asking for desired battery percentage
trigger:
  - platform: time
    at: input_datetime.get_desired_charge_notification_at
condition: []
action:
  - alias: Send notification
    service: notify.mobile_app_daves_samsung_galaxy
    data:
      message: >
        What battery % do you want to charge to? (default {{
        states('input_number.default_battery_percentage')|int }}%)
      title: Set battery charge %
      data:
        actions:
          - action: FULL
            title: 100%
          - action: HALF
            title: 50%
          - action: REPLY
            title: Custom
  - alias: Wait for a response
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: FULL
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: REPLY
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: HALF
    timeout:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: true
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ not wait.trigger }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: input_number.desired_battery_percentage
            data:
              value: "{{ states('input_number.default_battery_percentage') | float }}"
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"FULL\" }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: input_number.desired_battery_percentage
            data:
              value: 100
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"REPLY\" }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: input_number.desired_battery_percentage
            data:
              value: |
                {{ wait.trigger.event.data.reply_text | int(0) }}
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"HALF\" }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: input_number.desired_battery_percentage
            data:
              value: 50
mode: single

### Charge battery to desired level from the grid during off-peak


alias: "Charge Battery to Desired % "
description: Charge the Home Battery to the desired % from the grid during off-peak time
trigger:
  - platform: state
    entity_id:
      - sensor.solaredge_b1_state_of_energy
    enabled: true
    id: Battery State of Energy
  - platform: time
    at: input_datetime.start_battery_grid_charge
    id: Start of off peak
    alias: When off-peak period has started
  - platform: time
    at: input_datetime.end_battery_grid_charge
    id: End of off peak
    alias: When off-peak period has ended
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Start of off peak
          - condition: numeric_state
            entity_id: sensor.solaredge_b1_state_of_energy
            below: input_number.desired_battery_percentage
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{
                states('input_number.storage_command_timeout_for_discharge_to_grid')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Input Number Helper Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Charge from Solar Power and Grid
            alias: Set Storage Command Mode to Charge from Solar Power and Grid
      - conditions:
          - condition: trigger
            id: Battery State of Energy
          - condition: device
            device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: selected_option
            option: Charge from Solar Power and Grid
            alias: Storage Command Mode is Charge from Solar Power and Grid
          - condition: or
            conditions:
              - condition: numeric_state
                entity_id: sensor.solaredge_b1_state_of_energy
                above: input_number.desired_battery_percentage
              - condition: numeric_state
                entity_id: sensor.solaredge_b1_state_of_energy
                above: 99.5
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
          - service: input_number.set_value
            data:
              value: 0
            target:
              entity_id: input_number.desired_battery_percentage
            alias: Set Desired Battery % to zero
      - conditions:
          - condition: trigger
            id: End of off peak
          - condition: not
            conditions:
              - condition: device
                device_id: 952193e87f675ba7f7e32eda5500c572
                domain: select
                entity_id: select.solaredge_i1_storage_command_mode
                type: selected_option
                option: Maximize Self Consumption
            alias: Test if Storage Command Mode is MSC
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
mode: single

### Actionable notification to request discharge level of battery during peak export

alias: Get Desired Battery Discharge %
description: Send a notification asking for desired battery discharge percentage
trigger:
  - platform: time
    at: input_datetime.get_desired_discharge_notification_at 
condition: []
action:
  - alias: Send notification
    service: notify.mobile_app_daves_samsung_galaxy
    data:
      message: >
        What battery % do you want to discharge to? (default {{
        states('input_number.default_battery_discharge_percentage')|int }}%)
        Current Battery Level is {{
        states('sensor.solaredge_b1_state_of_energy') }}kWh
      title: Set battery discharge %
      data:
        actions:
          - action: FORTY
            title: 40%
          - action: THIRTY
            title: 30%
          - action: REPLY
            title: Custom
  - alias: Wait for a response
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: FORTY 
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: REPLY
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: THIRTY 
    timeout:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: true
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ not wait.trigger }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: input_number.desired_battery_discharge_percentage
            data:
              value: "{{ states('input_number.default_battery_percentage') | float }}"
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"FIFTYFIVE\" }}"
        sequence:
          - service: input_number.set_value
            data:
              value: 40
            target:
              entity_id: input_number.desired_battery_discharge_percentage
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"REPLY\" }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: input_number.desired_battery_discharge_percentage
            data:
              value: |
                {{ wait.trigger.event.data.reply_text | int(0) }}
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"FORTYFIVE\" }}"
        sequence:
          - service: input_number.set_value
            data:
              value: 30
            target:
              entity_id: input_number.desired_battery_discharge_percentage
mode: single

### Discharge battery to desired level during peak export period

alias: Discharge Battery to Desired %
description: Disharge the Home Battery to the desired % during Flux peak time
trigger:
  - platform: state
    entity_id:
      - sensor.solaredge_b1_state_of_energy
    enabled: true
    id: Battery State of Energy
  - platform: time
    id: Start of peak
    alias: At Start Discharge Helper Time
    at: input_datetime.start_battery_discharge
  - platform: time
    at: input_datetime.end_battery_discharge
    id: End of peak
    alias: At End Discharge Helper Time
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Start of peak
          - condition: numeric_state
            entity_id: sensor.solaredge_b1_state_of_energy
            above: input_number.desired_battery_discharge_percentage
            alias: Confirm Battery State of Charge is above desired discharge %
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{
                states('input_number.storage_command_timeout_for_discharge_to_grid')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Input Number Helper Value
          - service: number.set_value
            data:
              value: "{{ states('input_number.battery_output_limit') | float(0) }}"
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Discharge to Maximize Export
            alias: Set Storage Command Mode to Discharge to Maximise Export
      - conditions:
          - condition: trigger
            id: Battery State of Energy
          - condition: device
            device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: selected_option
            option: Discharge to Maximize Export
            alias: Storage Command Mode is Discharge to Maximise Export
          - condition: numeric_state
            entity_id: sensor.solaredge_b1_state_of_energy
            below: input_number.desired_battery_discharge_percentage
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.default_battery_output_limit') |
                float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
      - conditions:
          - condition: trigger
            id: End of peak
          - condition: not
            conditions:
              - condition: device
                device_id: 952193e87f675ba7f7e32eda5500c572
                domain: select
                entity_id: select.solaredge_i1_storage_command_mode
                type: selected_option
                option: Maximize Self Consumption
            alias: Test if Storage Command Mode is MSC
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float (0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.default_battery_output_limit') |
                float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
mode: single

### Actionable notification to ask if battery output is to be limited overnight during EV charging

alias: Get Battery Output Limit
description: Send a notification asking if the battery output should be limited overnight
trigger:
  - platform: time
    at: "22:05:00"
condition: []
action:
  - alias: Send notification
    service: notify.mobile_app_daves_samsung_galaxy
    data:
      message: |
        Do you want to limit the battery output overnight?
      title: Battery Output Limit
      data:
        actions:
          - action: "YES"
            title: "Yes"
          - action: "NO"
            title: "No"
  - alias: Wait for a response
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "YES"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "NO"
    timeout:
      hours: 0
      minutes: 30
      seconds: 0
      milliseconds: 0
    continue_on_timeout: true
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ not wait.trigger }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: >-
                input_number.desired_battery_output_limit_for_overnight_ev_charging
            data:
              value: >-
                {{ states('input_number.default_battery_output_limit') | float
                }}
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"YES\" }}"
        sequence:
          - service: input_number.set_value
            data:
              value: 500
            target:
              entity_id: >-
                input_number.desired_battery_output_limit_for_overnight_ev_charging
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"NO\" }}"
        sequence:
          - service: input_number.set_value
            data:
              value: 5000
            target:
              entity_id: >-
                input_number.desired_battery_output_limit_for_overnight_ev_charging
mode: single

### Limit battery output overnight during EV charging 

alias: Limit Battery Output
description: Limit the output of the battery during overnight EV charging window
trigger:
  - platform: time
    at: input_datetime.start_battery_output_limit
    id: Start of Flux Period
  - platform: time
    at: input_datetime.end_battery_output_limit
    id: End of Flux Period
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Start of Flux Period
            alias: When triggered by start of limit period
          - condition: numeric_state
            entity_id: number.solaredge_i1_storage_discharge_limit
            above: >-
              input_number.desired_battery_output_limit_for_overnight_ev_charging
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{
                states('input_number.desired_battery_output_limit_for_overnight_ev_charging')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
      - conditions:
          - condition: trigger
            id: End of Flux Period
            alias: When triggered by end of limit period
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.default_battery_output_limit') |
                float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
mode: single

### Set Battery to charge from Clipped Solar

alias: Set battery to charge from clipped Solar ( normally after longer EV charge)
description: ""
trigger:
  - platform: time
    at: input_datetime.start_charge_from_clipped_solar
condition: []
action:
  - service: number.set_value
    data:
      value: >-
        {{
        states('input_number.storage_command_timeout_period_for_clipped_solar')
        | float(0)}}
    target:
      entity_id: number.solaredge_i1_storage_command_timeout
    alias: Set Storage Command Timeout to Clipped Solar Input Number Helper
  - device_id: 952193e87f675ba7f7e32eda5500c572
    domain: select
    entity_id: select.solaredge_i1_storage_command_mode
    type: select_option
    option: Charge from Clipped Solar Power
    alias: Set Storage Command Mode to Charge from Clipped Solar
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: number.set_value
    data:
      value: >-
        {{ states('input_number.storage_command_timeout_default_period') |
        float(0)}}
    target:
      entity_id: number.solaredge_i1_storage_command_timeout
    alias: Set Storage Command Timeout to default
mode: single


### Check Battery Settings

alias: Battery Settings Confirm
description: checks to see if battery settings are correct and sets an input boolean toggle
trigger:
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_default_mode
    from: Maximize Self Consumption
    id: Storage Default Mode Wrong
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_default_mode
    id: Storage Default Mode Correct
    to: Maximize Self Consumption
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_command_mode
    from: Maximize Self Consumption
    id: Storage Cmd Mode Wrong
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_command_mode
    id: Storage Cmd Mode Correct
    to: Maximize Self Consumption
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_control_mode
    from: Remote Control
    id: Storage Control Mode Wrong
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_control_mode
    id: Storage Control Mode Correct
    to: Remote Control
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Storage Default Mode Wrong
          - condition: state
            entity_id: input_boolean.desired_storage_default_mode_correct
            state: "on"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_default_mode_correct
      - conditions:
          - condition: trigger
            id: Storage Default Mode Correct
          - condition: state
            entity_id: input_boolean.desired_storage_default_mode_correct
            state: "off"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_default_mode_correct
      - conditions:
          - condition: trigger
            id: Storage Cmd Mode Wrong
          - condition: state
            entity_id: input_boolean.desired_storage_cmd_mode_correct
            state: "on"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_cmd_mode_correct
      - conditions:
          - condition: trigger
            id: Storage Cmd Mode Correct
          - condition: state
            entity_id: input_boolean.desired_storage_cmd_mode_correct
            state: "off"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_cmd_mode_correct
      - conditions:
          - condition: trigger
            id: Storage Control Mode Wrong
          - condition: state
            entity_id: input_boolean.desired_storage_control_mode_correct
            state: "on"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_control_mode_correct
      - conditions:
          - condition: trigger
            id: Storage Control Mode Correct
          - condition: state
            entity_id: input_boolean.desired_storage_control_mode_correct
            state: "off"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_control_mode_correct
mode: single

### All Heating Automations

alias: HEATING - All Automations
description: >-
  Detects when a window is open or closed and sets heating on or off in that
  room. Detects when no-one is home and turns heating off.
trigger:
  - platform: state
    entity_id:
      - person.david_forrester
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: Dave Away
  - platform: state
    entity_id:
      - person.david_forrester
    from: not_home
    to: home
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: Dave Home
  - platform: state
    entity_id:
      - person.gem_forrester
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: Gem Away
  - platform: state
    entity_id:
      - person.gem_forrester
    from: not_home
    to: home
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: Gem Home
  - platform: state
    entity_id:
      - binary_sensor.front_door_sense_contact
      - binary_sensor.back_door_sensor_contact
      - binary_sensor.side_door_sensor_contact
      - binary_sensor.kitchen_window_left_contact
      - binary_sensor.kitchen_window_right_contact
      - binary_sensor.living_room_window_left_contact
      - binary_sensor.living_room_window_right_contact
      - binary_sensor.hallway_window_contact
    to: "on"
    id: Downstairs Door or Window Open
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
      - binary_sensor.front_door_sense_contact
      - binary_sensor.back_door_sensor_contact
      - binary_sensor.side_door_sensor_contact
      - binary_sensor.kitchen_window_left_contact
      - binary_sensor.kitchen_window_right_contact
      - binary_sensor.living_room_window_left_contact
      - binary_sensor.living_room_window_right_contact
      - binary_sensor.hallway_window_contact
    to: "off"
    id: Downstairs Door or Window Closed
  - type: opened
    platform: device
    device_id: e6ba853c7dec9cf8415d6881aa429444
    entity_id: binary_sensor.dining_room_window_right_contact
    domain: binary_sensor
    id: Dining Room Window Right Open
  - type: not_opened
    platform: device
    device_id: e6ba853c7dec9cf8415d6881aa429444
    entity_id: binary_sensor.dining_room_window_right_contact
    domain: binary_sensor
    id: Dining Room Window Right Closed
  - type: opened
    platform: device
    device_id: f9aaa501ddaeabde9538648caab6c975
    entity_id: binary_sensor.cloakroom_window_contact
    domain: binary_sensor
    id: Cloakroom Window Open
  - type: not_opened
    platform: device
    device_id: f9aaa501ddaeabde9538648caab6c975
    entity_id: binary_sensor.cloakroom_window_contact
    domain: binary_sensor
    id: Cloakroom Window Closed
  - type: opened
    platform: device
    device_id: 5af72a1353a555c5830dcba725c7cf23
    entity_id: binary_sensor.en_suite_window_sensor_contact
    domain: binary_sensor
    id: En-Suite Window Open
  - type: not_opened
    platform: device
    device_id: 5af72a1353a555c5830dcba725c7cf23
    entity_id: binary_sensor.en_suite_window_sensor_contact
    domain: binary_sensor
    id: En-Suite Window Closed
  - type: opened
    platform: device
    device_id: 13a27670b56ff35704df9339e2a668a1
    entity_id: binary_sensor.office_window_sensor_contact
    domain: binary_sensor
    id: Office Window Open
  - type: not_opened
    platform: device
    device_id: 13a27670b56ff35704df9339e2a668a1
    entity_id: binary_sensor.office_window_sensor_contact
    domain: binary_sensor
    id: Office Window Closed
  - platform: state
    entity_id:
      - binary_sensor.main_bedroom_window_left_contact
      - binary_sensor.main_bedroom_window_right_contact
    to: "on"
    id: Bedroom Window Open
  - platform: state
    entity_id:
      - binary_sensor.main_bedroom_window_left_contact
      - binary_sensor.main_bedroom_window_right_contact
    to: "off"
    id: Bedroom Window Closed
  - platform: state
    entity_id:
      - binary_sensor.guest_bedroom_window_left_contact
      - binary_sensor.guest_bedroom_window_right_contact
    id: Guest Bedroom Window Open
    to: "on"
  - platform: state
    entity_id:
      - binary_sensor.guest_bedroom_window_left_contact
      - binary_sensor.guest_bedroom_window_right_contact
    to: "off"
    id: Guest Bedroom Window Closed
  - platform: state
    entity_id:
      - binary_sensor.sean_s_bedroom_window_left_contact
      - binary_sensor.sean_s_bedroom_window_right_contact
      - binary_sensor.jamie_s_bedroom_window_left_contact
      - binary_sensor.bathroom_window_contact
      - binary_sensor.jamie_s_bedroom_window_right_contact
    to: "on"
    id: Upstairs Windows Open
  - platform: state
    entity_id:
      - binary_sensor.sean_s_bedroom_window_left_contact
      - binary_sensor.sean_s_bedroom_window_right_contact
      - binary_sensor.bathroom_window_contact
      - binary_sensor.jamie_s_bedroom_window_left_contact
      - binary_sensor.jamie_s_bedroom_window_right_contact
    to: "off"
    id: Upstairs Windows Closed
  - platform: state
    entity_id:
      - binary_sensor.kids_bathroom_window_left_contact
      - binary_sensor.kids_bathroom_window_right_contact
    to: "on"
    id: Kids Bathroom Window Open
  - platform: state
    entity_id:
      - binary_sensor.kids_bathroom_window_left_contact
      - binary_sensor.kids_bathroom_window_right_contact
    to: "off"
    id: Kids Bathroom Window Closed
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Dave Away
          - condition: state
            entity_id: person.gem_forrester
            state: not_home
          - condition: or
            conditions:
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: "On"
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: Auto
        sequence:
          - service: script.heating_turn_off_all_radiators
            data: {}
      - conditions:
          - condition: trigger
            id: Gem Away
          - condition: state
            entity_id: person.david_forrester
            state: not_home
          - condition: or
            conditions:
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: "On"
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: Auto
        sequence:
          - service: script.heating_turn_off_all_radiators
            data: {}
      - conditions:
          - condition: trigger
            id: Dave Home
          - condition: state
            entity_id: person.gem_forrester
            state: not_home
          - condition: state
            entity_id: input_select.desired_heating_mode
            state: Auto
        sequence:
          - service: script.heating_resume_schedule_all_radiators
            data: {}
      - conditions:
          - condition: trigger
            id: Gem Home
          - condition: state
            entity_id: person.david_forrester
            state: not_home
          - condition: state
            entity_id: input_select.desired_heating_mode
            state: Auto
        sequence:
          - service: script.heating_resume_schedule_all_radiators
            data: {}
      - conditions:
          - condition: trigger
            id: Downstairs Door or Window Open
          - condition: or
            conditions:
              - condition: device
                device_id: 84daad158322931a2b14ee69a6a9c8f5
                domain: climate
                entity_id: climate.downstairs
                type: is_hvac_mode
                hvac_mode: auto
              - condition: device
                device_id: 84daad158322931a2b14ee69a6a9c8f5
                domain: climate
                entity_id: climate.downstairs
                type: is_hvac_mode
                hvac_mode: heat
            alias: Test if heating is on or in auto
        sequence:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: "off"
            alias: Turn off heating downstairs
            target:
              entity_id: climate.downstairs
      - conditions:
          - condition: trigger
            id: Downstairs Door or Window Closed
        sequence:
          - if:
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: Auto
            then:
              - service: climate.set_hvac_mode
                data:
                  hvac_mode: auto
                target:
                  entity_id: climate.downstairs
      - conditions:
          - condition: trigger
            id: Cloakroom Window Open
          - condition: or
            conditions:
              - condition: device
                device_id: 2fe808a84c082db3968a4d856fe6e8ef
                domain: climate
                entity_id: climate.cloakroom
                type: is_hvac_mode
                hvac_mode: auto
              - condition: device
                device_id: 2fe808a84c082db3968a4d856fe6e8ef
                domain: climate
                entity_id: climate.cloakroom
                type: is_hvac_mode
                hvac_mode: heat
            alias: Test if heating is on or in auto
        sequence:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: "off"
            target:
              entity_id: climate.cloakroom
      - conditions:
          - condition: trigger
            id: Cloakroom Window Closed
        sequence:
          - if:
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: Auto
            then:
              - service: climate.set_hvac_mode
                data:
                  hvac_mode: auto
                target:
                  entity_id: climate.cloakroom
      - conditions:
          - condition: trigger
            id: En-Suite Window Open
          - condition: or
            conditions:
              - condition: device
                device_id: 2912cee70e19436c9d6795287d1cf8c9
                domain: climate
                entity_id: climate.en_suite_bathroom
                type: is_hvac_mode
                hvac_mode: auto
              - condition: device
                device_id: 2912cee70e19436c9d6795287d1cf8c9
                domain: climate
                entity_id: climate.en_suite_bathroom
                type: is_hvac_mode
                hvac_mode: heat
            alias: Heating is on or in auto
        sequence:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: "off"
            target:
              entity_id: climate.en_suite_bathroom
      - conditions:
          - condition: trigger
            id: En-Suite Window Closed
        sequence:
          - if:
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: Auto
            then:
              - service: climate.set_hvac_mode
                data:
                  hvac_mode: auto
                target:
                  entity_id: climate.en_suite_bathroom
      - conditions:
          - condition: trigger
            id: Office Window Open
          - condition: or
            conditions:
              - condition: device
                device_id: 71a6edc5565513cdbe48f2b5c45189fa
                domain: climate
                entity_id: climate.office
                type: is_hvac_mode
                hvac_mode: auto
              - condition: device
                device_id: 71a6edc5565513cdbe48f2b5c45189fa
                domain: climate
                entity_id: climate.office
                type: is_hvac_mode
                hvac_mode: heat
            alias: Test if heating is on or in auto
        sequence:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: "off"
            target:
              entity_id: climate.office
      - conditions:
          - condition: trigger
            id: Office Window Closed
        sequence:
          - if:
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: Auto
            then:
              - service: climate.set_hvac_mode
                data:
                  hvac_mode: auto
                target:
                  entity_id: climate.office
      - conditions:
          - condition: trigger
            id: Bedroom Window Open
          - condition: or
            conditions:
              - condition: device
                device_id: 5b51bb0d00f12ec04c45d29296b6b9ee
                domain: climate
                entity_id: climate.master_bedroom
                type: is_hvac_mode
                hvac_mode: heat
              - condition: device
                device_id: 5b51bb0d00f12ec04c45d29296b6b9ee
                domain: climate
                entity_id: climate.master_bedroom
                type: is_hvac_mode
                hvac_mode: auto
            alias: Test if heating is on or in auto
        sequence:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: "off"
            target:
              entity_id: climate.master_bedroom
      - conditions:
          - condition: trigger
            id: Bedroom Window Closed
        sequence:
          - if:
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: Auto
            then:
              - service: climate.set_hvac_mode
                data:
                  hvac_mode: auto
                target:
                  entity_id:
                    - climate.master_bedroom
      - conditions:
          - condition: trigger
            id: Guest Bedroom Window Open
          - condition: or
            conditions:
              - condition: device
                device_id: bc71698349b1224d4f591b0d87542cb5
                domain: climate
                entity_id: climate.guest_bedroom
                type: is_hvac_mode
                hvac_mode: heat
              - condition: device
                device_id: bc71698349b1224d4f591b0d87542cb5
                domain: climate
                entity_id: climate.guest_bedroom
                type: is_hvac_mode
                hvac_mode: auto
            alias: Test if heating is on or in auto
        sequence:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: "off"
            target:
              entity_id:
                - climate.guest_bedroom
      - conditions:
          - condition: trigger
            id: Guest Bedroom Window Closed
        sequence:
          - if:
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: Auto
            then:
              - service: climate.set_hvac_mode
                data:
                  hvac_mode: auto
                target:
                  entity_id:
                    - climate.guest_bedroom
      - conditions:
          - condition: trigger
            id: Upstairs Windows Open
          - condition: or
            conditions:
              - condition: device
                device_id: 4815bc131fac9883b8fc60472f8ac3e2
                domain: climate
                entity_id: climate.upstairs
                type: is_hvac_mode
                hvac_mode: heat
              - condition: device
                device_id: 4815bc131fac9883b8fc60472f8ac3e2
                domain: climate
                entity_id: climate.upstairs
                type: is_hvac_mode
                hvac_mode: auto
            alias: Test if heating is on or in auto
        sequence:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: "off"
            target:
              entity_id:
                - climate.upstairs
      - conditions:
          - condition: trigger
            id: Upstairs Windows Closed
        sequence:
          - if:
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: Auto
            then:
              - service: climate.set_hvac_mode
                data:
                  hvac_mode: auto
                target:
                  entity_id:
                    - climate.upstairs
      - conditions:
          - condition: trigger
            id: Kids Bathroom Window Open
          - condition: or
            conditions:
              - condition: device
                device_id: 4815bc131fac9883b8fc60472f8ac3e2
                domain: climate
                entity_id: climate.kids_bathroom
                type: is_hvac_mode
                hvac_mode: heat
              - condition: device
                device_id: 4815bc131fac9883b8fc60472f8ac3e2
                domain: climate
                entity_id: climate.kids_bathroom
                type: is_hvac_mode
                hvac_mode: auto
            alias: Test if heating is on or in auto
        sequence:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: "off"
            target:
              entity_id: climate.kids_bathroom
      - conditions:
          - condition: trigger
            id: Kids Bathroom Window Closed
        sequence:
          - if:
              - condition: state
                entity_id: input_select.desired_heating_mode
                state: Auto
            then:
              - service: climate.set_hvac_mode
                data:
                  hvac_mode: auto
                target:
                  entity_id:
                    - climate.kids_bathroom
mode: single

### Security System Automation 

alias: Security System
description: A door or window is open and sentry mode is active.
trigger:
  - platform: state
    entity_id:
      - binary_sensor.back_door_sensor_contact
      - binary_sensor.front_door_sense_contact
      - binary_sensor.side_door_sensor_contact
      - binary_sensor.cloakroom_window_contact
      - binary_sensor.hallway_window_contact
      - binary_sensor.kitchen_window_left_contact
      - binary_sensor.kitchen_window_right_contact
      - binary_sensor.living_room_window_left_contact
      - binary_sensor.living_room_window_right_contact
      - binary_sensor.dining_room_window_left_contact
      - binary_sensor.dining_room_window_right_contact
      - binary_sensor.en_suite_window_sensor_contact
      - binary_sensor.office_window_sensor_contact
      - binary_sensor.garage_door_left_contact
      - binary_sensor.garage_door_right_contact
      - binary_sensor.main_bedroom_window_left_contact
      - binary_sensor.main_bedroom_window_right_contact
      - binary_sensor.bathroom_window_contact
      - binary_sensor.guest_bedroom_window_left_contact
      - binary_sensor.guest_bedroom_window_right_contact
      - binary_sensor.sean_s_bedroom_window_left_contact
      - binary_sensor.sean_s_bedroom_window_right_contact
      - binary_sensor.jamie_s_bedroom_window_left_contact
      - binary_sensor.jamie_s_bedroom_window_right_contact
      - binary_sensor.kids_bathroom_window_left_contact
      - binary_sensor.kids_bathroom_window_right_contact
    to: "on"
    id: Activate
  - platform: state
    entity_id:
      - binary_sensor.back_door_sensor_contact
      - binary_sensor.front_door_sense_contact
      - binary_sensor.side_door_sensor_contact
      - binary_sensor.cloakroom_window_contact
      - binary_sensor.hallway_window_contact
      - binary_sensor.kitchen_window_left_contact
      - binary_sensor.kitchen_window_right_contact
      - binary_sensor.living_room_window_left_contact
      - binary_sensor.living_room_window_right_contact
      - binary_sensor.dining_room_window_left_contact
      - binary_sensor.dining_room_window_right_contact
      - binary_sensor.en_suite_window_sensor_contact
      - binary_sensor.office_window_sensor_contact
      - binary_sensor.garage_door_left_contact
      - binary_sensor.garage_door_right_contact
      - binary_sensor.bathroom_window_contact
      - binary_sensor.guest_bedroom_window_left_contact
      - binary_sensor.guest_bedroom_window_right_contact
      - binary_sensor.main_bedroom_window_left_contact
      - binary_sensor.main_bedroom_window_right_contact
      - binary_sensor.sean_s_bedroom_window_left_contact
      - binary_sensor.sean_s_bedroom_window_right_contact
      - binary_sensor.jamie_s_bedroom_window_left_contact
      - binary_sensor.jamie_s_bedroom_window_right_contact
      - binary_sensor.kids_bathroom_window_left_contact
      - binary_sensor.kids_bathroom_window_right_contact
    to: "off"
    id: Clear
  - platform: state
    entity_id:
      - person.gem_forrester
    to: home
    id: Gem Home
  - platform: state
    entity_id:
      - person.david_forrester
    to: home
    id: Dave Home
    enabled: true
  - platform: state
    entity_id:
      - group.residents
    from: home
    to: not_home
    id: We've all gone out
  - platform: state
    entity_id:
      - group.residents
    from: not_home
    to: home
    id: We're all home again
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Activate
          - condition: state
            entity_id: input_boolean.sentry_mode
            state: "on"
        sequence:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.security_issue
      - conditions:
          - condition: trigger
            id: Clear
          - condition: state
            entity_id: input_boolean.sentry_mode
            state: "on"
        sequence:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.security_issue
      - conditions:
          - condition: trigger
            id: We've all gone out
          - condition: state
            entity_id: input_boolean.sentry_mode
            state: "off"
        sequence:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.sentry_mode
      - conditions:
          - condition: trigger
            id: Gem Home
          - condition: state
            entity_id: input_boolean.sentry_mode
            state: "on"
          - condition: not
            conditions:
              - condition: state
                entity_id: person.david_forrester
                state: home
            alias: Confirm Dave is not home
        sequence:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.sentry_mode
      - conditions:
          - condition: trigger
            id: Dave Home
          - condition: state
            entity_id: input_boolean.sentry_mode
            state: "on"
          - condition: not
            conditions:
              - condition: state
                entity_id: person.gem_forrester
                state: home
            alias: Confirm Gem is not home
        sequence:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.sentry_mode
mode: single

### Home Announcements

alias: Home Announcements
description: ""
trigger:
  - platform: time
    at: input_datetime.school_night
    alias: School Night bedtime for the boys
    id: School Night Bedtime Boys
  - platform: time
    at: input_datetime.non_school_night
    alias: Non-School Night bedtime for boys
    id: Non School Bedtime
  - platform: time
    at: input_datetime.school_pick_up_time_mon_to_thurs
    id: School pick up
    alias: School Pick Up Time
  - platform: time
    at: input_datetime.school_pick_up_time_friday
    id: Friday School Pick Up Time
    alias: "School Pick Up - Friday "
  - platform: time
    at: input_datetime.get_ready_for_school_at
    id: Get ready for school
    alias: Get ready for school
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: School Night Bedtime Boys
          - condition: state
            entity_id: binary_sensor.schoolnight
            state: "on"
            alias: Confirm School Night
        sequence:
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{
                states('input_number.alexa_volume_level_announcements')|float(0)}}
            alias: Set volume everywhere based on an input number helper
            target:
              entity_id: media_player.everywhere_2
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: notify.alexa_media_everywhere_2
            data:
              data:
                type: announce
                method: all
              message: >-
                {{ [  'Sean and Jamie. Its time for bed.  Upstairs and brush
                your teeth',           
                      'Boys, its time for you to visit the land of nod. Upstairs please and brush your teeth',           
                      'Sean and Jamie. The time has come to say goodnight. To say sleep tight till the morning light',                    
                      'Boys. Thats the end of another day for you both. Please make your way upstairs to bed.  and dont forget to brush your teeth.'         
                    ]|random }}
          - delay:
              hours: 0
              minutes: 0
              seconds: 10
              milliseconds: 0
            enabled: true
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_default_all')|float(0)}}
            alias: Set volume everywhere to default
            enabled: true
            target:
              entity_id: media_player.everywhere_2
      - conditions:
          - condition: trigger
            id: Non School Bedtime
          - condition: state
            entity_id: binary_sensor.schoolnight
            state: "off"
            alias: Confirm Not School Night
        sequence:
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_announcements')|float(0)}}
            alias: Set volume everywhere based on an input number helper
            target:
              entity_id: media_player.everywhere_2
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: notify.alexa_media_everywhere_2
            data:
              data:
                type: announce
                method: all
              message: >-
                {{ [  'Sean and Jamie. Its time for bed.  Upstairs and brush
                your teeth',           
                      'Boys, its time for you to visit the land of nod. Upstairs please and brush your teeth',           
                      'Sean and Jamie. The time has come to say goodnight. To say sleep tight till the morning light',                    
                      'Boys. Thats the end of another day for you both. Please make your way upstairs to bed.  and dont forget to brush your teeth.'         
                    ]|random }}
          - delay:
              hours: 0
              minutes: 0
              seconds: 10
              milliseconds: 0
            enabled: true
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_default_all')|float(0)}}
            alias: Set volume everywhere to default
            target:
              entity_id: media_player.everywhere_2
            enabled: true
      - conditions:
          - condition: trigger
            id: Get ready for school
          - condition: or
            conditions:
              - condition: state
                entity_id: binary_sensor.schoolday
                state: "on"
              - condition: state
                entity_id: binary_sensor.fridayschool
                state: "on"
        sequence:
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_announcements')|float(0)}}
            alias: Set volume everywhere based on an input number helper
            target:
              entity_id: media_player.everywhere_2
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
            alias: Wait 2s
          - service: notify.alexa_media_everywhere_2
            data:
              data:
                type: announce
                method: all
              message: >-
                {{ [  'Sean and Jamie. Its time to get dressed. You first
                Sean',           
                      'Sean and Jamie. Its time to get dressed. You first Jamie',           
                   ]|random }}
          - delay:
              hours: 0
              minutes: 10
              seconds: 0
              milliseconds: 0
            alias: 10 minutes later.
          - service: notify.alexa_media_everywhere_2
            data:
              message: >-
                {{ [  'Sean and Jamie. Its time to go upstairs and brush your
                teeth.  No pushing, no running, its not a race',           
                      'Sean and Jamie. Its time to brush your teeth. Please go upstairs in an orderly fashion and no pushing or running',           
                   ]|random }}
              title: BRUSH TEETH
              data:
                type: announce
                method: all
          - delay:
              hours: 0
              minutes: 0
              seconds: 10
              milliseconds: 0
            alias: 10s later
          - service: switch.turn_off
            data: {}
            target:
              entity_id: switch.living_room_tv
            enabled: true
          - service: media_player.turn_off
            data: {}
            target:
              entity_id: media_player.sky_q_main
            enabled: true
          - delay:
              hours: 0
              minutes: 10
              seconds: 0
              milliseconds: 0
            alias: 10 minutes later.
          - service: notify.alexa_media_everywhere_2
            data:
              message: >-
                {{ [  'Sean and Jamie. If you are still here, you are late for
                school',           
                      'Mummy and daddy. If Sean and Jamie have not left for school yet, why not', 
                      'Come on folks. Get your skates on and get out the door. School will not wait for you'
                   ]|random }}
              title: LATE FOR SCHOOL
              data:
                type: announce
                method: all
          - delay:
              hours: 0
              minutes: 0
              seconds: 10
              milliseconds: 0
            alias: 10s later
            enabled: true
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_default_all')|float(0)}}
            alias: Set volume everywhere to default
            target:
              entity_id: media_player.everywhere_2
      - conditions:
          - condition: trigger
            id: School pick up
          - condition: state
            entity_id: binary_sensor.schoolday
            state: "on"
            alias: Check it's a school day
        sequence:
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_announcements')|float(0)}}
            alias: Set volume everywhere based on an input number helper
            target:
              entity_id: media_player.everywhere_2
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: notify.alexa_media_everywhere_2
            data:
              message: >-
                {{ [  'It is almost time for the school pickup.  Please prepare
                to pick up the boys',           
                      'Mummy. I know you are in the middle of something, but it is almost time to pick up the boys from school',
                      'Mummy. Its time to clock out and get the boys from School.  Chop, chop!',
                      'Breaking news! I have received a message from the school pick up fairies telling me they are on strike. I guess that means you will have to go and pick up the boys.'
                   ]|random }}
              title: SCHOOL PICK UP
              data:
                type: announce
                method: all
          - delay:
              hours: 0
              minutes: 0
              seconds: 10
              milliseconds: 0
            enabled: true
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_default_all')|float(0)}}
            alias: Set volume everywhere to default
            target:
              entity_id: media_player.everywhere_2
      - conditions:
          - condition: trigger
            id: Friday School Pick Up Time
          - condition: state
            entity_id: binary_sensor.fridayschool
            state: "on"
            alias: Confirm it's a Friday School Day
        sequence:
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_announcements')|float(0)}}
            target:
              entity_id: media_player.everywhere_2
            alias: Set volume everywhere based on an input number helper
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: notify.alexa_media_everywhere_2
            data:
              data:
                type: announce
                method: all
              message: >-
                {{ [  'It is almost time for the school pickup.  Please prepare
                to pick up the boys',           
                      'Mummy. I know you are in the middle of something, but it is almost time to pick up the boys from school',
                      'Mummy. Its time to clock out and get the boys from School.  Chop, chop!',
                      'Breaking news! I have received a message from the school pick up fairies telling me they are on strike. I guess that means you will have to go and pick up the boys.'
                   ]|random }}
          - delay:
              hours: 0
              minutes: 0
              seconds: 10
              milliseconds: 0
            enabled: true
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_default_all')|float(0)}}
            target:
              entity_id: media_player.everywhere_2
            alias: Set volume everywhere to default
            enabled: true
mode: single


### Washing Machine All Automations 

alias: Washing Machine - All Automations
description: >-
  Set the value of input boolean "washing machine on/off" based on power
  consumption. Announce when the washing has finished and check the washing has
  been removed.
trigger:
  - platform: numeric_state
    entity_id: sensor.shelly1pm_e89f6d84a584_power
    above: 10
    id: Washing Machine On
    alias: Washing machine drawing more than 10W power
  - platform: numeric_state
    entity_id: sensor.shelly1pm_e89f6d84a584_power
    below: 5
    id: Washing machine off
    alias: Washing machine drawing less than 5W power for 30s.
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
      - binary_sensor.washing_machine_door_battery_low
    from: "off"
    to: "on"
    id: Door Sensor Battery Low
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.washing_machine_door_open
    id: Washing machine door not open
    alias: Washing done notification repeat with timer
  - type: opened
    platform: device
    device_id: 3d59452e68f6f274a7d4ee5c1c408410
    entity_id: binary_sensor.washing_machine_door_contact
    domain: binary_sensor
    id: Washing removed from machine
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Washing Machine On
        sequence:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.washing_machine_on_off
      - conditions:
          - condition: trigger
            id: Washing machine off
        sequence:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.washing_machine_on_off
          - delay:
              hours: 0
              minutes: 1
              seconds: 0
              milliseconds: 0
          - if:
              - condition: state
                entity_id: input_boolean.washing_machine_on_off
                state: "off"
              - condition: state
                entity_id: binary_sensor.quiet_time
                state: "off"
            then:
              - service: notify.alexa_media_everywhere_2
                data:
                  message: >-
                    {{ [  'Thats the washing done. Better get it hung up to
                    dry',   
                          'I have detected a reduction in the power consumption of the washing machine.  I guess that means it is finished',   
                          'The rotational velocity of the washing machine has reduced to zero. You know what to do',   
                          'The washing machine has finished its cycle. I would hang the washing out to dry, but I dont have any arms or legs.  So I guess its up you'     
                        ]|random }}
                  title: EMPTY THE WASHING MACHINE
                  data:
                    type: announce
                    method: all
              - service: notify.mobile_app_{{states('input_text.my_mobile_phone_id')}}
                data:
                  message: That's the washing done. Better get it hung up.
                  title: WASHING MACHINE
                alias: Send a notification based on an input text helper
              - service: >-
                  notify.mobile_app_{{states('input_text.gem_s_mobile_phone_id')}}
                data:
                  message: That's the washing done. Better get it hung up.
                  title: WASHING MACHINE
                alias: Send a notification based on an input text helper
              - service: timer.start
                data: {}
                target:
                  entity_id: timer.washing_machine_door_open
      - conditions:
          - condition: trigger
            id: Door Sensor Battery Low
        sequence:
          - service: notify.mobile_app_{{states('input_text.my_mobile_phone_id')}}
            data:
              message: Washing machine door sensor battery low
              title: WASHING MACHINE
            alias: Send a notification based on an input text helper
      - conditions:
          - condition: trigger
            id: Washing machine door not open
          - condition: state
            entity_id: binary_sensor.washing_machine_door_contact
            state: "off"
        sequence:
          - service: notify.alexa_media_everywhere_2
            data:
              message: >-
                {{ [  'The washing is still in the machine. Better get it out
                before it starts to smell',   
                      'I have detected zero activity since I last informed you that the washing was done. Get off your backside as the washing wont hang itself up',   
                      'Okay, heres is the deal. I tell you the washing is done, and you hang it up.  Someone is not keeping their side of the deal',   
                      'Have you noticed the lovely breeze blowing through the nice clean washing?  No, me neither.  Best get it hung out then'     
                    ]|random }}
              title: EMPTY THE WASHING MACHINE
              data:
                type: announce
                method: all
          - service: notify.mobile_app_{{states('input_text.my_mobile_phone_id')}}
            data:
              message: >-
                The washing is still in the machine. Better hang it up before it
                starts to smell.
              title: SMELLY WASHING!
            alias: Send a notification based on an input text helper
          - service: notify.mobile_app_{{states('input_text.gem_s_mobile_phone_id')}}
            data:
              message: >-
                The washing is still in the machine. Better hang it up before it
                starts to smell.
              title: SMELLY WASHING!
            alias: Send a notification based on an input text helper
      - conditions:
          - condition: trigger
            id: Washing removed from machine
          - condition: state
            entity_id: timer.washing_machine_door_open
            state: active
        sequence:
          - service: timer.cancel
            data: {}
            target:
              entity_id: timer.washing_machine_door_open
mode: single



### Travel Announcements 

alias: Travel Automations
description: Checks waze travel time entity for Gem being closer than 5 minutes away
trigger:
  - platform: numeric_state
    entity_id: sensor.waze_travel_time
    below: 5
    alias: When Gem is less than 5 minutes away
    id: Gem almost home
  - platform: numeric_state
    entity_id: zone.gem_work
    id: Gem at work
    alias: Gem is at work
    above: 0
  - platform: numeric_state
    entity_id: zone.gem_work
    alias: Gem left work
    id: Gem left work
    below: 1
  - platform: numeric_state
    entity_id: sensor.waze_travel_time_2
    below: 5
    alias: When Dave is less than 5 minutes away
    id: Dave almost home
  - platform: numeric_state
    entity_id: zone.dave_s_mum_and_dad
    id: Dave is at his mum and dad's
    alias: "Dave is at his mum and dad's "
    above: 0
  - platform: numeric_state
    entity_id: zone.dave_s_mum_and_dad
    alias: "Dave left his mum and dad's "
    id: "Dave left his mum and dad's "
    below: 1
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Gem at work
        sequence:
          - service: notify.mobile_app_daves_samsung_galaxy
            data:
              message: Gem's got to work
              title: GEM AT WORK
          - if:
              - condition: state
                entity_id: binary_sensor.quiet_time
                state: "off"
            then:
              - service: notify.alexa_media_everywhere
                data:
                  message: Gem is at work
                  title: GEM AT WORK
                  data:
                    type: announce
                    method: all
            alias: If quiet time off, announce on Alexa everywhere group
      - conditions:
          - condition: trigger
            id: Gem almost home
          - condition: state
            entity_id: binary_sensor.quiet_time
            state: "off"
        sequence:
          - service: notify.alexa_media_everywhere
            data:
              message: Mummy is nearly home. Best get the kettle on.
              title: MUMMY NEARLY HOME
              data:
                type: announce
                method: all
      - conditions:
          - condition: trigger
            id: Gem left work
        sequence:
          - service: notify.mobile_app_daves_samsung_galaxy
            data:
              message: Gem has left work
              title: GEM LEFT WORK
          - service: notify.alexa_media_everywhere
            data:
              message: >-
                Mummy has left the office and is on her way home. She'll be home
                in {{ state_attr('sensor.gem_at_work' , 'duration') | round(0)}}
                minutes.
              title: MUMMY LEFT OFFICE
              data:
                type: announce
                method: all
      - conditions:
          - condition: trigger
            id: Dave is at his mum and dad's
        sequence:
          - service: notify.alexa_media_everywhere
            data:
              message: "Dave is at his mum and dad's "
              title: DAVE IN DUNDEE
              data:
                type: announce
                method: all
          - service: notify.mobile_app_sm_s901b
            data:
              message: "Dave is at his mum and dad's "
              title: DAVE IS IN DUNDEE
      - conditions:
          - condition: trigger
            id: Dave almost home
        sequence:
          - if:
              - condition: state
                entity_id: binary_sensor.quiet_time
                state: "off"
            then:
              - service: notify.alexa_media_everywhere
                data:
                  message: >-
                    Daddy will be home in 5 minutes. Make sure his dinner is on
                    the table.
                  title: DADDY ALMOST HOME
                  data:
                    type: announce
                    method: all
            alias: If quiet time is off, announce on Alexa everywhere group.
          - service: notify.mobile_app_sm_s901b
            data:
              message: Dave is almost home
              title: DAVE 5 MINS AWAY
            alias: Notify Gem's phone
      - conditions:
          - condition: trigger
            id: "Dave left his mum and dad's "
        sequence:
          - service: notify.alexa_media_everywhere
            data:
              message: >-
                Daddy is on his way home. He'll be home in {{
                state_attr('sensor.dave_in_dundee' , 'duration') | round(0)}}
                minutes.
              title: DADDY LEFT DUNDEE
              data:
                type: announce
                method: all
          - service: notify.mobile_app_sm_s901b
            data:
              message: Dave has left Dundee
              title: DAVE LEFT
            alias: Notify Gem's phone
mode: single

### Magic Cube

alias: Magic Cube Stuff
description: ""
trigger:
  - platform: state
    entity_id:
      - sensor.magic_cube_side
    to: "1"
    id: Side 1
  - platform: state
    entity_id:
      - sensor.magic_cube_side
    to: "2"
    id: Side 2
  - platform: state
    entity_id:
      - sensor.magic_cube_side
    to: "3"
    id: Side 3
  - platform: state
    entity_id:
      - sensor.magic_cube_side
    to: "4"
    id: Side 4
  - platform: state
    entity_id:
      - sensor.magic_cube_side
    to: "5"
    id: Side 5
  - platform: state
    entity_id:
      - sensor.magic_cube_side
    to: "6"
    id: Side 6
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Side 1
        sequence:
          - repeat:
              until:
                - condition: device
                  type: is_on
                  device_id: fe14412dad5f3533658dd5f75cbad5f2
                  entity_id: switch.ingrid_socket_1
                  domain: switch
              sequence:
                - type: turn_on
                  device_id: fe14412dad5f3533658dd5f75cbad5f2
                  entity_id: switch.ingrid_socket_1
                  domain: switch
          - service: media_player.turn_on
            data: {}
            target:
              device_id: 2285e887e55f34f8b3cfd7d7e8e58f6a
          - service: notify.alexa_media_kitchen_echo_show
            data:
              message: |-
                {{ [  'Kitchen media system activated',
                      'Hailing frequencies open',
                      'The kitchen televisual devices have been turned on',         
                      'Time to see what is on the goggle box',
                      'Shall we see what is on the telly today?',
                    ]|random }}
              data:
                type: tts
                method: all
      - conditions:
          - condition: trigger
            id: Side 2
        sequence:
          - repeat:
              until:
                - condition: device
                  type: is_off
                  device_id: fe14412dad5f3533658dd5f75cbad5f2
                  entity_id: switch.ingrid_socket_1
                  domain: switch
              sequence:
                - type: turn_off
                  device_id: fe14412dad5f3533658dd5f75cbad5f2
                  entity_id: switch.ingrid_socket_1
                  domain: switch
          - service: media_player.turn_off
            data: {}
            target:
              device_id: 2285e887e55f34f8b3cfd7d7e8e58f6a
          - service: notify.alexa_media_kitchen_echo_show
            data:
              data:
                type: tts
                method: speak
              message: |-
                {{ [  'Kitchen media system deactivated',           
                      'Hailing frequencies closed',           
                      'The kitchen televisual devices have been turned off',                    
                      'Time to see what is going on in the real world',          
                      'Now that you have had your fill of tv, it is time to return to reality',         
                    ]|random }}
      - conditions:
          - condition: trigger
            id: Side 3
        sequence:
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_announcements')|float(0)}}
            alias: Set Kitchen Echo volume based on an input number helper
            target:
              device_id: 49841004268921a9f26338df9c24c561
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
            alias: Wait 2s
          - service: notify.alexa_media_kitchen_echo_show
            data:
              title: Coffee Timer
              data:
                type: tts
                method: all
              message: |-
                {{ [  'Coffee timer, 4 minutes, starting, now',           
                      'I have begun counting to 240. When I am done, your coffee will be ready',           
                      'Ready, steady, 4 minutes, Go!',                    
                      'When the Earth has rotated by 1 degree, your coffee will be ready',         
                   ]|random }}
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_announcements')|float(0)}}
            target:
              entity_id: media_player.everywhere_2
            alias: Set volume everywhere based on an input number helper
            enabled: true
          - delay:
              hours: 0
              minutes: 4
              seconds: 0
              milliseconds: 0
            alias: Wait 4 minutes
          - service: notify.alexa_media_everywhere_2
            data:
              message: |-
                {{ [  'Your coffee is ready. How would you like it?',          
                      'Mmmmm, smell that coffee. Get it while it is hot',
                      'Your coffee is ready for pouring.',                    
                      'Bing bong. Coffee time!',          
                      'Coffee, coffee everywhere and not a drop to drink. Only kidding. Your coffee is ready',    
                   ]|random
                }}
              title: COFFEE READY
              data:
                type: announce
                method: all
          - delay:
              hours: 0
              minutes: 0
              seconds: 10
              milliseconds: 0
            alias: Wait 10s
            enabled: true
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_default_all')|float(0)}}
            target:
              entity_id: media_player.everywhere_2
            alias: Set volume everywhere to default
            enabled: true
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{states('input_number.alexa_volume_level_default_all')|float(0)}}
            target:
              device_id: 49841004268921a9f26338df9c24c561
            alias: Set volume of kitchen echo show to default
            enabled: true
      - conditions:
          - condition: trigger
            id: Side 6
        sequence:
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{
                states('input_number.alexa_volume_level_announcements')|float(0)}}
            target:
              entity_id: media_player.everywhere_2
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: notify.alexa_media_everywhere_2
            data:
              message: |-
                {{ [ 
                     'Please head to the kitchen where mummy has prepared a delicious meal', 
                     'Food is now being served in the kitchen. Get it while it is hot', 
                     'If you are hungry, the wait is over. Dinner is on the table', 
                     'It is time to head to the kitchen. When you get there, you might just find somefood on the table',
                     'If your tummy is rumbly then rumble on to the kitchen for some yummy food'
                      ]|random }}
              title: DINNER IS READY
              data:
                type: announce
                method: all
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{
                states('input_number.alexa_volume_level_default_all')|float(0)}}
            target:
              entity_id: media_player.everywhere_2
      - conditions:
          - condition: trigger
            id: Side 5
        sequence:
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{
                states('input_number.alexa_volume_level_announcements')|float(0)}}
            target:
              entity_id: media_player.everywhere_2
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: notify.alexa_media_everywhere_2
            data:
              message: |-
                {{ [ 
                     'Please head to the Dining Room where Gemma has prepared a delicious meal', 
                     'Food is now being served in the Dining Room. Get it while it is hot', 
                     'If you are hungry, the wait is over. Dinner is on the Dining Room table', 
                     'It is time to head to the Dining Room. When you get there, you might just find some food on the table',
                     'If your tummy is rumbly then rumble on to the Dining Room for some yummy food'
                      ]|random }}
              title: DINNER IS READY
              data:
                type: announce
                method: all
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0
          - service: media_player.volume_set
            data:
              volume_level: >-
                {{
                states('input_number.alexa_volume_level_default_all')|float(0)}}
            target:
              entity_id: media_player.everywhere_2
mode: single

### Smart Button Downstairs 1

alias: Smart Button Downstairs 1 Automations
description: ""
trigger:
  - platform: state
    entity_id:
      - sensor.smart_button_downstairs_1_action
    attribute: action
    to: release
    id: Good Night
  - platform: state
    entity_id:
      - sensor.smart_button_downstairs_1_action
    to: single
    id: TV & Sky on
  - platform: state
    entity_id:
      - sensor.smart_button_downstairs_1_action
    to: double
    id: TV & Sky off
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Good Night
          - condition: state
            entity_id: binary_sensor.overnight
            state: "on"
        sequence:
          - service: Media_player.play_media
            data:
              entity_id: media_player.kitchen_echo_show
              media_content_id: goodnight
              media_content_type: routine
            alias: Run goodnight routine in Alexa
          - service: media_player.turn_off
            data: {}
            target:
              device_id: 4aa503b5c01d5c68b0ad4341bdc9dd65
            enabled: true
      - conditions:
          - condition: trigger
            id: TV & Sky on
        sequence:
          - service: switch.turn_on
            data: {}
            target:
              entity_id: switch.living_room_tv
          - service: media_player.turn_on
            data: {}
            target:
              entity_id: media_player.sky_q_main
          - service: notify.alexa_media_living_room_dot
            data:
              message: |-
                {{ [  'Living room media system activated',
                      'Hailing frequencies open',
                      'The living room televisual devices have been turned on',         
                      'Time to see what is on the goggle box',
                      'Shall we see what is on the telly today?',
                    ]|random }}
              data:
                type: tts
                method: speak
      - conditions:
          - condition: trigger
            id: TV & Sky off
        sequence:
          - service: switch.turn_off
            data: {}
            target:
              entity_id: switch.living_room_tv
          - service: media_player.turn_off
            data: {}
            target:
              entity_id: media_player.sky_q_main
          - service: notify.alexa_media_living_room_dot
            data:
              data:
                type: tts
                method: speak
              message: |-
                {{ [  'Living room media system deactivated',           
                      'Hailing frequencies closed',           
                      'The living room televisual devices have been turned off',                    
                      'Time to see what is going on in the real world',          
                      'Now that you have had your fill of tv, it is time to return to reality',         
                    ]|random }}
mode: single


### Smart Button Upstairs 1

alias: Smart Button Upstairs 1 Automations
description: ""
trigger:
  - platform: state
    entity_id:
      - sensor.smart_button_upstairs_1_action
    id: Casper & Sky on
    to: single
  - platform: state
    entity_id:
      - sensor.smart_button_upstairs_1_action
    to: double
    id: Casper & Sky off
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Casper & Sky on
        sequence:
          - type: turn_on
            device_id: 9dfd3af87398f6ec9234e9f143e3219a
            entity_id: switch.casper_switch_0
            domain: switch
          - service: media_player.turn_on
            data: {}
            target:
              device_id: 0a8861677f7178f1330be03664c30080
          - if:
              - condition: state
                entity_id: binary_sensor.quiet_time
                state: "off"
            then:
              - service: notify.alexa_media_guest_bedroom_echo_dot
                data:
                  message: |-
                    {{ [  'Bedroom media system activated',
                          'Hailing frequencies open',
                          'The bedroom televisual devices have been turned on',         
                          'Time to see what is on the goggle box',
                          'Shall we see what is on the telly today?',
                        ]|random }}
                  data:
                    type: tts
                    method: speak
      - conditions:
          - condition: trigger
            id: Casper & Sky off
        sequence:
          - type: turn_off
            device_id: 9dfd3af87398f6ec9234e9f143e3219a
            entity_id: switch.casper_switch_0
            domain: switch
          - service: media_player.turn_off
            data: {}
            target:
              device_id: 0a8861677f7178f1330be03664c30080
          - if:
              - condition: state
                entity_id: binary_sensor.quiet_time
                state: "off"
            then:
              - service: notify.alexa_media_guest_bedroom_echo_dot
                data:
                  message: Media system deactivated
                  data:
                    type: tts
                    method: speak
mode: single

###  Rolec EV Chargepoint Schedule

alias: Rolec EV Chargepoint schedule
description: Keeps trying in case Shelly switch becomes unavailable
trigger:
  - platform: time
    at: input_datetime.rolec_wallbox_on
    id: Rolec On
  - platform: time
    at: input_datetime.rolec_wallbox_off
    id: Rolec Off
  - platform: state
    entity_id:
      - switch.shelly1_c45bbe7867c7
    from: unavailable
    id: Rolec Available
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Rolec On
        sequence:
          - type: turn_on
            device_id: e7eb66cdf13a7f21fc1052c0f676589e
            entity_id: switch.shelly1_c45bbe7867c7
            domain: switch
      - conditions:
          - condition: trigger
            id: Rolec Off
        sequence:
          - type: turn_off
            device_id: e7eb66cdf13a7f21fc1052c0f676589e
            entity_id: switch.shelly1_c45bbe7867c7
            domain: switch
      - conditions:
          - condition: trigger
            id: Rolec Available
        sequence:
          - if:
              - condition: time
                after: input_datetime.rolec_wallbox_on
                before: input_datetime.rolec_wallbox_off
            then:
              - type: turn_on
                device_id: e7eb66cdf13a7f21fc1052c0f676589e
                entity_id: switch.shelly1_c45bbe7867c7
                domain: switch
            alias: Turn on Rolec if between on and off times
          - if:
              - condition: state
                entity_id: switch.shelly1_c45bbe7867c7
                state: "on"
            then:
              - service: notify.mobile_app_daves_samsung_galaxy
                data:
                  message: The Rolec is available
                  title: ROLEC AVAILABLE
            alias: When Rolec becomes available, if it turns on, notify me.
mode: single

###  Water Leak Detection

alias: Water Leak Detection and Alarm
description: ""
trigger:
  - platform: state
    entity_id:
      - binary_sensor.leak_detector_dishwasher_water_leak
      - binary_sensor.leak_detector_washing_machine_water_leak
      - binary_sensor.kids_bathroom_leak_detector_water_leak
      - binary_sensor.main_bathroom_leak_detector_water_leak
    to: "on"
    for:
      hours: 0
      minutes: 1
      seconds: 0
condition: []
action:
  - service: notify.mobile_app_{{states('input_text.my_mobile_phone_id')}}
    data:
      message: Water leak detected.
      title: WATER LEAK DETECTED!
    alias: Notify Dave's Mobile based on an input text helper
  - if:
      - condition: state
        entity_id: binary_sensor.quiet_time
        state: "off"
    then:
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          entity_id: media_player.everywhere_2
      - service: notify.alexa_media_everywhere_2
        data:
          message: Alert! Alert! There is a water leak somewhere
          title: WATER LEAK!
          data:
            type: announce
            method: all
      - service: media_player.volume_set
        data:
          volume_level: "{{ states('input_number.alexa_volume_level_default_all')|float(0)}}"
        target:
          entity_id: media_player.everywhere_2
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
  - if:
      - condition: state
        entity_id: binary_sensor.quiet_time
        state: "off"
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.leak_detector_dishwasher_water_leak
            state: "on"
          - condition: state
            entity_id: binary_sensor.leak_detector_washing_machine_water_leak
            state: "on"
    then:
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          area_id: everywhere
      - service: notify.alexa_media_everywhere
        data:
          message: Alert. There is a water leak downstairs.
          title: "ALERT! WATER  LEAK DETECTED DOWNSTAIRS "
          data:
            type: announce
            method: all
      - service: media_player.volume_set
        data:
          volume_level: "{{ states('input_number.alexa_volume_level_default_all')|float(0)}}"
        target:
          area_id: everywhere
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
  - if:
      - condition: state
        entity_id: binary_sensor.quiet_time
        state: "off"
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.leak_detector_dishwasher_water_leak
            state: "on"
          - condition: state
            entity_id: binary_sensor.leak_detector_washing_machine_water_leak
            state: "on"
    then:
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          area_id: everywhere
      - service: notify.alexa_media_everywhere
        data:
          message: Alert. There is a water leak downstairs.
          title: "ALERT! WATER  LEAK DETECTED DOWNSTAIRS "
          data:
            type: announce
            method: all
      - service: media_player.volume_set
        data:
          volume_level: "{{ states('input_number.alexa_volume_level_default_all')|float(0)}}"
        target:
          area_id: everywhere
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
  - if:
      - condition: state
        entity_id: binary_sensor.quiet_time
        state: "off"
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.leak_detector_dishwasher_water_leak
            state: "on"
          - condition: state
            entity_id: binary_sensor.leak_detector_washing_machine_water_leak
            state: "on"
    then:
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          area_id: everywhere
      - service: notify.alexa_media_everywhere
        data:
          message: Alert. There is a water leak downstairs.
          title: "ALERT! WATER  LEAK DETECTED DOWNSTAIRS "
          data:
            type: announce
            method: all
      - service: media_player.volume_set
        data:
          volume_level: "{{ states('input_number.alexa_volume_level_default_all')|float(0)}}"
        target:
          area_id: everywhere
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
  - if:
      - condition: state
        entity_id: binary_sensor.quiet_time
        state: "off"
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.leak_detector_dishwasher_water_leak
            state: "on"
          - condition: state
            entity_id: binary_sensor.leak_detector_washing_machine_water_leak
            state: "on"
    then:
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          area_id: everywhere
      - service: notify.alexa_media_everywhere
        data:
          message: Alert. There is a water leak downstairs.
          title: "ALERT! WATER  LEAK DETECTED DOWNSTAIRS "
          data:
            type: announce
            method: all
      - service: media_player.volume_set
        data:
          volume_level: "{{ states('input_number.alexa_volume_level_default_all')|float(0)}}"
        target:
          area_id: everywhere
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
mode: single


