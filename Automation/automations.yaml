- id: '1673521764382'
  alias: Tado Controller & Bridge Monitor
  description: Notify me if the Tado Controller or Tado Bridge goes offline for more
    than 5 minutes.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bp2744464640_connection_state
    from: 'on'
    to: unavailable
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: Tado Controller Unavailable
  - platform: state
    entity_id:
    - binary_sensor.bp2744464640_connection_state
    from: 'on'
    to: unknown
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: Tado Controller State Unknown
  - type: not_connected
    platform: device
    device_id: 863461778a01242acbfb0853707e2890
    entity_id: binary_sensor.ib1613380096_connection_state
    domain: binary_sensor
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: Tado Bridge Disconnected
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      - condition: or
        conditions:
        - condition: trigger
          id: Tado Controller Unavailable
        - condition: trigger
          id: Tado Controller State Unknown
      sequence:
      - service: notify.mobile_app_{{states('input_text.my_mobile_phone_id')}}
        data:
          message: The heating controller is offline
          title: HEATING
        alias: Send a notification based on an input text helper
      - service: script.speech_engine
        data:
          where: '{{ states(''sensor.room_audio'')}}'
          message: The heating controller is offline
    - conditions:
      - condition: trigger
        id: Tado Bridge Disconnected
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      sequence:
      - service: script.speech_engine
        data:
          where: '{{ states(''sensor.room_audio'')}}'
          message: The tado bridge is offline
  mode: single
- id: '1675186464541'
  alias: Greenhouse Heating Toggle
  description: Turn on and off the greenhouse heater to keep the temperature above
    3 degrees C
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.greenhouse_thermometer_temperature
    below: 1
    id: Greenhouse Heater On
  - platform: numeric_state
    entity_id:
    - sensor.greenhouse_thermometer_temperature
    above: 3
    id: Greenhouse Heater Off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Greenhouse Heater On
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.heater_greenhouse_s1
    - conditions:
      - condition: trigger
        id: Greenhouse Heater Off
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.heater_greenhouse_s1
  mode: single
- id: '1677073569551'
  alias: Hot Water, solar and gas
  description: Turn on the immersion heater when the battery is full and solar export
    is high. Check later in the day and, if needed, heat water with gas.
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.electricity_bill_today
    below: 0
    id: Activate
  - platform: numeric_state
    entity_id:
    - sensor.power_grid_export
    above: 2500
    id: Switch On
    for:
      hours: 0
      minutes: 0
      seconds: 20
  - platform: numeric_state
    entity_id:
    - sensor.power_battery_load
    above: 1000
    id: Switch Off
    for:
      hours: 0
      minutes: 0
      seconds: 20
  - platform: numeric_state
    entity_id:
    - sensor.hot_water_energy_consumption_daily
    above: 6
    id: 6kWh Energy Used
  - platform: time
    at: '16:00:00'
    id: Deactivate
  - alias: Valkyrie off with Timer
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.solar_hot_water_heating
    id: Timer Done
    enabled: true
  - platform: time
    at: '17:30:00'
    id: Time On
  - platform: time
    at: '21:00:00'
    id: Last Check
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Activate
      - condition: sun
        after: sunrise
        before: sunset
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.allow_valkyrie_on
        data: {}
      - condition: numeric_state
        entity_id: sensor.power_grid_export
        above: 2500
      - service: switch.turn_on
        target:
          entity_id: switch.valkyrie_solar_hot_water
        data: {}
      - service: timer.start
        data: {}
        target:
          entity_id:
          - timer.solar_hot_water_heating
    - conditions:
      - condition: trigger
        id:
        - Switch On
      - condition: sun
        after: sunrise
        before: sunset
      - condition: numeric_state
        entity_id: sensor.electricity_bill_today
        below: 0
      - condition: state
        entity_id: input_boolean.allow_valkyrie_on
        state: 'on'
      - condition: state
        entity_id: switch.valkyrie_solar_hot_water
        state: 'off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.valkyrie_solar_hot_water
        data: {}
      - service: timer.start
        data: {}
        target:
          entity_id:
          - timer.solar_hot_water_heating
    - conditions:
      - condition: trigger
        id: Switch Off
      - condition: state
        entity_id: switch.valkyrie_solar_hot_water
        state: 'on'
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.valkyrie_solar_hot_water
        data: {}
      - service: timer.pause
        data: {}
        target:
          entity_id:
          - timer.solar_hot_water_heating
    - conditions:
      - condition: trigger
        id:
        - Deactivate
        - Timer Done
        - 6kWh Energy Used
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.allow_valkyrie_on
        data: {}
      - condition: state
        entity_id: switch.valkyrie_solar_hot_water
        state: 'on'
      - service: switch.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: switch.valkyrie_solar_hot_water
      - service: timer.cancel
        metadata: {}
        data: {}
        target:
          entity_id: timer.solar_hot_water_heating
    - conditions:
      - condition: trigger
        id:
        - Time On
      - condition: numeric_state
        entity_id: sensor.hot_water_energy_consumption_daily
        below: 6
      sequence:
      - service: tado.set_water_heater_timer
        target:
          entity_id: water_heater.hot_water
        data:
          time_period: 00:30:00
    - conditions:
      - condition: trigger
        id:
        - Last Check
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: sensor.hot_water_energy_consumption_daily
          below: 6
        - condition: numeric_state
          entity_id: sensor.octopus_energy_gas_e6e03812572121_7645677109_current_accumulative_consumption_kwh
          below: 6
      sequence:
      - service: tado.set_water_heater_timer
        target:
          entity_id: water_heater.hot_water
        data:
          time_period: 00:30:00
  mode: single
- id: '1677179732831'
  alias: Home Battery Watch
  description: Notify me if there is a problem with the home battery
  trigger:
  - platform: state
    entity_id:
    - sensor.solaredge_b1_status
    to: B_STATUS_IDLE
    id: Home Battery Idle
    for:
      hours: 0
      minutes: 2
      seconds: 0
  - platform: state
    entity_id:
    - sensor.solaredge_b1_status
    to: unavailable
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: Home Battery Unavailable
  - platform: state
    entity_id:
    - sensor.solaredge_b1_status
    to: unknown
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: Home Battery Unknown
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Home Battery Idle
      - condition: sun
        after: sunset
      sequence:
      - service: notify.mobile_app_{{states('input_text.my_mobile_phone_id')}}
        data:
          message: The Home Battery is idle
          title: HOME BATTERY
        alias: Send a notification based on an input text helper
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Home Battery Unavailable
        - condition: trigger
          id: Home Battery Unknown
      sequence:
      - service: notify.mobile_app_{{states('input_text.my_mobile_phone_id')}}
        data:
          message: There is a problem with the Home Battery
          title: HOME BATTERY
        alias: Send a notification based on an input text helper
      - service: script.speech_engine
        data:
          where: '{{ states(''sensor.room_audio'')}}'
          message: There is a problem with the home battery
  mode: single
- id: '1677242524542'
  alias: Granny Charger Toggle
  description: Uses granny charger to charge EV when there is sufficient sunshine
  trigger:
  - platform: state
    entity_id:
    - sensor.solaredge_b1_state_of_energy
    id: Battery Charge Level
  - platform: state
    entity_id:
    - sensor.solar_panel_production_w
    id: Panel Power
  condition: []
  action:
  - choose:
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id: Panel Power
        - condition: state
          entity_id: switch.valkyrie_switch_1
          state: 'on'
          enabled: false
        - condition: device
          type: is_off
          device_id: 3e12cbf22e7fcfd5924b41a20289cc2b
          entity_id: switch.granny_charger_local
          domain: switch
        - type: is_battery_level
          condition: device
          device_id: fde0fef8291e927bf8ae0d38ba5e36ce
          entity_id: sensor.solaredge_b1_state_of_energy
          domain: sensor
          above: 95
          alias: Battery state of energy is more than 95%
        - condition: numeric_state
          entity_id: sensor.solar_exported_power_w
          above: 2500
          alias: Exported power is more than 2500W
      sequence:
      - type: turn_on
        device_id: 3e12cbf22e7fcfd5924b41a20289cc2b
        entity_id: switch.granny_charger_local
        domain: switch
    - conditions:
      - condition: and
        conditions:
        - condition: trigger
          id: Battery Charge Level
        - condition: numeric_state
          entity_id: sensor.solar_house_consumption_w
          above: sensor.solar_panel_production_w
        - condition: device
          type: is_on
          device_id: 3e12cbf22e7fcfd5924b41a20289cc2b
          entity_id: switch.granny_charger_local
          domain: switch
      sequence:
      - type: turn_off
        device_id: 3e12cbf22e7fcfd5924b41a20289cc2b
        entity_id: switch.granny_charger_local
        domain: switch
    - conditions:
      - condition: trigger
        id: Battery Charge Level
      - condition: numeric_state
        entity_id: sensor.solaredge_b1_state_of_energy
        below: 97
      - condition: device
        type: is_on
        device_id: 3e12cbf22e7fcfd5924b41a20289cc2b
        entity_id: switch.granny_charger_local
        domain: switch
      sequence:
      - type: turn_off
        device_id: 3e12cbf22e7fcfd5924b41a20289cc2b
        entity_id: switch.granny_charger_local
        domain: switch
  mode: single
- id: '1677606373870'
  alias: Valkyrie Manual Watch
  description: Simple notification of Valkyrie state
  trigger:
  - platform: state
    entity_id:
    - switch.valkyrie_solar_hot_water
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: 'On'
  - platform: state
    entity_id:
    - switch.valkyrie_solar_hot_water
    from: 'on'
    to: 'off'
    id: 'Off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'On'
      sequence:
      - service: script.text_notify_dave
        data:
          message: Valkyrie is on
          title: VALKYRIE!
    - conditions:
      - condition: trigger
        id: 'Off'
      sequence:
      - service: script.text_notify_dave
        data:
          message: Valkyrie is off
          title: VALKYRIE!
  mode: single
- id: '1679309473112'
  alias: Sync Battery State to Desired Storage Control Mode
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.desired_battery_storage_control_mode
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.desired_battery_storage_control_mode
        state: Remote Control
      - condition: not
        conditions:
        - condition: state
          entity_id: select.solaredge_i1_storage_control_mode
          state: Remote Control
        alias: If battery is not already in Remote Control
      sequence:
      - device_id: 952193e87f675ba7f7e32eda5500c572
        domain: select
        entity_id: select.solaredge_i1_storage_control_mode
        type: select_option
        option: Remote Control
    - conditions:
      - condition: state
        entity_id: input_select.desired_battery_storage_control_mode
        state: Maximize Self Consumption
      - condition: not
        conditions:
        - condition: state
          entity_id: select.solaredge_i1_storage_control_mode
          state: Maximize Self Consumption
        alias: If battery is not already in MSC
      sequence:
      - device_id: 952193e87f675ba7f7e32eda5500c572
        domain: select
        entity_id: select.solaredge_i1_storage_control_mode
        type: select_option
        option: Maximize Self Consumption
    - conditions:
      - condition: state
        entity_id: input_select.desired_battery_storage_control_mode
        state: Time of Use
      - condition: not
        conditions:
        - condition: state
          entity_id: select.solaredge_i1_storage_control_mode
          state: Time of Use
        alias: If battery is not already in TOU
      sequence:
      - device_id: 952193e87f675ba7f7e32eda5500c572
        domain: select
        entity_id: select.solaredge_i1_storage_control_mode
        type: select_option
        option: Time of Use
    - conditions:
      - condition: state
        entity_id: input_select.desired_battery_storage_control_mode
        state: Backup Only
      - condition: not
        conditions:
        - condition: state
          entity_id: select.solaredge_i1_storage_control_mode
          state: Backup Only
        alias: If battery is not already in Backup Only
      sequence:
      - device_id: 952193e87f675ba7f7e32eda5500c572
        domain: select
        entity_id: select.solaredge_i1_storage_control_mode
        type: select_option
        option: Backup Only
    - conditions:
      - condition: state
        entity_id: input_select.desired_battery_storage_control_mode
        state: Disabled
      - condition: not
        conditions:
        - condition: state
          entity_id: select.solaredge_i1_storage_control_mode
          state: Disabled
        alias: If battery is not already in Remote Control
      sequence:
      - device_id: 952193e87f675ba7f7e32eda5500c572
        domain: select
        entity_id: select.solaredge_i1_storage_control_mode
        type: select_option
        option: Disabled
  mode: single
- id: '1680019534188'
  alias: Travel Automations
  description: Checks waze travel time
  trigger:
  - alias: When Gem is less than 5 minutes away
    platform: numeric_state
    entity_id:
    - sensor.home_2_gem_forrester_distance
    below: 3500
    id: Gem almost home
  - platform: numeric_state
    entity_id: zone.gem_work
    id: Gem at work
    alias: Gem is at work
    above: 0
  - platform: numeric_state
    entity_id: zone.gem_work
    alias: Gem left work
    id: Gem left work
    below: 1
  - alias: When Dave is less than 5 minutes away
    platform: numeric_state
    entity_id:
    - sensor.home_2_david_forrester_distance
    below: 3500
    id: Dave almost home
  - platform: numeric_state
    entity_id: zone.dave_s_mum_and_dad
    id: Dave is at his mum and dad's
    alias: 'Dave is at his mum and dad''s '
    above: 0
  - platform: numeric_state
    entity_id: zone.dave_s_mum_and_dad
    alias: 'Dave left his mum and dad''s '
    id: 'Dave left his mum and dad''s '
    below: 1
  - platform: zone
    entity_id:
    - person.gem_forrester
    - person.david_forrester
    zone: zone.doctors_surgery
    event: enter
    id: At the Doctors
  - platform: zone
    entity_id:
    - person.gem_forrester
    - person.david_forrester
    zone: zone.doctors_surgery
    event: leave
    id: Left the Doctors
  - platform: state
    entity_id:
    - person.david_forrester
    - person.gem_forrester
    from: home
    id: Start Monitor
  - platform: state
    entity_id:
    - person.david_forrester
    - person.gem_forrester
    id: Stop Monitor
    to: home
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Gem at work
      sequence:
      - service: script.text_notify_dave
        data:
          message: Gem has got to work
          title: GEM AT WORK
      - if:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: 'on'
        then:
        - service: script.speech_engine
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            message: '{{ [''Pardon me sir. Your good lady has arrived at work. Let
              the party begin'', ''Attention, Gemma has arrived at work. Better get
              those jobs done now.'', ''Information. My tracking system has detected
              the presence of Gemma at her work location'']|random  }}'
    - conditions:
      - condition: trigger
        id: Gem almost home
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      sequence:
      - service: script.speech_engine
        data:
          where: '{{ states(''sensor.room_audio'') }}'
          message: "{{ ['Attention in the house. Mummy will be home soon. Shes had
            a hard day and will probably need some wine.',\n    '<prosody pitch=\"x-high\">Proximity
            Alert.</prosody> My tracking sensors have detected the presence of movement
            in the area. Logic circuits have determined that Mummy will be home soon.',\n
            \   'Information. Sensors have reported movement at a range of 1 mile
            from the property. Logic circuits surmise that Mummy will be home soon.']|random\n}}\n"
    - conditions:
      - condition: trigger
        id: Gem left work
      sequence:
      - service: script.text_notify_dave
        data:
          message: Gem has left work
          title: GEM LEFT WORK
      - if:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: 'on'
        then:
        - service: script.speech_engine
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            message: Information. Sensors have detected that Mummy has left the office
              and is on her way home. She will be home in {{ state_attr('sensor.gem_at_work'
              , 'duration') | round(0)}} minutes.
    - conditions:
      - condition: trigger
        id: Dave is at his mum and dad's
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: 'on'
        then:
        - service: script.speech_engine
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            message: Information. Dave has arrived in Dundee.
      - service: script.text_notify_gem
        data:
          message: 'Dave is at his mum and dad''s '
          title: DAVE IS IN DUNDEE
    - conditions:
      - condition: trigger
        id: Dave almost home
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: 'on'
        then:
        - service: script.speech_engine
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            message: "{{ ['Attention in the house. Daddy will be home soon.  He has
              had a long journey and will probably need some beer.',\n    'Proximity
              Alert. My tracking sensors have detected the presence of movement in
              the area. Logic circuits have determined that Daddy will be home soon.',\n
              \   'Information. Sensors have reported movement at a range of 1 mile
              from the property. Logic circuits surmise that Daddy will be home soon.']|random\n}}\n"
      - service: script.text_notify_gem
        data:
          message: Dave is almost home
          title: DAVE 5 MINS AWAY
    - conditions:
      - condition: trigger
        id: 'Dave left his mum and dad''s '
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: 'on'
        then:
        - service: script.speech_engine
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            message: Daddy is on his way home. He'll be home in {{ state_attr('sensor.dave_in_dundee'
              , 'duration') | round(0)}} minutes.
      - service: script.text_notify_gem
        data:
          message: Dave has left Dundee
          title: DAVE LEFT
    - conditions:
      - condition: trigger
        id: At the Doctors
      sequence:
      - if:
        - condition: template
          value_template: '{{ "Gem" in trigger.to_state.attributes.friendly_name }}'
          alias: If Gem, message Dave.  If Dave,message Gem.
        then:
        - service: script.text_notify_dave
          data:
            message: Gem is at the doctors
            title: GEM AT DOCTORS
        - if:
          - condition: state
            entity_id: input_boolean.audible_notifications
            state: 'on'
          then:
          - service: script.speech_engine
            data:
              where: '{{ states(''sensor.room_audio'') }}'
              message: '{{ "Pardon me daddy. mummy has arrived at the doctors" }}'
        else:
        - service: script.text_notify_gem
          data:
            message: Dave is at the doctors
            title: DAVE AT DOCTORS
        - if:
          - condition: state
            entity_id: input_boolean.audible_notifications
            state: 'on'
          then:
          - service: script.speech_engine
            data:
              where: '{{ states(''sensor.room_audio'') }}'
              message: '{{ "Pardon me mummy. daddy has arrived at the doctors" }}'
    - conditions:
      - condition: trigger
        id: Left the Doctors
      sequence:
      - if:
        - condition: template
          value_template: '{{ "Gem" in trigger.to_state.attributes.friendly_name }}'
          alias: If Gem, message Dave.  If Dave,message Gem.
        then:
        - service: script.text_notify_dave
          data:
            message: Gem has left the doctors
            title: GEM LEFT DOCTORS
        - if:
          - condition: state
            entity_id: input_boolean.audible_notifications
            state: 'on'
          then:
          - service: script.speech_engine
            data:
              where: '{{ states(''sensor.room_audio'') }}'
              message: '{{ "Pardon me daddy. mummy has left the doctors" }}'
        else:
        - service: script.text_notify_gem
          data:
            message: Dave has left the doctors
            title: DAVE LEFT DOCTORS
        - if:
          - condition: state
            entity_id: input_boolean.audible_notifications
            state: 'on'
          then:
          - service: script.speech_engine
            data:
              where: '{{ states(''sensor.room_audio'') }}'
              message: '{{ "Pardon me mummy. daddy has left the doctors" }}'
    - conditions:
      - condition: trigger
        id:
        - Start Monitor
      sequence:
      - if:
        - condition: template
          value_template: '{{"Gem" in trigger.to_state.attributes.friendly_name }}'
        then:
        - service: input_boolean.toggle
          target:
            entity_id: input_boolean.gem_travel_monitor
          data: {}
        else:
        - service: input_boolean.toggle
          target:
            entity_id: input_boolean.dave_travel_monitor
          data: {}
    - conditions:
      - condition: trigger
        id:
        - Stop Monitor
      sequence:
      - if:
        - condition: template
          value_template: '{{"Gem" in trigger.to_state.attributes.friendly_name }}'
        then:
        - service: input_boolean.toggle
          target:
            entity_id: input_boolean.gem_travel_monitor
          data: {}
        else:
        - service: input_boolean.toggle
          target:
            entity_id: input_boolean.dave_travel_monitor
          data: {}
  mode: single
- id: '1680183645675'
  alias: Battery Settings Confirm
  description: checks to see if battery settings are correct and sets an input boolean
    toggle
  trigger:
  - platform: state
    entity_id:
    - select.solaredge_i1_storage_default_mode
    from: Maximize Self Consumption
    id: Storage Default Mode Wrong
  - platform: state
    entity_id:
    - select.solaredge_i1_storage_default_mode
    id: Storage Default Mode Correct
    to: Maximize Self Consumption
  - platform: state
    entity_id:
    - select.solaredge_i1_storage_command_mode
    from: Maximize Self Consumption
    id: Storage Cmd Mode Wrong
  - platform: state
    entity_id:
    - select.solaredge_i1_storage_command_mode
    id: Storage Cmd Mode Correct
    to: Maximize Self Consumption
  - platform: state
    entity_id:
    - select.solaredge_i1_storage_control_mode
    from: Remote Control
    id: Storage Control Mode Wrong
  - platform: state
    entity_id:
    - select.solaredge_i1_storage_control_mode
    id: Storage Control Mode Correct
    to: Remote Control
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Storage Default Mode Wrong
      - condition: state
        entity_id: input_boolean.desired_storage_default_mode_correct
        state: 'on'
      sequence:
      - service: input_boolean.toggle
        data: {}
        target:
          entity_id: input_boolean.desired_storage_default_mode_correct
    - conditions:
      - condition: trigger
        id: Storage Default Mode Correct
      - condition: state
        entity_id: input_boolean.desired_storage_default_mode_correct
        state: 'off'
      sequence:
      - service: input_boolean.toggle
        data: {}
        target:
          entity_id: input_boolean.desired_storage_default_mode_correct
    - conditions:
      - condition: trigger
        id: Storage Cmd Mode Wrong
      - condition: state
        entity_id: input_boolean.desired_storage_cmd_mode_correct
        state: 'on'
      sequence:
      - service: input_boolean.toggle
        data: {}
        target:
          entity_id: input_boolean.desired_storage_cmd_mode_correct
    - conditions:
      - condition: trigger
        id: Storage Cmd Mode Correct
      - condition: state
        entity_id: input_boolean.desired_storage_cmd_mode_correct
        state: 'off'
      sequence:
      - service: input_boolean.toggle
        data: {}
        target:
          entity_id: input_boolean.desired_storage_cmd_mode_correct
    - conditions:
      - condition: trigger
        id: Storage Control Mode Wrong
      - condition: state
        entity_id: input_boolean.desired_storage_control_mode_correct
        state: 'on'
      sequence:
      - service: input_boolean.toggle
        data: {}
        target:
          entity_id: input_boolean.desired_storage_control_mode_correct
    - conditions:
      - condition: trigger
        id: Storage Control Mode Correct
      - condition: state
        entity_id: input_boolean.desired_storage_control_mode_correct
        state: 'off'
      sequence:
      - service: input_boolean.toggle
        data: {}
        target:
          entity_id: input_boolean.desired_storage_control_mode_correct
  mode: parallel
  max: 10
- id: '1680698690591'
  alias: Security System
  description: A door or window is open and sentry mode is active.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.back_door_sensor_contact
    - binary_sensor.front_door_sense_contact
    - binary_sensor.side_door_sensor_contact
    - binary_sensor.cloakroom_window_contact
    - binary_sensor.hallway_window_contact
    - binary_sensor.kitchen_window_left_contact
    - binary_sensor.kitchen_window_right_contact
    - binary_sensor.living_room_window_left_contact
    - binary_sensor.living_room_window_right_contact
    - binary_sensor.dining_room_window_left_contact
    - binary_sensor.dining_room_window_right_contact
    - binary_sensor.en_suite_window_sensor_contact
    - binary_sensor.office_window_sensor_contact
    - binary_sensor.garage_door_left_contact
    - binary_sensor.garage_door_right_contact
    - binary_sensor.main_bedroom_window_left_contact
    - binary_sensor.main_bedroom_window_right_contact
    - binary_sensor.bathroom_window_contact
    - binary_sensor.guest_bedroom_window_left_contact
    - binary_sensor.guest_bedroom_window_right_contact
    - binary_sensor.sean_s_bedroom_window_left_contact
    - binary_sensor.sean_s_bedroom_window_right_contact
    - binary_sensor.jamie_s_bedroom_window_left_contact
    - binary_sensor.jamie_s_bedroom_window_right_contact
    - binary_sensor.kids_bathroom_window_left_contact
    - binary_sensor.kids_bathroom_window_right_contact
    to: 'on'
    id: Activate
  - platform: state
    entity_id:
    - binary_sensor.back_door_sensor_contact
    - binary_sensor.front_door_sense_contact
    - binary_sensor.side_door_sensor_contact
    - binary_sensor.cloakroom_window_contact
    - binary_sensor.hallway_window_contact
    - binary_sensor.kitchen_window_left_contact
    - binary_sensor.kitchen_window_right_contact
    - binary_sensor.living_room_window_left_contact
    - binary_sensor.living_room_window_right_contact
    - binary_sensor.dining_room_window_left_contact
    - binary_sensor.dining_room_window_right_contact
    - binary_sensor.en_suite_window_sensor_contact
    - binary_sensor.office_window_sensor_contact
    - binary_sensor.garage_door_left_contact
    - binary_sensor.garage_door_right_contact
    - binary_sensor.bathroom_window_contact
    - binary_sensor.guest_bedroom_window_left_contact
    - binary_sensor.guest_bedroom_window_right_contact
    - binary_sensor.main_bedroom_window_left_contact
    - binary_sensor.main_bedroom_window_right_contact
    - binary_sensor.sean_s_bedroom_window_left_contact
    - binary_sensor.sean_s_bedroom_window_right_contact
    - binary_sensor.jamie_s_bedroom_window_left_contact
    - binary_sensor.jamie_s_bedroom_window_right_contact
    - binary_sensor.kids_bathroom_window_left_contact
    - binary_sensor.kids_bathroom_window_right_contact
    to: 'off'
    id: Clear
  - platform: state
    entity_id:
    - binary_sensor.family_home
    from: 'on'
    to: 'off'
    id: We've all gone out
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - binary_sensor.family_home
    from: 'off'
    to: 'on'
    id: Someone is home again
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Activate
      - condition: state
        entity_id: input_boolean.sentry_mode
        state: 'on'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.security_issue
    - conditions:
      - condition: trigger
        id: Clear
      - condition: state
        entity_id: input_boolean.sentry_mode
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.security_issue
    - conditions:
      - condition: trigger
        id: We've all gone out
      - condition: state
        entity_id: input_boolean.sentry_mode
        state: 'off'
      - condition: state
        entity_id: group.family
        state: 'off'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.sentry_mode
    - conditions:
      - condition: trigger
        id: Someone is home again
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.sentry_mode
  mode: restart
- id: '1682356258575'
  alias: 'Notify: Any downstairs windows left open when we leave the house'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.family
    to: not_home
    from: 'on'
  condition:
  - condition: state
    entity_id:
    - binary_sensor.living_room_window_left_contact
    - binary_sensor.living_room_window_right_contact
    - binary_sensor.dining_room_window_left_contact
    - binary_sensor.dining_room_window_right_contact
    - binary_sensor.kitchen_window_left_contact
    - binary_sensor.kitchen_window_right_contact
    - binary_sensor.hallway_window_contact
    - binary_sensor.cloakroom_window_contact
    - binary_sensor.back_door_sensor_contact
    state: 'on'
  action:
  - service: notify.mobile_app_{{states('input_text.my_mobile_phone_id')}}
    data:
      message: The {{trigger.to_state.attributes.friendly_name}} has been left open!
      title: HOUSE INSECURE!
    alias: Send a notification based on an input text helper
  mode: single
- id: '1682934733838'
  alias: Garage Dehumdifier Water Tray Full
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.garage_dehumidifier_water_tray_full
    from: not_full
    to: full
    id: Full
  - platform: state
    entity_id:
    - sensor.garage_dehumidifier_water_tray_full
    from: full
    to: not_full
    id: Not Full
  - platform: numeric_state
    entity_id:
    - sensor.garage_thermometer_temperature
    below: sensor.garage_thermal_comfort_dew_point
    id: Rust Risk
  - platform: numeric_state
    entity_id:
    - sensor.garage_thermometer_temperature
    above: 6
    id: Restart
  - platform: state
    entity_id:
    - humidifier.garage_dehumidifier_2
    to: 'off'
    id: 'Off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Full
      sequence:
      - service: script.text_notify_dave
        data:
          message: "{{[ 'The garage dehumidifier is full',\n    'The garage rust prevention
            system has stalled',\n    'The garage humidity level is increasing exponentially']|random
            }}\n"
          title: GARAGE DEHUMIDIFIER
        alias: Send a notification based on an input text helper
      - alias: Broadcast message outside quiet time
        if:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: 'on'
        then:
        - service: script.speech_engine
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            message: "{{ [  '<prosody pitch=\"high\">Excuse me. This is an important
              announcement for the man of the house</prosody>. The garage dehumidifier
              water tray is full. <prosody pitch=\"x-high\">Please empty it</prosody>',
              \  \n      '<prosody pitch=\"high\">Pardon my interruption</prosody>.
              I have detected a momentary increase in humidity in the garage. Perhaps
              the atmospheric water extraction device has extracted as much moisture
              as it can hold',   \n      '<prosody pitch=\"high\">Information!</prosody>
              The weather girls have reported a rise in humidity and a fall in barometric
              pressure. While it is not raining men, perhaps the garage dehumidifier
              is full',   \n      '<prosody pitch=\"high\">Information!</prosody>
              The garage rust prevention device has stalled. Unless you want your
              cars to disintegrate into a heap of iron oxide, might I suggest you
              take immediate action.'     \n    ]|random }}"
      - service: light.turn_on
        data:
          rgb_color:
          - 133
          - 255
          - 255
          brightness: 10
        target:
          entity_id: light.kitchen_aura_lamp_2
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.garage_dehumidifier_full
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.allow_kitchen_aura_lamp
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Not Full
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.garage_dehumidifier_full
      - alias: Broadcast message outside quiet time
        if:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: 'on'
        then:
        - service: script.speech_engine
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            message: "{{ [  '<prosody pitch=\"low\">Well now. Whoever emptied the
              garage dehumidifier, thank you.</prosody>',   \n      '<prosody pitch=\"low\">I
              have detected a slightly longer term reduction in humidity in the garage.
              Thankfully, its because the atmospheric water extraction device has
              once again commenced extracting moisture.</prosody>',   \n      '<prosody
              pitch=\"low\">The weather girls have reported a fall in humidity and
              a increase in barometric pressure. While it is not raining men, it is
              good to see the garage dehumidifier is empty once more</prosody>',   \n
              \     '<prosody pitch=\"low\">The garage rust prevention device has
              recommenced operation. You have saved your cars from disintegrating
              into a heap of iron oxide.</prosody>'     \n    ]|random }}"
      - if:
        - condition: template
          value_template: '{{is_state(''sensor.current_energy_rate'',''input_boolean.plunge_pricing'')}}'
          alias: If Plunge Pricing
        then:
        - service: light.turn_on
          data:
            rgb_color:
            - 0
            - 0
            - 255
            brightness_pct: 1
          target:
            entity_id: light.kitchen_aura_lamp_2
        else:
        - if:
          - condition: template
            value_template: '{{is_state(''sensor.current_energy_rate'',''input_boolean.cheap_energy'')}}'
            alias: If Cheap Energy
          then:
          - service: light.turn_on
            data:
              rgb_color:
              - 0
              - 255
              - 0
              brightness_pct: 1
            target:
              entity_id: light.kitchen_aura_lamp_2
          else:
          - if:
            - condition: template
              value_template: '{{is_state(''sensor.current_energy_rate'',''input_boolean.medium_cost_energy'')}}'
              alias: If Medium Cost Energy
            then:
            - service: light.turn_on
              data:
                rgb_color:
                - 255
                - 255
                - 0
                brightness_pct: 1
              target:
                entity_id: light.kitchen_aura_lamp_2
            else:
            - if:
              - condition: template
                value_template: '{{is_state(''sensor.current_energy_rate'',''input_boolean.expensive_energy'')}}'
                alias: If Expensive Energy
              then:
              - service: light.turn_on
                data:
                  rgb_color:
                  - 255
                  - 153
                  - 0
                  brightness_pct: 1
                target:
                  entity_id: light.kitchen_aura_lamp_2
              else:
              - service: light.turn_on
                target:
                  entity_id: light.kitchen_aura_lamp
                data:
                  rgb_color:
                  - 255
                  - 0
                  - 0
                  brightness_pct: 1
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.allow_kitchen_aura_lamp
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Rust Risk
      sequence:
      - service: script.text_notify_dave
        data:
          message: Risk of condensation in the garage
          title: RISK OF RUST FORMATION
    - conditions:
      - condition: trigger
        id:
        - Restart
      - condition: state
        entity_id: humidifier.garage_dehumidifier_2
        state: 'off'
      sequence:
      - service: humidifier.turn_on
        target:
          entity_id: humidifier.garage_dehumidifier_2
        data: {}
      - service: script.text_notify_dave
        data:
          message: The garage temp has risen enough to restart the dehumidifier
          title: DEHUMIDIFIER ON
    - conditions:
      - condition: trigger
        id:
        - 'Off'
      - condition: numeric_state
        entity_id: sensor.garage_thermometer_temperature
        below: 6
      sequence:
      - service: script.text_notify_dave
        data:
          title: DEHUMIDIFIER OFF
          message: The garage dehumdifier has turned off due to low temperature.
  mode: restart
- id: '1684788056642'
  alias: Rolec EV Chargepoint schedule
  description: Multiple Slots for Agile
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.octopus_energy_target_intermittent_best_rates_total_4_hours
    from: 'off'
    to: 'on'
    id: 'On'
    enabled: true
  - platform: state
    entity_id:
    - binary_sensor.octopus_energy_target_intermittent_best_rates_total_4_hours
    from: 'on'
    to: 'off'
    id: 'Off'
    enabled: true
  - platform: state
    entity_id:
    - switch.shelly1_c45bbe7867c7
    from: unavailable
    id: Rolec Available
  - alias: Rolec 4 Hour charge completed
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.rolec_4_hour_charge_period
    id: Stop Charge
  - platform: time
    at: '20:59:00'
    id: Activate Charge Session
  - alias: When inverter resets
    platform: state
    entity_id:
    - switch.solaredge_i1_advanced_power_control
    from: unavailable
    to: 'on'
    id: Inverter Reset
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: numeric_state
    entity_id:
    - sensor.shellyem_244cab4194b1_channel_2_power
    below: 20
    id: Charge Complete
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.morning
    to: 'on'
    id: Reset Timer
  - platform: state
    entity_id:
    - input_boolean.car_plugged_in
    from: 'off'
    to: 'on'
    id: Session start
  - platform: state
    entity_id:
    - input_boolean.car_plugged_in
    from: 'on'
    to: 'off'
    id: Session end
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Activate Charge Session
      sequence:
      - condition: state
        entity_id: input_boolean.car_plugged_in
        state: 'on'
      - data: {}
        target:
          entity_id: input_boolean.rolec_battery_master
        action: input_boolean.turn_on
    - conditions:
      - condition: trigger
        id:
        - 'On'
      - condition: state
        entity_id: input_boolean.rolec_battery_master
        state: 'on'
      - condition: state
        entity_id: input_boolean.car_plugged_in
        state: 'on'
      sequence:
      - data: {}
        target:
          entity_id: switch.shelly1_c45bbe7867c7
        action: switch.turn_on
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - data:
          value: '{{ states(''input_number.desired_battery_output_limit_for_overnight_ev_charging'')
            | float(0) }}'
        target:
          entity_id: number.solaredge_i1_storage_discharge_limit
        action: number.set_value
      - data: {}
        target:
          entity_id: timer.rolec_4_hour_charge_period
        action: timer.start
    - conditions:
      - condition: trigger
        id:
        - 'Off'
      sequence:
      - data: {}
        target:
          entity_id: switch.shelly1_c45bbe7867c7
        action: switch.turn_off
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - data:
          value: '{{ states(''input_number.default_battery_output_limit'') | float(0)
            }}'
        target:
          entity_id: number.solaredge_i1_storage_discharge_limit
        action: number.set_value
      - data: {}
        target:
          entity_id: timer.rolec_4_hour_charge_period
        action: timer.pause
    - conditions:
      - condition: trigger
        id: Rolec Available
      - condition: state
        entity_id: binary_sensor.octopus_energy_target_intermittent_best_rates_total_4_hours
        state: 'on'
      - condition: state
        entity_id: switch.shelly1_c45bbe7867c7
        state: 'off'
      - condition: state
        entity_id: input_boolean.rolec_battery_master
        state: 'on'
      - condition: state
        entity_id: input_boolean.car_plugged_in
        state: 'on'
      sequence:
      - data: {}
        target:
          entity_id: switch.shelly1_c45bbe7867c7
        action: switch.turn_on
      - data:
          message: The Rolec was turned on because it became available during a charge
            period.
          title: ROLEC ON
        action: script.text_notify_dave
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - data:
          value: '{{ states(''input_number.desired_battery_output_limit_for_overnight_ev_charging'')
            | float(0) }}'
        target:
          entity_id: number.solaredge_i1_storage_discharge_limit
        action: number.set_value
    - conditions:
      - condition: trigger
        id: Rolec Available
      - condition: state
        entity_id: binary_sensor.octopus_energy_target_intermittent_best_rates_total_4_hours
        state: 'off'
      - condition: state
        entity_id: switch.shelly1_c45bbe7867c7
        state: 'on'
      sequence:
      - data: {}
        target:
          entity_id: switch.shelly1_c45bbe7867c7
        action: switch.turn_off
      - data:
          message: The Rolec was turned off because it was on outside of a charge
            period.
          title: ROLEC OFF
        action: script.text_notify_dave
    - conditions:
      - condition: trigger
        id:
        - Stop Charge
        - Charge Complete
      sequence:
      - data: {}
        target:
          entity_id: switch.shelly1_c45bbe7867c7
        action: switch.turn_off
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - data:
          value: '{{ states(''input_number.default_battery_output_limit'') | float(0)
            }}'
        target:
          entity_id: number.solaredge_i1_storage_discharge_limit
        action: number.set_value
      - action: script.car_plugged_in
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Inverter Reset
      - condition: numeric_state
        entity_id: number.solaredge_i1_storage_discharge_limit
        above: 100
      - condition: state
        entity_id: switch.shelly1_c45bbe7867c7
        state: 'on'
      - condition: state
        entity_id: timer.rolec_4_hour_charge_period
        state: active
      - condition: state
        entity_id: input_boolean.car_plugged_in
        state: 'on'
      sequence:
      - data:
          value: '{{ states(''input_number.desired_battery_output_limit_for_overnight_ev_charging'')
            | float(0) }}'
        target:
          entity_id: number.solaredge_i1_storage_discharge_limit
        action: number.set_value
    - conditions:
      - condition: trigger
        id:
        - Reset Timer
      sequence:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - switch.shelly1_c45bbe7867c7
          from: 'on'
          to: 'off'
          for:
            hours: 0
            minutes: 1
            seconds: 0
        timeout:
          hours: 1
          minutes: 0
          seconds: 0
          milliseconds: 0
      - target:
          entity_id: timer.rolec_4_hour_charge_period
        data: {}
        action: timer.cancel
    - conditions:
      - condition: trigger
        id:
        - Session start
      sequence:
      - action: mqtt.publish
        data:
          retain: true
          payload: '{{states(''sensor.rolec_energy_consumption_monthly'')|float(0)|round(1)}}'
          topic: rolec/energy/start
      - action: mqtt.publish
        data:
          retain: true
          payload: '{{states(''input_number.car_battery_charge_level'')|float(0)}}'
          topic: car/battery/start
    - conditions:
      - condition: trigger
        id:
        - Session end
      sequence:
      - action: mqtt.publish
        data:
          retain: true
          topic: rolec/energy/end
          payload: '{{states(''sensor.rolec_energy_consumption_monthly'')|float(0)|round(1)}}'
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - action: mqtt.publish
        data:
          retain: true
          topic: rolec/energy/used
          payload: '{{ (states(''sensor.rolec_energy_end_session'')|float(0) - states(''sensor.rolec_energy_start_session'')|float(0))|round(1)}}'
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - action: mqtt.publish
        data:
          retain: true
          topic: car/battery/end
          payload: '{% set energy = states(''sensor.rolec_energy_used'')|float(0)
            %}

            {% set oldbatt = states(''sensor.battery_level_start_session'')|float(0)%}

            {% set newbatt = oldbatt +  ((energy / 58)*100)|int %}

            {{ newbatt }}'
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - action: mqtt.publish
        data:
          retain: true
          topic: car/battery/added
          payload: '{% set energy = states(''sensor.rolec_energy_used'')|float(0)
            %}

            {% set oldbatt = states(''sensor.battery_level_start_session'')|float(0)%}

            {% set newbatt = oldbatt +  ((energy / 58)*100)|int %}

            {{ newbatt - oldbatt }}'
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - target:
          entity_id:
          - input_number.car_battery_charge_level
        data:
          value: '{{states(''sensor.battery_level_end_session'')|float(0)}}'
        action: input_number.set_value
  mode: parallel
  max: 10
  trace:
    stored_traces: 20
- id: '1686230178966'
  alias: Water Leak Detection and Alarm
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.leak_detector_dishwasher_water_leak
    - binary_sensor.leak_detector_washing_machine_water_leak
    - binary_sensor.kids_bathroom_leak_detector_water_leak
    - binary_sensor.main_bathroom_leak_detector_water_leak
    from: 'off'
    to: 'on'
    id: Leak
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Leak
      sequence:
      - service: script.text_notify_parents
        data:
          title: Water Leak!!!!
          message: 'Water leak detected in {{ trigger.to_state.attributes.friendly_name}}

            '
    - conditions:
      - condition: trigger
        id: Leak
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      sequence:
      - service: script.speech_engine
        data:
          where: '{{ states(''sensor.room_audio'') }}'
          message: "{% set location = trigger.to_state.attributes.friendly_name %}
            {%- macro issue_report(location) -%}\n  {{ [\n      'I have detected an
            issue!',\n      'We have a problem!',\n      'You might not like this.',\n
            \      'There is something that needs your attention.'\n      ] | random
            }}\n   {{ [\n    location + \" is detecting a leak.\",\n    location +
            \" has detected water.\",\n    location + \" is picking up water.\"\n
            \   ] | random }}\n{%- endmacro -%} {{issue_report(location)}}\n"
  mode: single
- id: '1686590842875'
  alias: Heatwave Alert
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.outside_thermometer_temperature
    above: sensor.living_room_thermometer_temperature
    id: Hotting Up
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: numeric_state
    entity_id: sensor.outside_temperature_and_humidity_sensor_2_temperature
    id: Cooling Down
    for:
      hours: 0
      minutes: 10
      seconds: 0
    below: sensor.jamies_room_thermometer_temperature
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Hotting Up
      - condition: state
        entity_id: sun.sun
        state: above_horizon
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      sequence:
      - service: media_player.volume_set
        data:
          volume_level: '{{ states(''input_number.alexa_volume_level_announcements'')
            | float(0) }}'
        alias: Set volume downstairs based on an input number helper
        target:
          area_id: downstairs
      - service: media_player.play_media
        data:
          media_content_id: Hot in Herre [Explicit]
          media_content_type: AMAZON_MUSIC
          extra:
            timer: 60
        target:
          entity_id:
          - media_player.dave_s_2nd_echo_pop
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: media_player.media_stop
        data: {}
        target:
          area_id: everywhere
      - service: notify.alexa_media_everywhere_2
        data:
          data:
            type: announce
            method: all
          message: "{{ [  'Phew! It is getting hot outside. Time to close the windows
            and lower the blinds at the back of the house',\n      'There is a potentially
            adverse temperature differential. For your comfort and safety, please
            close the windows and drop the blinds at the back of the house.',\n      'The
            automatic window and blind closers have temporarily malfunctioned. Manual
            intervention is required imminently to prevent discomfort',\n      'I
            have detected a thermal anomaly which may result in environmental conditions
            breaching normal human comfort levels. Please take immediate action.'\n
            \   ]|random }}"
      - service: media_player.volume_set
        data:
          volume_level: '{{states(''input_number.alexa_volume_level_default_all'')|float(0)}}'
        alias: Set volume everywhere to default
        enabled: true
        target:
          area_id: everywhere
    - conditions:
      - condition: trigger
        id: Cooling Down
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      sequence:
      - service: media_player.volume_set
        data:
          volume_level: '{{states(''input_number.alexa_volume_level_announcements'')|float(0)}}'
        alias: Set volume downstairs based on an input number helper
        target:
          area_id: downstairs
      - service: media_player.play_media
        data:
          media_content_type: Sound
          media_content_id: amzn_sfx_trumpet_bugle_04
          enqueue: play
        target:
          area_id: downstairs
      - service: notify.alexa_media_everywhere_2
        data:
          data:
            type: announce
            method: all
          message: "{{ [  'Aaaaah, it is starting to cool down again. You can open
            the windows and blinds again',\n      'There is a potentially beneficial
            temperature differential. For your continued comfort, please open the
            windows and raise the blinds at the back of the house.',  \n      'The
            automatic window and blind openers have temporarily malfunctioned. Manual
            intervention is required imminently to ensure your continued comfort',
            \n      'I have detected a thermal anomaly which may result in environmental
            conditions that favor normal human comfort levels. Please take immediate
            action.'  \n    ]|random }}"
  mode: single
- id: '1687181387209'
  alias: Update OpenUV
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /15
  condition:
  - condition: sun
    before: sunset
    after: sunrise
    before_offset: +00:45:00
  - condition: template
    value_template: "{{ state_attr('automation.update_openuv', 'last_triggered') ==
      None\n   or (now() - state_attr('automation.update_openuv', 'last_triggered')\n
      \  ) >= timedelta(hours = 0, minutes = 40) }}"
  action:
  - service: homeassistant.update_entity
    data: {}
    target:
      entity_id:
      - binary_sensor.protection_window
      - sensor.current_uv_index
  mode: single
- id: '1687721775005'
  alias: Family Has Arrived
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.family_home
    from: 'off'
    to: 'on'
    id: Auto
  - platform: state
    entity_id:
    - input_boolean.family_is_home
    from: 'off'
    to: 'on'
    id: Manual
  condition:
  - condition: state
    entity_id: input_boolean.family_is_home
    state: 'off'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.family_is_home
  mode: single
- id: '1689622175229'
  alias: Safe Shutdown on power loss
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.myups_battery_charge
    below: 20
  condition:
  - condition: numeric_state
    entity_id: sensor.solaredge_m1_ac_voltage_ln
    below: 100
  action:
  - service: hassio.host_shutdown
    data: {}
  mode: single
- id: '1691166601377'
  alias: External Door Related Automations
  description: Lights and announcements etc
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.back_door_sensor_contact
    - binary_sensor.front_door_sense_contact
    - binary_sensor.side_door_sensor_contact
    to: 'on'
    id: Chime
    from: 'off'
  - platform: state
    entity_id:
    - binary_sensor.back_door_sensor_contact
    - binary_sensor.side_door_sensor_contact
    - binary_sensor.front_door_sense_contact
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: Door still open
  - platform: state
    entity_id:
    - binary_sensor.back_door_sensor_contact
    - binary_sensor.side_door_sensor_contact
    - binary_sensor.front_door_sense_contact
    from: 'on'
    to: 'off'
    id: Chime Off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Chime
      - condition: template
        value_template: '{{"Back" in trigger.to_state.attributes.friendly_name }}'
        alias: Filter Back Door
      - condition: or
        conditions:
        - condition: sun
          before: sunrise
          after: sunset
        - condition: numeric_state
          entity_id: sensor.kitchen_presence_sensor_light_sensor_light_level
          below: input_number.low_light_threshold
      - condition: state
        entity_id: light.back_door_zone_light
        state: 'off'
      sequence:
      - data: {}
        target:
          entity_id: light.back_door_zone_light
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Chime
      - condition: template
        value_template: '{{"Back" in trigger.to_state.attributes.friendly_name }}'
        alias: Filter Back Door
      - condition: and
        conditions:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: 'on'
        - condition: state
          entity_id: input_boolean.guest_mode
          state: 'off'
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.morning_briefing_playing
          state: 'off'
        - condition: or
          conditions:
          - condition: state
            entity_id: media_player.kitchen_echo_show
            state: standby
          - condition: state
            entity_id: media_player.kitchen_echo_show
            state: paused
        then:
        - data:
            where: kitchen
            message: '<audio src=''https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/8TpwC3xH-tos-turboliftdoor.mp3''/>

              '
          action: script.alexa_voice
      - if:
        - condition: sun
          after: sunset
          before: sunrise
        then:
        - target:
            entity_id: light.back_door_light
          data:
            brightness_step: 255
          action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Chime Off
      - condition: template
        value_template: '{{"Back"  in trigger.to_state.attributes.friendly_name }}'
        alias: Filter Back Door
      - condition: and
        conditions:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: 'on'
        - condition: state
          entity_id: input_boolean.guest_mode
          state: 'off'
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.morning_briefing_playing
          state: 'off'
        - condition: or
          conditions:
          - condition: state
            entity_id: media_player.kitchen_echo_show
            state: standby
          - condition: state
            entity_id: media_player.kitchen_echo_show
            state: paused
        then:
        - data:
            where: kitchen
            message: '<audio src=''https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/8TpwC3xH-tos-turboliftdoor.mp3''/>

              '
          action: script.alexa_voice
      - if:
        - condition: state
          entity_id: light.back_door_light
          state: 'on'
        then:
        - data: {}
          action: script.back_door_light_dim_when_door_closed
    - conditions:
      - condition: trigger
        id: Door Still Open
      - condition: and
        conditions:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: 'on'
        - condition: state
          entity_id: input_boolean.guest_mode
          state: 'off'
      sequence:
      - data:
          where: '{{ states(''sensor.room_audio'') }}'
          message: "Attention in the house.  The {{ trigger.to_state.attributes.friendly_name
            }} {{ [\n  ' is standing open.',\n  ' is open.',\n  ' does not close on
            its own.',\n  ' was left standing open.'\n] | random }} {{ [\n    'Can
            a human be so kind and close it?',\n    'The air quality in this house
            has actually improved.',\n    'Closing the door would improve the internal
            climate of the house.',\n    'Hey. The door was just opened and this is
            crazy. But now you know. So close it maybe.',\n    'If at first you do
            not succeed in closing the door, please try again. Like, Right now seems
            like a good time to try again.',\n    'And the automatic door closer appears
            to be broken. So, you know what to do. Time to get physical.',\n    'I
            would close it for you. But I lack legs. And Arms.'\n] | random }}\n"
        action: script.speech_engine
  mode: restart
- id: '1691393321806'
  alias: Night Lights and Reset
  description: Turns on lights at dusk. Turn off all lights at bedtime and reset toggles
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.lights_out
    from: 'off'
    to: 'on'
    id: Turn Off
  - platform: state
    entity_id:
    - binary_sensor.lights_out
    from: 'on'
    to: 'off'
    id: Turn On
  - platform: state
    entity_id:
    - binary_sensor.quiet_time_boys
    from: 'on'
    to: 'off'
    id: Camera LED On
  - platform: state
    entity_id:
    - binary_sensor.quiet_time_boys
    from: 'off'
    to: 'on'
    id: Camera LED Off
  - platform: sun
    event: sunset
    offset: 0
    id: Sunset
  - platform: sun
    event: sunrise
    offset: 0
    id: Sunrise
  condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Turn Off
      sequence:
      - alias: If corner lamp is on, turn it off
        if:
        - condition: state
          entity_id: light.corner_lamp_2
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - light.corner_lamp_2
          action: light.turn_off
      - if:
        - condition: state
          entity_id: light.standard_lamp
          state: 'on'
        then:
        - data: {}
          target:
            entity_id: light.standard_lamp
          action: light.turn_off
        alias: If standard lamp is on, turn it off
      - if:
        - condition: state
          entity_id: switch.under_shelf_lights_local
          state: 'on'
        then:
        - data: {}
          target:
            entity_id: switch.under_shelf_lights_local
          action: switch.turn_off
        alias: If undershelf lights are on, turn them off
      - if:
        - condition: state
          entity_id: light.back_door_light
          state: 'on'
        - condition: state
          entity_id: binary_sensor.back_door_sensor_contact
          state: 'off'
        then:
        - data: {}
          target:
            entity_id: light.back_door_light
          action: light.turn_off
        alias: If back door light is on, turn it off
      - alias: 'If landing lights are on, turn them off '
        if:
        - condition: state
          entity_id: light.landing_lights_2
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - light.landing_lights_2
          action: light.turn_off
      - data: {}
        target:
          entity_id:
          - input_boolean.guest_bedroom_bedside_lamps_active
          - input_boolean.main_bedroom_bedside_lamps_active
        action: input_boolean.turn_off
      - if:
        - condition: state
          entity_id: light.guest_bedroom_bedside_lamp_left
          state: 'on'
        - condition: state
          entity_id: input_boolean.room_occupied_guest_bedroom
          state: 'on'
        then:
        - data: {}
          target:
            entity_id:
            - light.guest_bedroom_bedside_lamp_left
            - light.guest_bedroom_bedside_lamp_right
          action: light.turn_off
        alias: If guest bedroom bedside lamps are on, turn them off
      - if:
        - condition: state
          state: 'on'
          entity_id: light.sonoff_1001f6d950
        then:
        - data: {}
          target:
            entity_id: light.sonoff_1001f6d950
          action: light.turn_off
        alias: If Daddy's bedside lamp is on, turn it off
      - if:
        - condition: state
          state: 'on'
          entity_id: light.sonoff_1001f6d982
        then:
        - data: {}
          target:
            entity_id: light.sonoff_1001f6d982
          action: light.turn_off
        alias: If Mummy's bedside lamp is on, turn it off
      - if:
        - condition: state
          entity_id: light.back_door_zone_light
          state: 'on'
        - condition: state
          entity_id: binary_sensor.back_door_sensor_contact
          state: 'off'
        then:
        - data: {}
          target:
            entity_id: light.back_door_zone_light
          action: light.turn_off
        alias: If back door zone light is on, turn it off
      - data: {}
        target:
          entity_id: light.kitchen_lights_2
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Turn On
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: calendar.gem_holidays
        state: 'off'
      sequence:
      - delay:
          hours: 0
          minutes: 13
          seconds: 0
          milliseconds: 0
      - data: {}
        target:
          entity_id:
          - input_boolean.morning_briefing_played
          - input_boolean.seans_bedtime_announcement_played
          - input_boolean.jamies_bedtime_announcement_played
          - input_boolean.school_morning_announcement_played
          - input_boolean.school_pick_up_announcement_played
          - input_boolean.schools_out_morning_announcements_played
          - input_boolean.office_welcome_played
          - input_boolean.guest_bedroom_night_lights_active
        action: input_boolean.turn_off
      - delay:
          hours: 1
          minutes: 0
          seconds: 0
          milliseconds: 0
      - data: {}
        target:
          entity_id:
          - input_boolean.main_bedroom_bedside_lamps_active
          - input_boolean.guest_bedroom_bedside_lamps_active
          - input_boolean.guest_bedroom_allow_lights_off
        action: input_boolean.turn_on
    - conditions:
      - condition: trigger
        id:
        - Turn On
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.workday_sensor
          state: 'off'
        - condition: state
          entity_id: calendar.gem_holidays
          state: 'on'
      sequence:
      - delay:
          hours: 1
          minutes: 13
          seconds: 0
          milliseconds: 0
      - data: {}
        target:
          entity_id:
          - input_boolean.main_bedroom_bedside_lamps_active
          - input_boolean.guest_bedroom_bedside_lamps_active
          - input_boolean.guest_bedroom_allow_lights_off
          - input_boolean.office_welcome_played
        action: input_boolean.turn_on
      - data: {}
        target:
          entity_id:
          - input_boolean.morning_briefing_played
          - input_boolean.seans_bedtime_announcement_played
          - input_boolean.jamies_bedtime_announcement_played
          - input_boolean.school_morning_announcement_played
          - input_boolean.school_pick_up_announcement_played
          - input_boolean.guest_bedroom_night_lights_active
        action: input_boolean.turn_off
    - conditions:
      - condition: trigger
        id:
        - Camera LED Off
      sequence:
      - target:
          entity_id:
          - switch.landing_camera_indicator_led
          - switch.jamie_s_room_camera_indicator_led
          - switch.sean_s_room_camera_indicator_led
          - switch.guest_bedroom_camera_indicator_led
        data: {}
        action: switch.toggle
    - conditions:
      - condition: trigger
        id:
        - Camera LED On
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.bst
          state: 'on'
        then:
        - target:
            entity_id:
            - switch.landing_camera_indicator_led
            - switch.jamie_s_room_camera_indicator_led
            - switch.sean_s_room_camera_indicator_led
            - switch.guest_bedroom_camera_indicator_led
          data: {}
          action: switch.toggle
        else:
        - delay:
            hours: 1
            minutes: 0
            seconds: 0
            milliseconds: 0
        - target:
            entity_id:
            - switch.landing_camera_indicator_led
            - switch.jamie_s_room_camera_indicator_led
            - switch.sean_s_room_camera_indicator_led
            - switch.guest_bedroom_camera_indicator_led
          data: {}
          action: switch.toggle
    - conditions:
      - condition: trigger
        id:
        - Sunset
      sequence:
      - data: {}
        target:
          entity_id: switch.hallway_light_switch_2_left
        action: switch.turn_on
    - conditions:
      - condition: trigger
        id:
        - Sunrise
      sequence:
      - data: {}
        target:
          entity_id: switch.hallway_light_switch_2_left
        action: switch.turn_off
    - conditions:
      - condition: trigger
        id:
        - Turn On
      sequence:
      - action: input_datetime.set_datetime
        target:
          entity_id: input_datetime.seans_morning_briefing
        data_template:
          time: "{% if is_state('binary_sensor.schoolday','on') %}\n  07:30\n{% else
            %}\n  08:00\n{% endif %}\n"
  mode: parallel
  max: 10
- id: '1692351497233'
  alias: Garage Lights With Doors
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.garage_door_state
    to: Open
    id: Open
  - platform: state
    entity_id:
    - sensor.garage_door_state
    to: Closed
    id: Closed
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Open
        alias: Turn on lights when a door is opened
      - condition: state
        entity_id: light.garage_lights
        state: 'off'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.garage_lights
    - conditions:
      - condition: trigger
        id:
        - Closed
      - condition: state
        entity_id: light.garage_lights
        state: 'on'
      sequence:
      - service: light.turn_off
        target:
          entity_id: light.garage_lights
        data: {}
  mode: single
- id: '1692354708877'
  alias: Loft Lights on with hatch
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.loft_hatch_sensor_contact
    from: 'off'
    to: 'on'
    id: Open
  - platform: state
    entity_id:
    - binary_sensor.loft_hatch_sensor_contact
    from: 'on'
    to: 'off'
    id: Closed
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Open
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.loft_light
    - conditions:
      - condition: trigger
        id:
        - Closed
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.loft_light
  mode: single
- id: '1692356121570'
  alias: Cloakroom Lights on with Presence
  description: Lights on and off with presence and timer
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.cloakroom_presence_occupancy
    from: 'off'
    to: 'on'
    id: Presence
    alias: When someone goes into the cloakroom.
  - platform: state
    entity_id:
    - binary_sensor.cloakroom_presence_occupancy
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: Absence
    alias: When someone leaves the cloakroom.
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.cloakroom_light
    id: Timer Done
    alias: When cloakroom timer runs down.
    enabled: true
  - platform: state
    entity_id:
    - light.cloakroom_switch_left
    from: 'off'
    to: 'on'
    id: Switch on
    alias: When light is turned on manually.
  - platform: numeric_state
    entity_id:
    - sensor.cloakroom_presence_illuminance_lux
    below: 20
    id: Low Light
    alias: When light level is low.
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Presence
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: sensor.cloakroom_presence_illuminance_lux
          below: 20
        - condition: sun
          before: sunrise
          after: sunset
      - condition: state
        entity_id: binary_sensor.quiet_time_boys
        state: 'off'
      sequence:
      - action: switch.turn_on
        target:
          entity_id:
          - switch.cloakroom_switch_left
          - switch.cloakroom_switch_right
        data: {}
        alias: Turn on light and extractor.
      - data: {}
        target:
          entity_id: timer.cloakroom_light
        action: timer.start
      alias: When someone enters cloakroom outside of quite time.
    - conditions:
      - condition: trigger
        id:
        - Presence
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: sensor.cloakroom_presence_illuminance_lux
          below: 20
        - condition: sun
          before: sunrise
          after: sunset
      - condition: state
        entity_id: binary_sensor.quiet_time_boys
        state: 'on'
      sequence:
      - action: switch.turn_on
        target:
          entity_id:
          - switch.cloakroom_switch_left
        data: {}
        alias: Turn on light only.
      - data: {}
        target:
          entity_id: timer.cloakroom_light
        action: timer.start
      alias: When someone enters cloakroom during quite time.
    - conditions:
      - condition: trigger
        id:
        - Absence
      - condition: state
        entity_id: timer.cloakroom_light
        state: idle
      sequence:
      - data: {}
        target:
          entity_id:
          - switch.cloakroom_switch_left
        action: switch.turn_off
        alias: Turn off the light.
      - condition: state
        entity_id: switch.cloakroom_switch_right
        state: 'on'
        alias: Check if the extractor is on.
      - data: {}
        target:
          entity_id:
          - switch.cloakroom_switch_right
        action: switch.turn_off
        alias: Turn off the extractor.
      alias: When someone leaves the cloakroom.
    - conditions:
      - condition: trigger
        id:
        - Switch on
      - condition: state
        entity_id: binary_sensor.quiet_time_boys
        state: 'off'
      sequence:
      - data: {}
        target:
          entity_id: timer.cloakroom_light
        action: timer.start
      - target:
          entity_id: switch.cloakroom_switch_right
        data: {}
        action: switch.turn_on
        alias: Turn on extractor.
      alias: Light switch manually turned on.
    - conditions:
      - condition: trigger
        id:
        - Timer Done
      - condition: or
        conditions:
        - condition: state
          entity_id: switch.cloakroom_switch_left
          state: 'on'
        - condition: state
          entity_id: switch.cloakroom_switch_right
          state: 'on'
        alias: If light or extractor is on.
      - condition: state
        entity_id: binary_sensor.cloakroom_presence_occupancy
        state: 'off'
      sequence:
      - alias: Check which switches are on.
        if:
        - condition: state
          entity_id:
          - switch.cloakroom_switch_left
          - switch.cloakroom_switch_right
          state: 'on'
          alias: Both switches on.
        then:
        - action: switch.turn_off
          target:
            entity_id:
            - switch.cloakroom_switch_left
            - switch.cloakroom_switch_right
          data: {}
          alias: Turn both switches off.
        else:
        - action: switch.turn_off
          target:
            entity_id: switch.cloakroom_switch_right
          data: {}
          alias: Turn off extractor.
      alias: When cloakroom timer runs down.
    - conditions:
      - condition: trigger
        id:
        - Low Light
      - condition: state
        entity_id: binary_sensor.cloakroom_occupied
        state: 'on'
      sequence:
      - action: switch.turn_on
        target:
          entity_id: switch.cloakroom_switch_left
        data: {}
        alias: Turn on the light.
  mode: restart
- id: '1692367263581'
  alias: Upstairs Landing Lights with Presence
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.upper_landing_presence_illuminance_lux
    below: 5
    id: Low Light
  - platform: numeric_state
    entity_id: sensor.upper_landing_presence_illuminance_lux
    id: Good Light
    above: input_number.upper_light_threshold_level
  - platform: state
    entity_id:
    - sensor.upstairs_landing_motion
    to: Detected
    id: Lights on
  - platform: state
    entity_id:
    - sensor.upstairs_landing_motion
    to: Clear
    id: Lights off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Lights on
      - condition: or
        conditions:
        - condition: sun
          before: sunrise
          after: sunset
          after_offset: -00:30:00
        - condition: numeric_state
          entity_id: sensor.upper_landing_presence_illuminance_lux
          below: input_number.low_light_threshold
      - condition: state
        entity_id: light.landing_lights_2
        state: 'off'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.landing_lights_2
    - conditions:
      - condition: trigger
        id:
        - Lights off
      - condition: state
        entity_id: light.landing_lights_2
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.landing_lights_2
    - conditions:
      - condition: trigger
        id:
        - Low Light
      - condition: or
        conditions:
        - condition: state
          entity_id: input_boolean.lower_landing_occupancy
          state: 'on'
        - condition: state
          entity_id: input_boolean.upper_landing_occupied
          state: 'on'
      - condition: time
        after: 07:00:00
        before: '22:00:00'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id:
          - light.landing_lights_2
    - conditions:
      - condition: trigger
        id:
        - Good Light
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.landing_lights_2
  mode: restart
- id: '1692631338194'
  alias: 'Family has left '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.family_home
    from: 'on'
    to: 'off'
    id: Auto
  - platform: state
    entity_id:
    - input_boolean.family_is_home
    from: 'on'
    to: 'off'
    id: Manual
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Auto
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.family_is_home
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.welcome_home
        data: {}
  mode: single
- id: '1692778631650'
  alias: Run Holiday Lights
  description: ''
  trigger:
  - platform: sun
    event: sunset
    id: sundown
  - platform: sun
    event: sunrise
    id: sunup
  - platform: state
    entity_id: input_boolean.holiday_mode
    id: cancel
    from: 'off'
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sundown
      - condition: state
        entity_id: input_boolean.holiday_mode
        state: 'on'
      sequence:
      - service: script.turn_on
        target:
          entity_id: script.randomised_holiday_lighting
        data: {}
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: sunup
        - condition: trigger
          id: cancel
      sequence:
      - service: script.turn_off
        target:
          entity_id: script.randomised_holiday_lighting
        data: {}
    default: []
  mode: single
- id: '1692783186265'
  alias: Holiday House Mode
  description: ''
  trigger:
  - platform: time
    at: 07:30:00
    id: Morning
  - platform: time
    at: '12:00:00'
    id: Lunchtime
  - platform: time
    at: '17:35:00'
    id: Dinnertime
  - platform: time
    at: '20:45:00'
    id: Evening
  condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: 'on'
  action:
  - service: script.house_in_holiday_mode
    data: {}
  mode: single
- id: '1693381841875'
  alias: List Daily Calendar Events
  description: ''
  trigger:
  - platform: time_pattern
    hours: /12
  condition: []
  action:
  - service: calendar.get_events
    data:
      duration:
        hours: 24
        minutes: 0
        seconds: 0
    target:
      entity_id: calendar.forrester_events
    response_variable: calendar_response
  - event: calendar_poll
    event_data:
      calendar_response: '{{ calendar_response }}'
  mode: single
- id: '1694676125633'
  alias: Time To Put Heating On
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: 0
  condition:
  - condition: numeric_state
    entity_id: sensor.indoor_temperature_mean_last_24_hours
    below: 18
  action:
  - data:
      message: Time to turn on the Heating?
    action: script.text_notify_parents
  mode: restart
- id: '1695732722060'
  alias: Main Bathroom Lights with Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.main_bathroom_presence_occupancy
    from: 'off'
    to: 'on'
    id: Light On
  - platform: state
    entity_id:
    - binary_sensor.main_bathroom_presence_occupancy
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: Light Off
  - alias: Bathroom Light off with Timer
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.bathroom_light
    id: Timer Done
    enabled: true
  - platform: state
    entity_id:
    - binary_sensor.overnight
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: Dim Lights
  - platform: state
    entity_id:
    - switch.main_bathroom_switch_light
    from: 'off'
    id: Switch On
    to: 'on'
  - platform: state
    entity_id:
    - switch.main_bathroom_switch_light
    from: 'on'
    id: Switch Off
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Light On
      - condition: state
        entity_id: binary_sensor.overnight
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.main_bathroom_presence_illuminance_lux
        below: input_number.low_light_threshold
      sequence:
      - data:
          color_temp: 200
          brightness: 64
        target:
          entity_id: light.main_bathroom_light
        action: light.turn_on
      - target:
          entity_id: timer.bathroom_light
        data: {}
        action: timer.start
    - conditions:
      - condition: trigger
        id:
        - Light On
      - condition: state
        entity_id: binary_sensor.overnight
        state: 'on'
      sequence:
      - data:
          rgb_color:
          - 255
          - 248
          - 52
          brightness: 26
        target:
          entity_id: light.main_bathroom_light
        action: light.turn_on
      - target:
          entity_id: timer.bathroom_light
        data: {}
        action: timer.start
    - conditions:
      - condition: trigger
        id:
        - Light Off
      - condition: state
        entity_id: light.main_bathroom_light
        state: 'on'
      - condition: state
        entity_id: timer.bathroom_light
        state: idle
      - condition: state
        entity_id: input_boolean.allow_main_bathroom_lights_max
        state: 'off'
      sequence:
      - data: {}
        target:
          entity_id: light.main_bathroom_light
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Timer Done
      - condition: state
        entity_id: binary_sensor.main_bathroom_presence_occupancy
        state: 'off'
      - condition: state
        entity_id: light.main_bathroom_light
        state: 'on'
      - condition: state
        entity_id: input_boolean.allow_main_bathroom_lights_max
        state: 'off'
      sequence:
      - target:
          entity_id: light.main_bathroom_light
        data: {}
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Dim Lights
      - condition: state
        entity_id: input_boolean.allow_main_bathroom_lights_max
        state: 'off'
      sequence:
      - data:
          rgb_color:
          - 255
          - 248
          - 52
          brightness: 26
        target:
          entity_id: light.main_bathroom_light
        action: light.turn_on
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - condition: state
        entity_id: binary_sensor.main_bathroom_occupied
        state: 'off'
      - data: {}
        target:
          entity_id: light.main_bathroom_light
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Switch On
      sequence:
      - data:
          color_temp: 200
          brightness: 64
        target:
          entity_id: light.main_bathroom_light
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Switch Off
      - condition: state
        entity_id: light.main_bathroom_light
        state: 'on'
      sequence:
      - data: {}
        target:
          entity_id: light.main_bathroom_light
        action: light.turn_off
  mode: single
- id: '1695736939384'
  alias: Kids Bathroom Lights with presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.jack_and_jill_presence_occupancy
    from: 'off'
    to: 'on'
    id: Light On
  - platform: state
    entity_id:
    - binary_sensor.jack_and_jill_presence_occupancy
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: Light Off
  - platform: time
    at: '20:00:10'
    id: Dim on
  - platform: state
    entity_id:
    - switch.jamie_bathroom_switch_left
    - switch.sean_bathroom_switch_right
    from: 'off'
    to: 'on'
    id: Lights to Max
  - platform: state
    entity_id:
    - switch.jamie_bathroom_switch_left
    - switch.sean_bathroom_switch_right
    from: 'on'
    to: 'off'
    id: Lights to Presence
  condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Light On
      - condition: state
        entity_id: input_boolean.allow_kids_bathroom_lights_max
        state: 'off'
      - condition: time
        after: 07:00:00
        before: '20:00:00'
      - condition: numeric_state
        entity_id: sensor.jack_and_jill_presence_illuminance_lux
        below: input_number.low_light_threshold
      sequence:
      - data:
          color_temp: 200
          brightness: 64
        target:
          entity_id: light.kids_bathroom_light
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Light On
      - condition: state
        entity_id: input_boolean.allow_kids_bathroom_lights_max
        state: 'off'
      - condition: time
        after: '20:00:00'
        before: 07:00:00
      - condition: numeric_state
        entity_id: sensor.jack_and_jill_presence_illuminance_lux
        below: input_number.low_light_threshold
      sequence:
      - data:
          rgb_color:
          - 255
          - 248
          - 52
          brightness: 26
        target:
          entity_id: light.kids_bathroom_light
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Light Off
      - condition: state
        entity_id: light.kids_bathroom_light
        state: 'on'
      - condition: state
        entity_id: input_boolean.allow_kids_bathroom_lights_max
        state: 'off'
      sequence:
      - target:
          entity_id: light.kids_bathroom_light
        data: {}
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Dim on
      sequence:
      - data:
          rgb_color:
          - 255
          - 248
          - 52
          brightness: 26
        target:
          entity_id: light.kids_bathroom_light
        action: light.turn_on
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - condition: state
        entity_id: binary_sensor.kids_bathroom_occupied
        state: 'off'
      - target:
          entity_id: light.kids_bathroom_light
        data: {}
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Lights to Max
      sequence:
      - target:
          entity_id: input_boolean.allow_kids_bathroom_lights_max
        data: {}
        action: input_boolean.turn_on
      - target:
          entity_id: light.kids_bathroom_light
        data:
          brightness: 255
          color_temp: 154
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Lights to Presence
      sequence:
      - target:
          entity_id: input_boolean.allow_kids_bathroom_lights_max
        data: {}
        action: input_boolean.turn_off
      - target:
          entity_id: light.kids_bathroom_light
        data: {}
        action: light.turn_off
  mode: restart
- id: '1696531313017'
  alias: Automations That Run When HA Starts or When Groups Reload
  description: ''
  trigger:
  - platform: homeassistant
    event: start
    id: HA Start
  - platform: state
    entity_id:
    - group.kitchen_occupancy
    to: unknown
    id: Group Reset
  condition: []
  action:
  - service: script.update_critical_battery_group_2
    data: {}
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: script.update_rechargeable_battery_group
    data: {}
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: script.update_srv_critical_battery_group
    data: {}
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: script.update_occupancy_groups
    data: {}
  mode: single
- id: '1698484133557'
  alias: Room Audio Sensor watch
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.room_audio
    to: unavailable
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.quiet_time
    state: 'off'
  action:
  - service: script.text_notify_dave
    data:
      message: The room audio sensor is unavailable
      title: ROOM AUDIO
  mode: single
- id: '1698678008574'
  alias: Temp halloween lights outside
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: -00:30:00
    id: 'on'
  - platform: state
    entity_id:
    - binary_sensor.lights_out
    from: 'off'
    to: 'on'
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - 'on'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.granny_charger_local
    - conditions:
      - condition: trigger
        id:
        - 'off'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.granny_charger_local
  mode: single
- id: '1701002313502'
  alias: Dining Room Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.tado_smart_radiator_thermostat_va0698169856
      input_scheduler_regular: schedule.general_heating_schedule
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_windows:
      - binary_sensor.dining_room_window_left_contact
      - binary_sensor.dining_room_window_right_contact
      input_mode_winter: input_boolean.winter_mode
      input_mode_holiday: input_boolean.holiday_mode
      input_presence_sensor: binary_sensor.dining_room_occupied
      input_force_max_temperature: input_boolean.boost_heating
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_change_comfort_temperature_on_physical_change: false
      input_presence_reaction_off_time: 5
      input_presence_reaction_on_time: 1
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_options:
      - presence
      input_away_offset: 2
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_temperature_sensor: sensor.dining_room_thermometer_temperature
      input_calibration_options:
      - generic_calibration
- id: '1701004289466'
  alias: Office Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.tado_smart_radiator_thermostat_va2179152384
      input_scheduler_regular: schedule.office_heating_schedule
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_windows:
      - binary_sensor.office_window_sensor_contact
      input_mode_winter: input_boolean.winter_mode
      input_mode_holiday: input_boolean.holiday_mode
      input_presence_sensor: binary_sensor.office_occupied
      input_presence_reaction_on_time: 1
      input_temperature_sensor: sensor.office_temperature_and_humidity_temperature
      input_force_max_temperature: input_boolean.boost_heating
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_change_comfort_temperature_on_physical_change: false
      input_presence_reaction_off_time: 10
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_offset: 2
      input_away_options:
      - presence
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_calibration_options:
      - generic_calibration
- id: '1701178419984'
  alias: Hallway Lights with Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.hallway_motion
    to: Detected
    id: Turn On
  - platform: state
    entity_id:
    - sensor.hallway_motion
    to: Clear
    id: Turn Off
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Turn On
      - condition: numeric_state
        entity_id: sensor.hallway_presence_illuminance_lux
        below: input_number.low_light_threshold
      - condition: state
        entity_id: light.hallway_lights
        state: 'off'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.hallway_lights
      - if:
        - condition: state
          entity_id: light.standard_lamp
          state: 'on'
        then:
        - service: light.turn_off
          target:
            entity_id: light.standard_lamp
          data: {}
    - conditions:
      - condition: trigger
        id:
        - Turn Off
      - condition: state
        entity_id: light.hallway_lights
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.hallway_lights
      - if:
        - condition: numeric_state
          entity_id: sensor.average_hallway_illuminance
          below: input_number.low_light_threshold
        - condition: state
          entity_id: binary_sensor.overnight
          state: 'off'
        then:
        - service: light.turn_on
          target:
            entity_id: light.standard_lamp
          data: {}
  mode: single
- id: '1701202599791'
  alias: Octopus WOF Spin Electricity
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.octopus_energy_a_e0d4de23_wheel_of_fortune_spins_electricity
    above: 0
  condition: []
  action:
  - repeat:
      count: '{{ states(''sensor.octopus_energy_a_e0d4de23_wheel_of_fortune_spins_electricity'')
        | int }}

        '
      sequence:
      - service: octopus_energy.spin_wheel_of_fortune
        data: {}
        target:
          entity_id: sensor.octopus_energy_a_e0d4de23_wheel_of_fortune_spins_electricity
  mode: single
- id: '1701203059618'
  alias: Octopus WOF Spin Gas
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.octopus_energy_a_e0d4de23_wheel_of_fortune_spins_gas
    above: 0
  condition: []
  action:
  - repeat:
      count: '{{ states(''sensor.octopus_energy_a_e0d4de23_wheel_of_fortune_spins_gas'')
        | int }}

        '
      sequence:
      - service: octopus_energy.spin_wheel_of_fortune
        data: {}
        target:
          entity_id: sensor.octopus_energy_a_e0d4de23_wheel_of_fortune_spins_gas
  mode: single
- id: '1701203391116'
  alias: Octoplus Join Saving Session
  description: ''
  trigger:
  - platform: event
    event_type: octopus_energy_new_octoplus_saving_session
    id: Event Fired
  - platform: time
    at: input_datetime.two_before_start_of_saving_session
    id: Pre Charge Battery
  - platform: time
    at: input_datetime.saving_session_start
    id: Start
  - platform: time
    at: input_datetime.saving_session_end
    id: End
  - platform: state
    entity_id:
    - switch.solaredge_i1_advanced_power_control
    from: unavailable
    to: 'on'
    id: Inverter Reset
  - platform: state
    entity_id:
    - switch.heater_greenhouse_s1
    from: 'off'
    to: 'on'
    id: Greenhouse On
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Event Fired
      sequence:
      - service: octopus_energy.join_octoplus_saving_session_event
        data:
          event_code: '{{ trigger.event.data["event_code"] }}'
        target:
          entity_id: event.octopus_energy_a_e0d4de23_octoplus_saving_session_events
      - service: persistent_notification.create
        data:
          title: Saving Sessions Updated
          message: "Joined new Octopus Energy saving session. It starts at {{ trigger.event.data[\"event_start\"].strftime('%H:%M')
            }} on {{ trigger.event.data[\"event_start\"].day }}/{{ trigger.event.data[\"event_start\"].month
            }} \n"
      - service: script.text_notify_dave
        data:
          title: ALERT! SAVING SESSION IMMINENT
          message: 'I have automagically enrolled you in an Octopus Energy Saving
            Session.  It starts at {{trigger.event.data["event_start"].strftime(''%H:%M'')
            }}  on {{trigger.event.data["event_start"].day }}/{{trigger.event.data["event_start"].month
            }}

            '
      - service: script.speech_engine
        data:
          where: '{{ states(''sensor.room_audio'')}}'
          message: "I have been informed by Greg Jackson, the CEO of Octopus Energy,that
            there is to be a Saving Session on {{ trigger.event.data[\"event_start\"].day
            }}/{{trigger.event.data[\"event_start\"].month }}. It starts at {{ trigger.event.data[\"event_start\"].strftime('%H:%M')
            }} and ends at {{ trigger.event.data[\"event_end\"].strftime('%H:%M')
            }} so I have automagically enrolled you. \n"
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.saving_session_enrolled
        data: {}
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.allow_battery_grid_discharge
        data: {}
      - delay:
          hours: 0
          minutes: 2
          seconds: 0
          milliseconds: 0
      - service: input_datetime.set_datetime
        data:
          time: '{{ (as_timestamp(state_attr(''binary_sensor.octopus_energy_a_e0d4de23_octoplus_saving_sessions'',''next_joined_event_start''))
            - 10800)|timestamp_custom (''%H:%M'')}}'
        target:
          entity_id: input_datetime.two_before_start_of_saving_session
        alias: Set  time helper 2 hours before session starts
      - service: input_datetime.set_datetime
        data:
          time: '{{as_timestamp(state_attr(''binary_sensor.octopus_energy_a_e0d4de23_octoplus_saving_sessions'',''next_joined_event_start''))|timestamp_custom
            (''%H:%M'')}}'
        target:
          entity_id: input_datetime.saving_session_start
        alias: Set time helper for session start
      - service: input_datetime.set_datetime
        data:
          time: '{{as_timestamp(state_attr(''binary_sensor.octopus_energy_a_e0d4de23_octoplus_saving_sessions'',''next_joined_event_end''))|timestamp_custom
            (''%H:%M'')}}'
        target:
          entity_id: input_datetime.saving_session_end
        alias: Set time helper for session end
    - conditions:
      - condition: trigger
        id:
        - Pre Charge Battery
      - condition: state
        entity_id: input_boolean.saving_session_enrolled
        state: 'on'
      sequence:
      - service: script.grid_charge_battery
        data: {}
      - delay:
          hours: 1
          minutes: 0
          seconds: 0
          milliseconds: 0
      - service: timer.cancel
        target:
          entity_id: timer.home_battery_3_hour_charge_period
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Start
      - condition: state
        entity_id: input_boolean.allow_battery_grid_discharge
        state: 'on'
      - condition: state
        entity_id: input_boolean.saving_session_enrolled
        state: 'on'
      sequence:
      - service: script.force_discharge_battery
        data: {}
      - if:
        - condition: state
          entity_id: humidifier.garage_dehumidifier_2
          state: 'on'
        then:
        - service: humidifier.turn_off
          target:
            entity_id:
            - humidifier.garage_dehumidifier_2
            device_id: []
            area_id: []
          data: {}
      - if:
        - condition: state
          entity_id: switch.heater_greenhouse_s1
          state: 'on'
        then:
        - service: switch.turn_off
          data: {}
          target:
            entity_id: switch.heater_greenhouse_s1
    - conditions:
      - condition: trigger
        id:
        - End
      - condition: state
        entity_id: input_boolean.saving_session_enrolled
        state: 'on'
      sequence:
      - service: script.turn_off
        target:
          entity_id: script.force_discharge_battery
        data: {}
      - device_id: 952193e87f675ba7f7e32eda5500c572
        domain: select
        entity_id: 0bdfb19491b49722c2a94351b9a673aa
        type: select_option
        option: Maximize Self Consumption
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.allow_battery_grid_discharge
          - input_boolean.saving_session_enrolled
        data: {}
      - service: humidifier.turn_on
        target:
          entity_id:
          - humidifier.garage_dehumidifier_2
          device_id: []
          area_id: []
        data: {}
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - if:
        - condition: numeric_state
          entity_id: sensor.greenhouse_thermometer_temperature
          below: 1
        then:
        - service: switch.turn_on
          target:
            entity_id: switch.heater_greenhouse_s1
          data: {}
    - conditions:
      - condition: trigger
        id:
        - Inverter Reset
      - condition: state
        entity_id: input_boolean.saving_session_enrolled
        state: 'on'
      - condition: state
        entity_id: input_boolean.allow_battery_grid_discharge
        state: 'on'
      - condition: time
        after: input_datetime.saving_session_start
        before: input_datetime.saving_session_end
      sequence:
      - service: script.force_discharge_battery
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Greenhouse On
      - condition: state
        entity_id: binary_sensor.octopus_energy_a_e0d4de23_octoplus_saving_sessions
        state: 'on'
      sequence:
      - service: switch.turn_off
        target:
          entity_id: switch.heater_greenhouse_s1
        data: {}
  mode: restart
- id: '1701436660276'
  alias: Sean's Room Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.tado_smart_radiator_thermostat_va3685235200
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_windows:
      - binary_sensor.sean_s_bedroom_window_left_contact
      - binary_sensor.sean_s_bedroom_window_right_contact
      input_mode_winter: input_boolean.winter_mode
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_mode_holiday: input_boolean.holiday_mode
      input_presence_reaction_on_time: 2
      input_temperature_sensor: sensor.seans_room_temperature_and_humidity_temperature
      input_force_max_temperature: input_boolean.boost_heating
      input_scheduler_regular: schedule.boys_heating_schedule
      input_presence_sensor: binary_sensor.seans_room_occupied
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_offset: 2
      input_away_options:
      - presence
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_calibration_options:
      - generic_calibration
- id: '1701436796947'
  alias: Jamie's Room Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.tado_smart_radiator_thermostat_va0947665408
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_windows:
      - binary_sensor.jamie_s_bedroom_window_right_contact
      - binary_sensor.jamie_s_bedroom_window_left_contact
      input_mode_winter: input_boolean.winter_mode
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_mode_holiday: input_boolean.holiday_mode
      input_presence_reaction_on_time: 2
      input_temperature_sensor: sensor.jamies_room_thermometer_temperature
      input_force_max_temperature: input_boolean.boost_heating
      input_scheduler_regular: schedule.boys_heating_schedule
      input_presence_sensor: binary_sensor.jamies_room_occupied
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_offset: 2
      input_away_options:
      - presence
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_calibration_options:
      - generic_calibration
- id: '1701538084707'
  alias: Intermittent Grid Charge Battery.
  description: ''
  trigger:
  - platform: time
    id: Activate Grid Charge
    at: '21:00:00'
  - platform: state
    entity_id:
    - binary_sensor.octopus_energy_target_intermittent_best_rates_3_hours_overnight
    from: 'off'
    to: 'on'
    id: Start Grid Charge
  - platform: state
    entity_id:
    - binary_sensor.octopus_energy_target_intermittent_best_rates_3_hours_overnight
    from: 'on'
    to: 'off'
    id: Stop Grid Charge
  - alias: End Charge With Timer
    platform: event
    event_type:
    - timer.finished
    - timer.cancelled
    event_data:
      entity_id: timer.home_battery_3_hour_charge_period
    id: End Grid Charge
    enabled: true
  - platform: state
    entity_id:
    - binary_sensor.morning
    from: 'off'
    to: 'on'
    id: Reset Timer
    alias: Reset Timer when Morning turns on
    enabled: true
  - platform: state
    entity_id:
    - switch.solaredge_i1_advanced_power_control
    from: unavailable
    to: 'on'
    id: Inverter Reset
  - platform: state
    entity_id:
    - binary_sensor.octopus_energy_target_best_half_hour_for_pre_peak_topuo
    from: 'off'
    to: 'on'
    id: Topup
  - platform: state
    entity_id:
    - binary_sensor.octopus_energy_target_best_half_hour_for_pre_peak_topuo
    from: 'on'
    to: 'off'
    id: Topdown
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Activate Grid Charge
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id:
          - input_boolean.grid_charge_home_battery
          device_id: []
          area_id: []
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Start Grid Charge
      - condition: state
        entity_id: input_boolean.grid_charge_home_battery
        state: 'on'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.home_battery_grid_charging
      - service: script.grid_charge_battery
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Stop Grid Charge
      sequence:
      - service: script.turn_off
        data: {}
        target:
          entity_id: script.grid_charge_battery
      - service: select.select_option
        target:
          entity_id: select.solaredge_i1_storage_command_mode
        data:
          option: Maximize Self Consumption
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.home_battery_grid_charging
      - service: timer.pause
        data: {}
        target:
          entity_id: timer.home_battery_3_hour_charge_period
    - conditions:
      - condition: trigger
        id:
        - End Grid Charge
      sequence:
      - service: script.turn_off
        data: {}
        target:
          entity_id: script.grid_charge_battery
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.home_battery_grid_charging
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.grid_charge_home_battery
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: select.select_option
        target:
          entity_id: select.solaredge_i1_storage_command_mode
        data:
          option: Maximize Self Consumption
    - conditions:
      - condition: trigger
        id:
        - Reset Timer
      sequence:
      - delay:
          hours: 0
          minutes: 33
          seconds: 0
          milliseconds: 0
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.home_battery_3_hour_charge_period
    - conditions:
      - condition: trigger
        id:
        - Inverter Reset
      - condition: state
        entity_id: input_boolean.grid_charge_home_battery
        state: 'on'
      - condition: state
        entity_id: binary_sensor.octopus_energy_target_intermittent_best_rates_3_hours_overnight
        state: 'on'
      sequence:
      - service: script.grid_charge_battery
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Topup
      - condition: or
        conditions:
        - condition: state
          entity_id: sensor.solar_battery_daytime_topup_needed
          state: 'true'
        - condition: numeric_state
          entity_id: sensor.battery_state_of_charge
          below: 50
      sequence:
      - service: script.battery_pre_peak_top_up
        metadata: {}
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Topdown
      - condition: state
        entity_id: input_boolean.home_battery_grid_charging
        state: 'on'
      sequence:
      - service: script.battery_pre_peak_top_down
        metadata: {}
        data: {}
  mode: restart
- id: '1701698220663'
  alias: Downstairs Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.downstairs
      input_scheduler_regular: schedule.general_heating_schedule
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_windows:
      - binary_sensor.front_door_sense_contact
      - binary_sensor.back_door_sensor_contact
      - binary_sensor.hallway_window_contact
      input_windows_reaction_time: 30
      input_mode_winter: input_boolean.winter_mode
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_mode_holiday: input_boolean.holiday_mode
      input_presence_sensor: binary_sensor.hallway_occupied
      input_temperature_sensor: sensor.downstairs_temperature
      input_force_max_temperature: input_boolean.boost_heating
      input_reset_comfort_temperature: false
      input_presence_reaction_on_time: 2
      input_service_call_delay: 3
      input_presence_reaction_off_time: 2
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_offset: 2
      input_away_options:
      - presence
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_calibration_options:
      - generic_calibration
      input_temperature_minimum_static: 10
      input_people_entering_home_duration:
        hours: 0
        minutes: 0
        seconds: 0
      input_people_leaving_home_duration:
        hours: 0
        minutes: 0
        seconds: 0
- id: '1701698657512'
  alias: Kids Bathroom Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.kids_bathroom
      input_scheduler_regular: schedule.general_heating_schedule
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_mode_winter: input_boolean.winter_mode
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_mode_holiday: input_boolean.holiday_mode
      input_presence_sensor: binary_sensor.kids_bathroom_occupied
      input_presence_reaction_on_time: 1
      input_temperature_sensor: sensor.kids_bathroom_temperature_and_humidity_temperature
      input_force_max_temperature: input_boolean.boost_heating
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_offset: 2
      input_away_options:
      - presence
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_calibration_options:
      - generic_calibration
- id: '1701699152456'
  alias: Main Bedroom Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.master_bedroom
      input_scheduler_regular: schedule.general_heating_schedule
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_windows:
      - binary_sensor.main_bedroom_window_left_contact
      - binary_sensor.main_bedroom_window_right_contact
      input_windows_reaction_time: 20
      input_mode_winter: input_boolean.winter_mode
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_mode_holiday: input_boolean.holiday_mode
      input_presence_reaction_off_time: 2
      input_presence_reaction_on_time: 2
      input_temperature_sensor: sensor.h5075_5177_temperature
      input_force_max_temperature: input_boolean.boost_heating
      input_service_call_delay: 5
      input_presence_sensor: binary_sensor.master_bedroom_occupied
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_offset: 2
      input_away_options:
      - presence
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_calibration_options:
      - generic_calibration
- id: '1701699367461'
  alias: En Suite Bathroom Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.en_suite_bathroom
      input_scheduler_regular: schedule.general_heating_schedule
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_windows:
      - binary_sensor.en_suite_window_sensor_contact
      input_windows_reaction_time: 20
      input_mode_winter: input_boolean.winter_mode
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_mode_holiday: input_boolean.holiday_mode
      input_temperature_sensor: sensor.en_suite_temperature_and_humidity_temperature
      input_force_max_temperature: input_boolean.boost_heating
      input_presence_sensor: binary_sensor.en_suite_occupied
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_offset: 2
      input_away_options:
      - presence
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_calibration_options:
      - generic_calibration
- id: '1701699596810'
  alias: Cloakroom Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.cloakroom
      input_scheduler_regular: schedule.general_heating_schedule
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_windows:
      - binary_sensor.cloakroom_window_contact
      input_windows_reaction_time: 20
      input_mode_winter: input_boolean.winter_mode
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_mode_holiday: input_boolean.holiday_mode
      input_presence_sensor: binary_sensor.cloakroom_occupied
      input_presence_reaction_off_time: 1
      input_presence_reaction_on_time: 1
      input_force_max_temperature: input_boolean.boost_heating
      input_temperature_minimum_static: 5
      input_people_entering_home_duration:
        hours: 0
        minutes: 0
        seconds: 30
      input_people_leaving_home_duration:
        hours: 0
        minutes: 1
        seconds: 0
      input_scheduler_selector: input_select.heating_schedules
      input_schedulers: []
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_offset: 2
      input_away_options:
      - presence
      input_temperature_sensor: sensor.cloakroom_temperature
      input_calibration_options:
      - generic_calibration
- id: '1701699918831'
  alias: Upstairs Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.upstairs
      input_scheduler_regular: schedule.upstairs_heating_schedule
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_mode_winter: input_boolean.winter_mode
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_mode_holiday: input_boolean.holiday_mode
      input_temperature_sensor: sensor.tado_smart_thermostat_su2860260864_current_temperature
      input_force_max_temperature: input_boolean.boost_heating
      input_service_call_delay: 4
      input_presence_sensor: binary_sensor.landing_occupied
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_offset: 2
      input_away_options:
      - presence
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_calibration_options:
      - generic_calibration
- id: '1701700218158'
  alias: Guest Bedroom Heating
  description: ''
  use_blueprint:
    path: panhans/heating_control.yaml
    input:
      input_trvs:
      - climate.guest_bedroom
      input_scheduler_regular: schedule.general_heating_schedule
      input_temperature_minimum: input_number.heating_eco_temperature
      input_temperature_comfort_static: 18
      input_temperature_comfort: input_number.heating_comfort_temperature
      input_persons:
      - person.david_forrester
      - person.gem_forrester
      input_mode_party:
      - input_boolean.party_mode
      input_mode_guest: input_boolean.guest_mode
      input_windows:
      - binary_sensor.guest_bedroom_window_left_contact
      - binary_sensor.guest_bedroom_window_right_contact
      input_windows_reaction_time: 20
      input_mode_winter: input_boolean.winter_mode
      input_scheduler_holiday: schedule.holiday_heating_schedule
      input_mode_holiday: input_boolean.holiday_mode
      input_presence_reaction_off_time: 1
      input_presence_reaction_on_time: 2
      input_temperature_sensor: sensor.guest_bedroom_temperature_and_humidity_temperature
      input_force_max_temperature: input_boolean.boost_heating
      input_presence_sensor: binary_sensor.guest_bedroom_occupied
      input_scheduler_presence: schedule.general_heating_schedule
      input_away_offset: 2
      input_away_options:
      - presence
      input_proximity: 4ceb8d4d4c0bfd33a044373150933207
      input_calibration_options:
      - generic_calibration
- id: '1703965572879'
  alias: Adaptive Lighting Active Toggle
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.adaptive_lighting_active
    id: AL Active
  - platform: homeassistant
    event: start
    id: HA start
  - platform: state
    entity_id:
    - input_boolean.adaptive_lighting_sleep_mode_active
    id: Sleep Mode Active
  - platform: state
    entity_id:
    - binary_sensor.quiet_time_boys
    id: Sleep Mode Toggle Winter
  - platform: state
    entity_id:
    - binary_sensor.overnight
    id: Sleep Mode Toggle Summer
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - AL Active
        - HA start
      sequence:
      - variables:
          al_active: '{{ states(''input_boolean.adaptive_lighting_active'') }}'
      - service: switch.turn_{{al_active}}
        data: {}
        entity_id:
        - switch.adaptive_lighting_back_door_zone
        - switch.adaptive_lighting_bedside_lamps
        - switch.adaptive_lighting_corner_lamp
        - switch.adaptive_lighting_hallway_lamp
        - switch.adaptive_lighting_hallway_lighting
        - switch.adaptive_lighting_kitchen_lights
        - switch.adaptive_lighting_spare_room_ceiling_lights
        - switch.adaptive_lighting_spare_room_lamps
        - switch.adaptive_lighting_spare_room_lamp_right
        - switch.adaptive_lighting_upstairs_landing
        - switch.adaptive_lighting_utility_light
    - conditions:
      - condition: trigger
        id:
        - HA start
        - Sleep Mode Active
      sequence:
      - variables:
          sleep_mode: '{{ states(''input_boolean.adaptive_lighting_sleep_mode_active'')
            }}'
      - service: switch.turn_{{ sleep_mode }}
        entity_id:
        - switch.adaptive_lighting_sleep_mode_back_door_zone
        - switch.adaptive_lighting_sleep_mode_bedside_lamps
        - switch.adaptive_lighting_sleep_mode_corner_lamp
        - switch.adaptive_lighting_sleep_mode_hallway_lamp
        - switch.adaptive_lighting_sleep_mode_hallway_lighting
        - switch.adaptive_lighting_sleep_mode_kitchen_lights
        - switch.adaptive_lighting_sleep_mode_spare_room_ceiling_lights
        - switch.adaptive_lighting_sleep_mode_spare_room_lamps
        - switch.adaptive_lighting_sleep_mode_spare_room_lamp_right
        - switch.adaptive_lighting_sleep_mode_upstairs_landing
        - switch.adaptive_lighting_sleep_mode_utility_light
    - conditions:
      - condition: trigger
        id:
        - Sleep Mode Toggle Winter
      - condition: state
        entity_id: input_boolean.bst
        state: 'off'
      sequence:
      - service: input_boolean.toggle
        target:
          entity_id: input_boolean.adaptive_lighting_sleep_mode_active
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Sleep Mode Toggle Summer
      - condition: state
        entity_id: input_boolean.bst
        state: 'on'
      sequence:
      - service: input_boolean.toggle
        target:
          entity_id: input_boolean.adaptive_lighting_sleep_mode_active
        data: {}
  mode: restart
- id: '1705321466021'
  alias: En-Suite Fan Control
  description: With blueprint
  use_blueprint:
    path: Blackshome/bathroom-humidity-exhaust-fan.yaml
    input:
      trigger: sensor.en_suite_humidity_change
      fan_switch:
        entity_id: switch.en_suite_fan_switch
      bathroom_humidity_sensor: sensor.en_suite_temperature_and_humidity_humidity
      rising_humidity: 5
      falling_humidity: -2
      time_out: 60
      include_max_humidity: maximum_humidity_enabled
      include_manual_fan_switch: enable_manual_fan_switch_auto_off
      month_winter_mode:
      - '12'
      - '1'
      - '2'
      - '3'
      - '4'
      winter_time_delay: 5
      winter_time_out: 60
      winter_include_max_humidity: maximum_humidity_enabled
      bypass_auto_off_delay: 60
      by_pass: group.en_suite_window
      include_bypass: bypass_enabled
      time_delay: 5
      include_winter_mode: winter_mode_enabled
      winter_rising_humidity: 2
      winter_falling_humidity: -3
      max_humidity: 90
      winter_max_humidity: 90
      include_manual_trigger: disable_manual_trigger
      manual_trigger: []
      manual_trigger_winter_time_delay: 20
      manual_trigger_default_time_delay: 5
      manual_fan_switch:
      - switch.en_suite_switch_right
- id: '1705650358527'
  alias: Living Room Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_1
    from: 'off'
    to: 'on'
    id: Living Room Presence
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_2
    from: 'off'
    to: 'on'
    id: Sofa Presence
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_3
    from: 'off'
    to: 'on'
    id: Recliner Presence
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_4
    from: 'off'
    to: 'on'
    id: Chair Presence
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_5
    from: 'off'
    to: 'on'
    id: Desk Presence
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_1
    from: 'on'
    to: 'off'
    id: Living Room Absence
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_2
    from: 'on'
    to: 'off'
    id: Sofa Absence
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_3
    from: 'on'
    to: 'off'
    id: Recliner Absence
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_4
    from: 'on'
    to: 'off'
    id: Chair Absence
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_5
    from: 'on'
    to: 'off'
    id: Desk Absence
  - platform: state
    entity_id:
    - media_player.dave_s_2nd_echo_pop
    attribute: last_called
    to: 'true'
    id: Alexa
  - platform: state
    entity_id:
    - switch.living_room_tv
    from: 'off'
    to: 'on'
    id: TV
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Living Room Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: living_room
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.living_room_occupied
    - conditions:
      - condition: trigger
        id:
        - Living Room Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.living_room_occupied
    - conditions:
      - condition: trigger
        id:
        - Alexa
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: living_room
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.living_room_occupied
    - conditions:
      - condition: trigger
        id:
        - TV
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: living_room
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.living_room_occupied
    - conditions:
      - condition: trigger
        id:
        - Sofa Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: living_room_sofa
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.living_room_sofa_occupied
    - conditions:
      - condition: trigger
        id:
        - Sofa Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.living_room_sofa_occupied
    - conditions:
      - condition: trigger
        id:
        - Recliner Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: living_room_recliner
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.recliner_sofa_occupied
    - conditions:
      - condition: trigger
        id: Recliner Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.recliner_sofa_occupied
    - conditions:
      - condition: trigger
        id:
        - Chair Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: living_room_corner_chair
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.living_room_corner_chair_occupied
    - conditions:
      - condition: trigger
        id:
        - Chair Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.living_room_corner_chair_occupied
    - conditions:
      - condition: trigger
        id:
        - Desk Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: living_room_desk
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.living_room_desk_occupied
    - conditions:
      - condition: trigger
        id:
        - Desk Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.living_room_desk_occupied
  mode: parallel
  max: 10
- id: '1705658876819'
  alias: Kitchen Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence_sensor_1
    from: 'off'
    to: 'on'
    id: Kitchen Presence
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence_sensor_2
    from: 'off'
    to: 'on'
    id: Table Presence
  - platform: state
    entity_id:
    - binary_sensor.presence_sensor_fp2_4b3c_presence_sensor_3
    from: 'off'
    to: 'on'
    id: Back Door Presence
  - platform: state
    entity_id:
    - sensor.utility_room_motion
    from: Clear
    to: Detected
    id: Utility Presence
  - platform: state
    entity_id: binary_sensor.presence_sensor_fp2_4b3c_presence_sensor_5
    from: 'off'
    to: 'on'
    id: Sink Presence
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence_sensor_1
    from: 'on'
    to: 'off'
    id: Kitchen Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence_sensor_2
    from: 'on'
    to: 'off'
    id: Table Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - binary_sensor.presence_sensor_fp2_4b3c_presence_sensor_3
    from: 'on'
    to: 'off'
    id: Back Door Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - sensor.utility_room_motion
    from: Detected
    to: Clear
    id: Utility Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id: binary_sensor.presence_sensor_fp2_4b3c_presence_sensor_5
    from: 'on'
    to: 'off'
    id: Sink Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - media_player.kitchen_echo_show
    attribute: last_called
    to: 'true'
    id: Alexa
  - platform: state
    entity_id:
    - switch.ingrid
    from: 'off'
    to: 'on'
    id: TV
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Kitchen Presence
        - Alexa
        - TV
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: kitchen
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_kitchen
    - conditions:
      - condition: trigger
        id:
        - Kitchen Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id:
          - input_boolean.room_occupied_kitchen
    - conditions:
      - condition: trigger
        id:
        - Table Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: kitchen_table
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.kitchen_table_occupied
    - conditions:
      - condition: trigger
        id:
        - Table Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.kitchen_table_occupied
    - conditions:
      - condition: trigger
        id:
        - Back Door Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: back_door_zone
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.back_door_zone_occupied
    - conditions:
      - condition: trigger
        id:
        - Back Door Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.back_door_zone_occupied
    - conditions:
      - condition: trigger
        id:
        - Sink Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: kitchen_sink
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.kitchen_sink_occupied
    - conditions:
      - condition: trigger
        id:
        - Sink Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.kitchen_sink_occupied
    - conditions:
      - condition: trigger
        id:
        - Utility Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: utility_room
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.utility_room_occupied
    - conditions:
      - condition: trigger
        id:
        - Utility Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.utility_room_occupied
  mode: parallel
  max: 10
- id: '1705676444512'
  alias: Dining Room Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.dining_room_presence_sensor_occupancy
    from: 'off'
    to: 'on'
    id: Presence
  - platform: state
    entity_id:
    - binary_sensor.dining_room_presence_sensor_occupancy
    from: 'on'
    to: 'off'
    id: Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - group.dining_room_occupancy
    from: 'off'
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Presence
      sequence:
      - service: input_text.set_value
        data:
          value: dining_room
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_dining_room
    - conditions:
      - condition: trigger
        id: Absence
      sequence:
      - if:
        - condition: time
          after: '13:00:00'
          before: '16:00:00'
          weekday:
          - sun
        then:
        - delay:
            hours: 0
            minutes: 10
            seconds: 0
            milliseconds: 0
        - condition: state
          entity_id: binary_sensor.dining_room_presence_sensor_occupancy
          state: 'off'
        - service: input_boolean.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.room_occupied_dining_room
        else:
        - service: input_boolean.turn_off
          metadata: {}
          data: {}
          target:
            entity_id: input_boolean.room_occupied_dining_room
  mode: restart
- id: '1705679467493'
  alias: Hallway Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.hallway_motion
    from: 'off'
    to: 'on'
    id: Presence
  - platform: state
    entity_id:
    - binary_sensor.hallway_motion
    from: 'on'
    to: 'off'
    id: Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: hallway
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_hallway
    - conditions:
      - condition: trigger
        id: Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_hallway
  mode: single
- id: '1705680032747'
  alias: Stairway Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.lower_landing_motion_occupancy
    - binary_sensor.upper_landing_presence_occupancy
    from: 'off'
    to: 'on'
    id: Presence
  - platform: state
    entity_id:
    - binary_sensor.lower_landing_motion_occupancy
    - binary_sensor.upper_landing_presence_occupancy
    from: 'on'
    to: 'off'
    id: Absence
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Presence
      - condition: template
        value_template: '{{ "Lower" in trigger.to_state.attributes.friendly_name }}'
      sequence:
      - service: input_text.set_value
        data:
          value: lower_landing
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.lower_landing_occupancy
    - conditions:
      - condition: trigger
        id: Presence
      - condition: template
        value_template: '{{ "Upper" in trigger.to_state.attributes.friendly_name }}'
      sequence:
      - service: input_text.set_value
        data:
          value: upper_landing
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.upper_landing_occupied
    - conditions:
      - condition: trigger
        id: Absence
      - condition: template
        value_template: '{{ "Lower" in trigger.to_state.attributes.friendly_name }}'
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.lower_landing_occupancy
    - conditions:
      - condition: trigger
        id: Absence
      - condition: template
        value_template: '{{ "Upper" in trigger.to_state.attributes.friendly_name }}'
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.upper_landing_occupied
  mode: parallel
- id: '1705681384235'
  alias: Main Bedroom Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.main_bedroom_fp2_presence_sensor_1
    from: 'off'
    to: 'on'
    id: Bedroom Presence
  - platform: state
    entity_id:
    - binary_sensor.main_bedroom_fp2_presence_sensor_1
    from: 'on'
    to: 'off'
    id: Bedroom Absence
  - platform: state
    entity_id:
    - binary_sensor.main_bedroom_fp2_presence_sensor_2
    from: 'off'
    to: 'on'
    id: Dads Side Presence
  - platform: state
    entity_id:
    - binary_sensor.main_bedroom_fp2_presence_sensor_2
    from: 'on'
    to: 'off'
    id: Dads Side Absence
  - platform: state
    entity_id:
    - binary_sensor.main_bedroom_fp2_presence_sensor_3
    from: 'off'
    to: 'on'
    id: Mums Side Presence
  - platform: state
    entity_id:
    - binary_sensor.main_bedroom_fp2_presence_sensor_3
    from: 'on'
    to: 'off'
    id: Mums Side Absence
  - platform: state
    entity_id:
    - binary_sensor.main_bedroom_fp2_presence_sensor_4
    from: 'off'
    to: 'on'
    id: En Suite Presence
  - platform: state
    entity_id:
    - binary_sensor.main_bedroom_fp2_presence_sensor_4
    from: 'on'
    to: 'off'
    id: En Suite Absence
  - platform: state
    entity_id:
    - media_player.main_bedroom_dot
    attribute: last_called
    to: 'true'
    id: Alexa
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Bedroom Presence
        - Alexa
      sequence:
      - service: input_text.set_value
        data:
          value: main_bedroom
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_main_bedroom
    - conditions:
      - condition: trigger
        id: Bedroom Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_main_bedroom
    - conditions:
      - condition: trigger
        id: Dads Side Presence
      sequence:
      - service: input_text.set_value
        data:
          value: dads_side_of_bed
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.dad_s_side_of_bed_occupied
    - conditions:
      - condition: trigger
        id: Dads Side Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.dad_s_side_of_bed_occupied
    - conditions:
      - condition: trigger
        id: Mums Side Presence
      sequence:
      - service: input_text.set_value
        data:
          value: mums_side_of_bed
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.mum_s_side_of_bed_occupied
    - conditions:
      - condition: trigger
        id: Mums Side Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.mum_s_side_of_bed_occupied
    - conditions:
      - condition: trigger
        id: En Suite Presence
      sequence:
      - service: input_text.set_value
        data:
          value: en_suite_bathroom
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_en_suite_bathroom
    - conditions:
      - condition: trigger
        id: En Suite Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_en_suite_bathroom
  mode: parallel
- id: '1705683632732'
  alias: Spare Bedroom Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.guest_bedroom_motion_occupancy
    id: Room Presence
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.guest_bedroom_motion_occupancy
    id: Room Absence
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - switch.casper_switch_0
    from: 'off'
    to: 'on'
    id: TV
  - platform: state
    entity_id:
    - media_player.guest_bedroom_echo_dot
    id: Alexa
    to: 'true'
    attribute: last_called
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Room Presence
        - Alexa
        - TV
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: guest_bedroom
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_guest_bedroom
    - conditions:
      - condition: trigger
        id:
        - Room Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_guest_bedroom
  mode: parallel
- id: '1705685810453'
  alias: Bathrooms Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.cloakroom_presence_occupancy
    from: 'off'
    to: 'on'
    id: Cloak Presence
  - platform: state
    entity_id:
    - binary_sensor.cloakroom_presence_occupancy
    from: 'on'
    to: 'off'
    id: Cloak Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - binary_sensor.jack_and_jill_presence_occupancy
    from: 'off'
    to: 'on'
    id: Boys Bathroom Presence
  - platform: state
    entity_id:
    - binary_sensor.jack_and_jill_presence_occupancy
    from: 'on'
    to: 'off'
    id: Boys Bathroom Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - binary_sensor.main_bathroom_presence_occupancy
    from: 'off'
    to: 'on'
    id: Main Bathroom Presence
  - platform: state
    entity_id:
    - binary_sensor.main_bathroom_presence_occupancy
    from: 'on'
    to: 'off'
    id: Main Bathroom Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Cloak Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: cloakroom
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_cloakroom
    - conditions:
      - condition: trigger
        id:
        - Cloak Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_cloakroom
    - conditions:
      - condition: trigger
        id:
        - Main Bathroom Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: main_bathroom
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_main_bathroom
    - conditions:
      - condition: trigger
        id:
        - Main Bathroom Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_main_bathroom
    - conditions:
      - condition: trigger
        id:
        - Boys Bathroom Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: boys_bathroom
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_jack_jill
    - conditions:
      - condition: trigger
        id:
        - Boys Bathroom Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_jack_jill
  mode: parallel
- id: '1705755032776'
  alias: Boys Bedroom Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.jamie_room_presence_occupancy
    from: 'off'
    to: 'on'
    id: Jamie Presence
  - platform: state
    entity_id:
    - media_player.living_room_dot
    attribute: last_called
    to: 'true'
    id: Jamie Alexa
  - platform: state
    entity_id:
    - binary_sensor.jamie_room_presence_occupancy
    from: 'on'
    to: 'off'
    id: Jamie Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - binary_sensor.sean_room_presence_occupancy
    from: 'off'
    to: 'on'
    id: Sean Presence
  - platform: state
    entity_id:
    - media_player.seans_room_dot
    attribute: last_called
    to: 'true'
    id: Sean Alexa
  - platform: state
    entity_id:
    - binary_sensor.sean_room_presence_occupancy
    from: 'on'
    to: 'off'
    id: Sean Absence
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Jamie Presence
        - Jamie Alexa
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: jamies_room
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_jamie_s_room
    - conditions:
      - condition: trigger
        id:
        - Sean Presence
        - Sean Alexa
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: seans_room
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_sean_s_room
    - conditions:
      - condition: trigger
        id:
        - Jamie Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_jamie_s_room
    - conditions:
      - condition: trigger
        id:
        - Sean Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_sean_s_room
  mode: single
- id: '1705755769292'
  alias: Office and Garage Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.office_presence_sensor_occupancy
    from: 'off'
    to: 'on'
    id: Office Presence
  - platform: state
    entity_id:
    - binary_sensor.garage_camera_cell_motion_detection
    from: 'off'
    to: 'on'
    id: Garage Presence
  - platform: state
    entity_id:
    - media_player.dave_s_2nd_echo_pop_2
    attribute: last_called
    to: 'true'
    id: Alexa
  - platform: state
    entity_id:
    - binary_sensor.office_presence_sensor_occupancy
    from: 'on'
    to: 'off'
    id: Office Absence
  - platform: state
    entity_id:
    - binary_sensor.garage_camera_cell_motion_detection
    from: 'on'
    to: 'off'
    id: Garage Absence
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Office Presence
        - Alexa
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: office
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_office
    - conditions:
      - condition: trigger
        id:
        - Garage Presence
      sequence:
      - service: input_text.set_value
        metadata: {}
        data:
          value: garage
        target:
          entity_id: input_text.room_presence
      - service: input_boolean.turn_on
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_garage
    - conditions:
      - condition: trigger
        id:
        - Garage Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_garage
    - conditions:
      - condition: trigger
        id:
        - Office Absence
      sequence:
      - service: input_boolean.turn_off
        metadata: {}
        data: {}
        target:
          entity_id: input_boolean.room_occupied_office
  mode: single
- id: '1706082726981'
  alias: Toothbrush Automations
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.smart_series_7000_236d_toothbrush_state
    to: running
  condition:
  - condition: or
    conditions:
    - condition: time
      after: 07:30:00
      before: 09:00:00
  action:
  - service: media_player.play_media
    metadata: {}
    data:
      media_content_id: Toothbrushing Song by Duggee & The Squirrels in upstairs group
      media_content_type: AMAZON_MUSIC
      entity_id: media_player.living_room_dot
  mode: single
- id: '1707681342530'
  alias: Schools Out Get Ready
  description: ''
  trigger:
  - platform: time
    at: input_datetime.get_ready_for_schools_out
  condition:
  - condition: state
    entity_id: calendar.school_holidays
    state: 'on'
  - condition: state
    entity_id: calendar.schools_out
    state: 'on'
  - condition: state
    entity_id: input_boolean.audible_notifications
    state: 'on'
  action:
  - service: script.status_annc
    data:
      where: living_room
      call_jetsons_chime: 1
      call_time_is: 1
      call_get_dressed_schools_out: 1
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - service: script.status_annc
    data:
      where: living_room
      call_jetsons_chime: 1
      call_time_is: 1
      call_brush_teeth: 1
  - delay:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
  - service: script.living_room_tv_toggle
    data: {}
  - if:
    - condition: state
      entity_id: light.dreamview_g1_pro
      state: 'on'
    then:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.dreamview_g1_pro
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - service: script.status_annc
    data:
      where: '{{ states(''sensor.room_audio'') }}'
      call_time_is: 1
      call_late_schools_out: 1
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.schools_out_morning_announcements_played
    data: {}
  mode: single
- id: '1707910888792'
  alias: Boys Room Lights Holiday Mode
  description: ''
  trigger:
  - platform: state
    entity_id:
    - calendar.school_holidays
    from: 'off'
    to: 'on'
    id: Holiday On
  - platform: state
    entity_id:
    - calendar.school_holidays
    from: 'on'
    to: 'off'
    id: Holiday Off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Holiday On
      sequence:
      - delay:
          hours: 7
          minutes: 40
          seconds: 0
          milliseconds: 0
      - service: media_player.play_media
        data:
          media_content_id: enable holiday lights
          media_content_type: routine
        target:
          entity_id: media_player.kitchen_echo_show
    - conditions:
      - condition: trigger
        id: Holiday Off
      sequence:
      - delay:
          hours: 7
          minutes: 40
          seconds: 0
          milliseconds: 0
      - service: media_player.play_media
        data:
          media_content_id: disable holiday lights
          media_content_type: routine
        target:
          entity_id: media_player.kitchen_echo_show
  mode: single
- id: '1708267952872'
  alias: Smart Button Upstairs 2 Automations
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.smart_button_upstairs_2_action
    id: Lights to max
    to: single
  - platform: state
    entity_id:
    - sensor.smart_button_upstairs_2_action
    id: Lights to presence
    to: double
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Lights to max
      sequence:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.allow_kids_bathroom_lights_max
        data: {}
      - service: light.turn_on
        target:
          entity_id: light.kids_bathroom_light
        data:
          brightness: 255
          color_temp: 154
    - conditions:
      - condition: trigger
        id:
        - Lights to presence
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.allow_kids_bathroom_lights_max
        data: {}
      - service: light.turn_off
        target:
          entity_id: light.kids_bathroom_light
        data: {}
  mode: single
- id: '1709051651347'
  alias: Notify on family members zone change
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.david_forrester
    - person.gem_forrester
    to:
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
  action:
  - variables:
      state_from: '{{ trigger.from_state.state }}'
      state_to: '{{ trigger.to_state.state }}'
      person: '{{ state_attr(trigger.entity_id, ''friendly_name'') }}'
      event: "{%- if state_from == 'not_home' -%}\n  {{ 'arrived' if state_to == 'home'
        else 'arrived at' }}\n{%- else -%}\n  left\n{%- endif -%}"
      zone: '{{ state_to if state_from == ''not_home'' else state_from }}'
      emoji: "{{ '\U0001F3E0' if zone == 'home' else '\U0001F4CD' }}"
  - service: script.text_notify_parents
    data:
      message: '{{ emoji }} {{ person }} has {{ event }} {{ zone }}'
  mode: single
- id: '1709492215815'
  alias: FitBit Automations
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.sense_battery_level
    below: 20
    id: Low battery
  - platform: numeric_state
    entity_id:
    - sensor.sense_battery_level
    above: 99.9
    id: Charged
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Low battery
      sequence:
      - service: script.text_notify_dave
        data:
          title: FITBIT ALERT
          message: Your FitBit battery is low. Please charge.
    - conditions:
      - condition: trigger
        id:
        - Charged
      sequence:
      - service: script.text_notify_dave
        data:
          title: FITBIT ALERT
          message: Your FitBit battery is charged.
  mode: single
- id: '1712485329081'
  alias: Zigbee Device Watch BP
  description: Notify of any offline Zigbee devices at 8pm daily.
  use_blueprint:
    path: Mr-Groch/offline-notification-for-sensors-with-last_seen.yaml
    input:
      hours: 12
      time: '20:00:00'
      actions:
      - service: script.text_notify_dave
        metadata: {}
        data:
          title: ZIGBEE DEVICES OFFLINE
          message: 'These Zigbee devices may be offline: {{sensors}}'
- id: '1712485674343'
  alias: Zigbee Device Watch and Notify
  description: 24 hour monitor of Zigbee devices
  trigger:
  - platform: state
    entity_id:
    - sensor.zigbee_devices_offline
    from:
    to:
  condition: []
  action:
  - service: script.text_notify_dave
    metadata: {}
    data:
      title: ZIGBEE DEVICE OFFLINE
      message: The following Zigbee devices are offline {{ states('sensor.zigbee_devices_offline')}}
  - service: persistent_notification.create
    data:
      title: ZIGBEE DEVICE OFFLINE
      message: The following Zigbee devices are offline {{ states('sensor.zigbee_devices_offline')}}
  mode: single
- id: '1712735295145'
  alias: Battery Low Notification
  description: Battery Low Notification with auto dismiss
  trigger:
  - platform: event
    event_type: battery_notes_battery_threshold
    event_data:
      battery_low: true
    id: low
    alias: Battery went low
  - platform: event
    event_type: battery_notes_battery_threshold
    event_data:
      battery_low: false
    id: high
    alias: Battery went high
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - low
      sequence:
      - service: persistent_notification.create
        data:
          title: '{{ trigger.event.data.device_name }} Battery Low

            '
          notification_id: '{{ trigger.event.data.device_id }}-{{ trigger.event.data.source_entity_id
            }}'
          message: 'The device has a battery level of {{ trigger.event.data.battery_level
            }}% {{ ''\n'' -}} You need {{ trigger.event.data.battery_quantity }}×
            {{ trigger.event.data.battery_type }}

            '
    - conditions:
      - condition: trigger
        id:
        - high
      sequence:
      - service: persistent_notification.dismiss
        data:
          notification_id: '{{ trigger.event.data.device_id }}-{{ trigger.event.data.source_entity_id
            }}'
  mode: queued
- id: '1713541234909'
  alias: Update Octopus Target Rate Lengths
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_number.home_battery_charge_length
    id: Home Battery
  - platform: state
    entity_id:
    - input_number.ev_charge_length_hrs
    id: EV
  - platform: state
    entity_id:
    - binary_sensor.evening
    from: 'off'
    to: 'on'
    id: Set
  - platform: state
    entity_id:
    - sensor.car_battery_hours_to_full
    id: Rolec
  - platform: state
    entity_id:
    - input_number.pre_peak_topup_length
    id: TU Length
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Home Battery
        - Set
      sequence:
      - target:
          entity_id: binary_sensor.octopus_energy_target_intermittent_best_rates_3_hours_overnight
        data:
          target_hours: '"{{ states(''input_number.home_battery_charge_length'')}}"

            '
        action: octopus_energy.update_target_config
    - conditions:
      - condition: trigger
        id:
        - EV
        - Set
      sequence:
      - target:
          entity_id: binary_sensor.octopus_energy_target_intermittent_best_rates_total_4_hours
        data:
          target_hours: '"{{ states(''input_number.ev_charge_length_hrs'')}}"

            '
        action: octopus_energy.update_target_config
    - conditions:
      - condition: trigger
        id:
        - Rolec
      sequence:
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - target:
          entity_id: binary_sensor.octopus_energy_target_intermittent_best_rates_total_4_hours
        data:
          target_hours: '{{ states(''sensor.set_octopus_time_for_rolec'')}}

            '
        action: octopus_energy.update_target_config
    - conditions:
      - condition: trigger
        id:
        - TU Length
      sequence:
      - target:
          entity_id: binary_sensor.octopus_energy_target_best_half_hour_for_pre_peak_topuo
        data:
          target_hours: '"{{ states(''input_number.pre_peak_topup_length'')}}"

            '
        action: octopus_energy.update_target_config
  mode: single
- id: '1713619542387'
  alias: HACS Updates Notify
  description: ''
  trigger:
  - platform: numeric_state
    entity_id:
    - sensor.hacs_updates_available
    above: 1
    id: Single Update
  - platform: numeric_state
    entity_id:
    - sensor.hacs_updates_available
    above: 4
    id: More Updates
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Single Update
      sequence:
      - service: script.text_notify_dave
        data:
          title: HACS Update
          message: There is a new HACS component update available.
    - conditions:
      - condition: trigger
        id:
        - More Updates
      sequence:
      - service: script.text_notify_dave
        data:
          title: More HACS Updates
          message: There are now 5 HACS component updates waiting.
  mode: single
- id: '1715410086552'
  alias: 'Charge Battery from Clipped Solar '
  description: Charges battery from clipped DC power when solar production estimate
    is high.
  trigger:
  - platform: state
    entity_id:
    - input_boolean.home_battery_grid_charging
    - binary_sensor.octopus_energy_target_intermittent_best_rates_3_hours_overnight
    to: 'off'
    from: 'on'
    id: Grid Charge Finished
    alias: When battery finishes grid charge.
  - platform: numeric_state
    entity_id:
    - sensor.solaredge_b1_state_of_energy
    above: 99.5
    id: Charge Complete
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Grid Charge Finished
      - condition: template
        value_template: '{{ is_state_attr(''binary_sensor.octopus_energy_target_intermittent_best_rates_3_hours_overnight'',''next_duration_in_hours'',0)}}'
      - condition: numeric_state
        entity_id: sensor.solcast_pv_forecast_forecast_today
        above: 40
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.charge_rate_limited
      - service: number.set_value
        target:
          entity_id:
          - number.solaredge_i1_storage_charge_limit
        data:
          value: '{{states(''input_number.storage_charge_limit'')|float(0)}}'
    - conditions:
      - condition: trigger
        id:
        - Charge Complete
      - condition: state
        entity_id: input_boolean.charge_rate_limited
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id:
          - input_boolean.charge_rate_limited
        data: {}
      - service: number.set_value
        metadata: {}
        data:
          value: '7000'
        target:
          entity_id: number.solaredge_i1_storage_charge_limit
  mode: single
- id: '1715787491149'
  alias: Summer Battery Discharge
  description: ''
  trigger:
  - platform: time
    at: input_datetime.start_battery_discharge
  condition:
  - condition: state
    entity_id: input_boolean.allow_battery_grid_discharge
    state: 'on'
  action:
  - service: number.set_value
    metadata: {}
    data:
      value: '{{ states(''input_number.storage_command_timeout_default_period'') |
        float(0) }}'
    target:
      entity_id: number.solaredge_i1_storage_command_timeout
  - service: select.select_option
    metadata: {}
    data:
      option: Discharge to Maximize Export
    target:
      entity_id: select.solaredge_i1_storage_command_mode
  mode: single
- id: '1715791208924'
  alias: Clocks Changing
  description: ''
  trigger:
  - platform: time
    at: '10:00:00'
  - platform: time
    at: '19:00:00'
  condition:
  - condition: template
    value_template: '{{ states(''sensor.daylight_savings_days_until'') | int(0) in
      [7,1] }}'
  action:
  - service: script.text_notify_dave
    metadata: {}
    data:
      message: '{%- set days = states(''sensor.daylight_savings_days_until'') | int(0)
        %} {%- set plural = ''s'' if days | int(0) > 1 else '''' %} Clocks change
        in {{ days }} day{{plural}}, you will {{ states(''sensor.daylight_savings_phrase'')
        }}!

        '
  - condition: template
    value_template: '{{states(''sensor.daylight_savings_days_until'') | int(0)  ==
      0 }}'
  - service: input_boolean.toggle
    metadata: {}
    data: {}
    target:
      entity_id:
      - input_boolean.bst
      - input_boolean.gmt
  mode: single
- id: '1716278464575'
  alias: Letterbox
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.letterbox_contact
    to: 'off'
    from: 'on'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.front_door_motion_detected
      state: 'on'
    - condition: state
      entity_id: binary_sensor.front_door_person_detected
      state: 'on'
  action:
  - data:
      message: You have post!
      title: POST!
    action: script.text_notify_parents
  - condition: state
    entity_id: input_boolean.audible_notifications
    state: 'on'
  - data:
      where: '{{ states(''sensor.room_audio'')}}'
      message: You have got post.
    action: script.speech_engine
  - action: input_boolean.toggle
    target:
      entity_id: input_boolean.post
    data: {}
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.family_home
      to: 'off'
      from: 'on'
  - action: input_boolean.toggle
    target:
      entity_id: input_boolean.post
    data: {}
  mode: parallel
  max: 10
- id: '1716477352889'
  alias: Solcast update
  description: ''
  trigger:
  - platform: template
    value_template: "{% set nr = as_datetime(state_attr('sun.sun','next_rising'))
      | as_local %} {% set ns = as_datetime(state_attr('sun.sun','next_setting'))
      | as_local %} {% set api_request_limit = 10 %} {% if nr > ns %}\n  {% set nr
      = nr - timedelta(hours = 24) %} \n{% endif %} {% set hours_difference = (ns
      - nr) %} {% set interval_hours = hours_difference / api_request_limit %} {%
      set ns = namespace(match = false) %} {% for i in range(api_request_limit) %}\n
      \ {% set start_time = nr + (i * interval_hours) %}\n  {% if ((start_time - timedelta(seconds=30))
      <= now()) and (now() <= (start_time + timedelta(seconds=30))) %}\n    {% set
      ns.match = true %}\n  {% endif %}\n{% endfor %} {{ ns.match }}"
  condition:
  - condition: sun
    before: sunset
    after: sunrise
  action:
  - delay:
      seconds: '{{ range(30, 360)|random|int }}'
  - service: solcast_solar.update_forecasts
    data: {}
  mode: single
- id: '1716822659702'
  alias: Battery Replaced
  description: Battery Replaced
  trigger:
  - platform: event
    event_type: battery_notes_battery_increased
  condition: []
  action:
  - service: battery_notes.set_battery_replaced
    data:
      device_id: '{{ trigger.event.data.device_id }}'
      source_entity_id: '{{ trigger.event.data.source_entity_id }}'
  mode: queued
- id: '1716822694690'
  alias: Battery Increased Notification
  description: Battery Increased Notification
  trigger:
  - platform: event
    event_type: battery_notes_battery_increased
  condition: []
  action:
  - service: persistent_notification.create
    data:
      title: '{{ trigger.event.data.device_name }} Battery Increased

        '
      message: 'The device has increased its battery level.  Consequently, I have
        marked it as replaced.  If this is not the case, you know what to do.

        '
  mode: queued
- id: '1716823359993'
  alias: Restart Z2M
  description: ''
  trigger:
  - platform: time
    at: '23:30:00'
  condition:
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states(''sensor.dining_room_router_last_seen'')))
        | timestamp_custom(''%d'')|int >3}}'
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states(''sensor.guest_bedroom_router_last_seen'')))
        | timestamp_custom(''%d'')|int >3}}'
  action:
  - service: input_boolean.toggle
    target:
      entity_id: input_boolean.audible_notifications
    data: {}
  - service: hassio.addon_restart
    data:
      addon: 45df7312_zigbee2mqtt
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.zigbee2mqtt_running
      to: 'on'
      for:
        hours: 0
        minutes: 5
        seconds: 0
  - service: input_boolean.toggle
    target:
      entity_id: input_boolean.audible_notifications
    data: {}
  mode: single
- id: '1717512832784'
  alias: Boys Room Camera Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.seans_room_motion
    - group.jamies_room_motion
    not_from:
    - unavailable
    - unknown
    to: 'on'
    id: Room Motion
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: state
    entity_id:
    - group.seans_room_motion
    - group.jamies_room_motion
    not_from:
    - unavailable
    - unknown
    to: 'off'
    id: Room No Motion
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - platform: state
    entity_id:
    - camera.sean_s_room_camera_hd_stream
    - camera.sean_s_room_camera_sd_stream
    - camera.jamie_s_room_camera_hd_stream
    - camera.jamie_s_room_camera_sd_stream
    to: unavailable
    id: Stream Unavailable
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Room Motion
      - condition: template
        value_template: '{{ ''Seans'' in trigger.to_state.attributes.friendly_name
          }}'
      - condition: state
        entity_id: input_boolean.allow_seans_room_camera_view
        state: 'off'
      - condition: state
        entity_id: switch.sean_s_room_camera_privacy
        state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.sean_s_room_camera_privacy
    - conditions:
      - condition: trigger
        id:
        - Room No Motion
      - condition: template
        value_template: '{{ ''Seans'' in trigger.to_state.attributes.friendly_name
          }}'
      - condition: state
        entity_id: switch.sean_s_room_camera_privacy
        state: 'off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.sean_s_room_camera_privacy
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Room Motion
      - condition: template
        value_template: '{{ ''Jamies'' in trigger.to_state.attributes.friendly_name
          }}'
      - condition: state
        entity_id: input_boolean.allow_jamies_room_camera_view
        state: 'off'
      - condition: state
        entity_id: switch.jamie_s_room_camera_privacy
        state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.jamie_s_room_camera_privacy
    - conditions:
      - condition: trigger
        id:
        - Room No Motion
      - condition: template
        value_template: '{{ ''Jamies'' in trigger.to_state.attributes.friendly_name
          }}'
      - condition: state
        entity_id: switch.jamie_s_room_camera_privacy
        state: 'off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.jamie_s_room_camera_privacy
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Stream Unavailable
      - condition: template
        value_template: '{{ ''Seans'' in trigger.to_state.attributes.friendly_name
          }}'
      sequence:
      - service: homeassistant.reload_config_entry
        target:
          entity_id: camera.sean_s_room_camera_hd_stream
        data: {}
      - service: persistent_notification.create
        metadata: {}
        data:
          message: Sean's Camera streams became unavailable so the integration restarted.
          title: Camera Restart
    - conditions:
      - condition: trigger
        id:
        - Stream Unavailable
      - condition: template
        value_template: '{{ ''Jamies'' in trigger.to_state.attributes.friendly_name
          }}'
      sequence:
      - service: homeassistant.reload_config_entry
        target:
          entity_id:
          - camera.jamie_s_room_camera_hd_stream
        data: {}
      - service: persistent_notification.create
        metadata: {}
        data:
          message: Jamie's Camera streams became unavailable so the integration restarted.
          title: Camera Restart
  mode: parallel
  max: 10
- id: '1717671720961'
  alias: Hallway Camera Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.hallway_motion
    from: Clear
    to: Detected
    id: Hallway Motion
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: state
    entity_id:
    - sensor.hallway_motion
    from: Detected
    to: Clear
    id: Hallway No Motion
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - platform: state
    entity_id:
    - camera.hallway_camera_hd_stream
    - camera.hallway_camera_sd_stream
    to: unavailable
    id: Stream Unavailable
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Hallway Motion
      - condition: state
        state: 'off'
        entity_id: input_boolean.allow_hallway_camera_view
      - condition: state
        entity_id: switch.hallway_camera_privacy
        state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.hallway_camera_privacy
    - conditions:
      - condition: trigger
        id:
        - Hallway No Motion
      - condition: state
        entity_id: switch.hallway_camera_privacy
        state: 'off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.hallway_camera_privacy
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Stream Unavailable
      sequence:
      - service: homeassistant.reload_config_entry
        target:
          entity_id: camera.hallway_camera_sd_stream
        data: {}
      - service: persistent_notification.create
        metadata: {}
        data:
          message: Hallway Camera streams became unavailable so the integration restarted.
          title: Camera Restart
  mode: single
- id: '1717937528622'
  alias: Upstairs Landing Camera Control
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.upstairs_landing_motion
    id: Landing Motion
    for:
      hours: 0
      minutes: 0
      seconds: 5
    to: Detected
  - platform: state
    entity_id:
    - sensor.upstairs_landing_motion
    id: Landing No Motion
    for:
      hours: 0
      minutes: 3
      seconds: 0
    to: Clear
  - platform: state
    entity_id:
    - camera.landing_camera_sd_stream
    - camera.landing_camera_hd_stream
    to: unavailable
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: Stream Unavailable
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Landing Motion
      - condition: state
        state: 'off'
        entity_id: input_boolean.allow_landing_camera_view
      - condition: state
        entity_id: switch.landing_camera_privacy
        state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.landing_camera_privacy
    - conditions:
      - condition: trigger
        id:
        - Landing No Motion
      - condition: state
        entity_id: switch.landing_camera_privacy
        state: 'off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id:
          - switch.landing_camera_privacy
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Stream Unavailable
      sequence:
      - service: homeassistant.reload_config_entry
        target:
          entity_id: camera.landing_camera_sd_stream
        data: {}
      - service: persistent_notification.create
        metadata: {}
        data:
          message: Landing Camera streams became unavailable so the integration restarted.
          title: Camera Restart
  mode: parallel
  max: 10
- id: '1717432463815'
  alias: Spare Room Camera Control
  description: ''
  trigger:
  - platform: state
    entity_id: group.spare_room_motion
    from: 'off'
    to: 'on'
    id: Spare Room Motion
    for:
      hours: 0
      minutes: 0
      seconds: 5
  - platform: state
    entity_id: group.spare_room_motion
    from: 'on'
    to: 'off'
    id: Spare Room No Motion
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - platform: state
    entity_id:
    - camera.guest_bedroom_camera_hd_stream
    - camera.guest_bedroom_camera_sd_stream
    to: unavailable
    id: Stream Unavailable
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Spare Room Motion
      - condition: state
        entity_id: input_boolean.allow_spare_room_camera_view
        state: 'off'
      - condition: state
        entity_id: switch.guest_bedroom_camera_privacy
        state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.guest_bedroom_camera_privacy
    - conditions:
      - condition: trigger
        id:
        - Spare Room No Motion
      - condition: state
        entity_id: switch.guest_bedroom_camera_privacy
        state: 'off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.guest_bedroom_camera_privacy
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Stream Unavailable
      sequence:
      - service: homeassistant.reload_config_entry
        target:
          entity_id: camera.guest_bedroom_camera_hd_stream
        data: {}
      - service: persistent_notification.create
        metadata: {}
        data:
          message: Spare Room Camera streams became unavailable so the integration
            restarted.
          title: Camera Restart
  mode: parallel
  max: 10
- id: '1718135784923'
  alias: Bluetooth Dongle Monitor
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.greenhouse_thermometer_temperature
    to: unavailable
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition: []
  action:
  - service: script.text_notify_dave
    data:
      message: The bluetooth dongle has lost connection.
  mode: single
- id: '1720896340186'
  alias: Test ESPresence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.daves_phone_espresence
    - sensor.gems_phone_espresence
    to: livingroom
    id: Living Room
  - platform: state
    entity_id:
    - sensor.daves_phone_espresence
    - sensor.gems_phone_espresence
    to: not_home
    id: Not home
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Living Room
      - condition: template
        value_template: '{{ ''Gems'' in trigger.to_state.attributes.friendly_name
          }}'
      sequence:
      - service: script.text_notify_dave
        data:
          message: Gem is in the living room
    - conditions:
      - condition: trigger
        id:
        - Living Room
      - condition: template
        value_template: '{{ ''Daves'' in trigger.to_state.attributes.friendly_name
          }}'
      sequence:
      - service: script.text_notify_dave
        data:
          message: Dave is in the living room
    - conditions:
      - condition: trigger
        id:
        - Not home
      - condition: template
        value_template: '{{ ''Gems'' in trigger.to_state.attributes.friendly_name
          }}'
      sequence:
      - service: script.text_notify_dave
        data:
          message: Gem has left the living room
    - conditions:
      - condition: trigger
        id:
        - Not home
      - condition: template
        value_template: '{{ ''Daves'' in trigger.to_state.attributes.friendly_name
          }}'
      sequence:
      - service: script.text_notify_dave
        data:
          message: Dave has left the living room
  mode: single
- id: '1721940979125'
  alias: Button test
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.smart_button_upstairs_1_action
    to: release
  - platform: state
    entity_id:
    - sensor.smart_button_downstairs_1_action
    to: release
  condition: []
  action: []
  mode: single
- id: '1721994093301'
  alias: Tapo Cams Skip Update
  description: Skip firmware updates for Tapo Cameras
  trigger:
  - platform: state
    entity_id:
    - update.hallway_camera_update
    - update.landing_camera_update
    - update.loft_camera_update
    - update.garage_camera_update
    - update.guest_bedroom_camera_update
    - update.sean_s_room_camera_update
    - update.jamie_s_room_camera_update
    from:
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{"Garage" in trigger.to_state.attributes.friendly_name }}'
      sequence:
      - target:
          entity_id:
          - update.garage_camera_update
        data: {}
        action: update.skip
    - conditions:
      - condition: template
        value_template: '{{"Hallway" in trigger.to_state.attributes.friendly_name
          }}'
      sequence:
      - target:
          entity_id:
          - update.hallway_camera_update
        data: {}
        action: update.skip
    - conditions:
      - condition: template
        value_template: '{{"Landing" in trigger.to_state.attributes.friendly_name
          }}'
      sequence:
      - target:
          entity_id:
          - update.landing_camera_update
        data: {}
        action: update.skip
    - conditions:
      - condition: template
        value_template: '{{"Guest" in trigger.to_state.attributes.friendly_name }}'
      sequence:
      - target:
          entity_id:
          - update.guest_bedroom_camera_update
        data: {}
        action: update.skip
    - conditions:
      - condition: template
        value_template: '{{"Loft" in trigger.to_state.attributes.friendly_name }}'
      sequence:
      - target:
          entity_id:
          - update.loft_camera_update
        data: {}
        action: update.skip
    - conditions:
      - condition: template
        value_template: '{{"Sean''s" in trigger.to_state.attributes.friendly_name
          }}'
      sequence:
      - target:
          entity_id:
          - update.sean_s_room_camera_update
        data: {}
        action: update.skip
    - conditions:
      - condition: template
        value_template: '{{"Jamie''s" in trigger.to_state.attributes.friendly_name
          }}'
      sequence:
      - target:
          entity_id:
          - update.jamie_s_room_camera_update
        data: {}
        action: update.skip
  mode: single
- id: '1722256809723'
  alias: Front Door Visitor
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_doorbell_camera_visitor
    to: 'on'
    from: 'off'
    id: Visitor
  - platform: state
    entity_id:
    - binary_sensor.front_door_sense_contact
    from: 'off'
    to: 'on'
    id: Door Open
  - platform: state
    entity_id:
    - binary_sensor.dave_home
    from: 'on'
    to: 'off'
    id: Dave Out
  - platform: state
    entity_id:
    - binary_sensor.dave_home
    from: 'off'
    to: 'on'
    id: Dave Home
  - platform: state
    entity_id:
    - binary_sensor.family_home
    from: 'on'
    to: 'off'
    id: Family Out
  - platform: state
    entity_id:
    - binary_sensor.family_home
    from: 'off'
    to: 'on'
    id: Family Home
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Visitor
      sequence:
      - target:
          entity_id: input_boolean.front_doorbell_active
        data: {}
        action: input_boolean.toggle
      - target:
          entity_id: number.front_doorbell_camera_auto_quick_reply_time
        data:
          value: '30'
        action: number.set_value
      - target:
          entity_id: select.front_doorbell_camera_auto_quick_reply_message
        data:
          option: Hi, please leave the package at the door. We will get it later.
        action: select.select_option
    - conditions:
      - condition: trigger
        id:
        - Door Open
      - condition: state
        entity_id: input_boolean.front_doorbell_active
        state: 'on'
      sequence:
      - target:
          entity_id: input_boolean.front_doorbell_active
        data: {}
        action: input_boolean.toggle
      - target:
          entity_id: select.front_doorbell_camera_auto_quick_reply_message
        data:
          option: 'off'
        action: select.select_option
    - conditions:
      - condition: trigger
        id:
        - Dave Out
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: calendar.gem_holidays
        state: 'off'
      sequence:
      - target:
          entity_id: select.front_doorbell_camera_auto_quick_reply_message
        data:
          option: Hi, please leave the package at the door. We will get it later.
        action: select.select_option
    - conditions:
      - condition: trigger
        id:
        - Dave Home
      sequence:
      - target:
          entity_id: select.front_doorbell_camera_auto_quick_reply_message
        data:
          option: 'off'
        action: select.select_option
  mode: single
- id: '1722761587373'
  alias: Guest Bedroom Lights with presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.spare_room_motion
    from: 'off'
    to: 'on'
    id: Light on
  - platform: state
    entity_id:
    - group.spare_room_motion
    from: 'on'
    to: 'off'
    id: Light off
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: numeric_state
    entity_id: sensor.guest_bedroom_motion_illuminance_lux
    below: input_number.low_light_threshold
    id: Low Light
  - platform: numeric_state
    entity_id: sensor.guest_bedroom_motion_illuminance_lux
    id: Good Light
    above: input_number.upper_light_threshold_level
  - platform: state
    entity_id:
    - binary_sensor.guest_bed_right_motion_occupancy
    - binary_sensor.guest_bed_left_motion_occupancy
    from: 'off'
    to: 'on'
    id: Right on
  - platform: state
    entity_id:
    - binary_sensor.guest_bed_right_motion_occupancy
    - binary_sensor.guest_bed_left_motion_occupancy
    from: 'on'
    to: 'off'
    id: Right off
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - switch.spare_room_light_switch
    from:
    to:
    id: Ironing
  condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Light on
      - condition: state
        entity_id: binary_sensor.lights_out
        state: 'off'
      - condition: state
        entity_id: input_boolean.guest_bedroom_bedside_lamps_active
        state: 'on'
      - condition: or
        conditions:
        - condition: sun
          before: sunrise
          after: sunset
        - condition: numeric_state
          entity_id: sensor.guest_bedroom_motion_illuminance_lux
          below: input_number.low_light_threshold
      sequence:
      - data: {}
        target:
          entity_id:
          - light.spare_room_lights
        action: light.turn_on
    - conditions:
      - condition: trigger
        id: Light off
      - condition: state
        entity_id: input_boolean.guest_bedroom_allow_lights_off
        state: 'on'
      sequence:
      - data: {}
        target:
          entity_id:
          - light.spare_room_lights
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Low Light
      - condition: state
        state: 'on'
        entity_id: binary_sensor.guest_bedroom_occupied
      - condition: state
        entity_id: binary_sensor.lights_out
        state: 'off'
      sequence:
      - data: {}
        target:
          entity_id: light.spare_room_lights
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Good Light
      sequence:
      - data: {}
        target:
          entity_id:
          - light.guest_bedroom_bedside_lamp_left
          - light.guest_bedroom_bedside_lamp_right
          - light.spare_room_lights
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Right on
      - condition: template
        value_template: '{{ ''Right'' in trigger.to_state.attributes.friendly_name
          }}'
      - condition: state
        entity_id: input_boolean.guest_bedroom_bedside_lamps_active
        state: 'on'
      - condition: state
        entity_id: binary_sensor.lights_out
        state: 'off'
      - condition: or
        conditions:
        - condition: sun
          before: sunrise
          after: sunset
        - condition: numeric_state
          entity_id: sensor.guest_bedroom_motion_illuminance_lux
          below: input_number.low_light_threshold
      sequence:
      - data: {}
        target:
          entity_id:
          - light.guest_bedroom_bedside_lamp_right
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Right off
      - condition: template
        value_template: '{{ ''Right'' in trigger.to_state.attributes.friendly_name
          }}'
      - condition: state
        entity_id: input_boolean.guest_bedroom_allow_lights_off
        state: 'on'
      sequence:
      - target:
          entity_id:
          - light.guest_bedroom_bedside_lamp_right
        data: {}
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Right on
      - condition: template
        value_template: '{{ ''Left'' in trigger.to_state.attributes.friendly_name
          }}'
      - condition: state
        entity_id: input_boolean.guest_bedroom_bedside_lamps_active
        state: 'on'
      - condition: state
        entity_id: binary_sensor.lights_out
        state: 'off'
      - condition: or
        conditions:
        - condition: sun
          before: sunrise
          after: sunset
        - condition: numeric_state
          entity_id: sensor.guest_bedroom_motion_illuminance_lux
          below: input_number.low_light_threshold
      sequence:
      - data: {}
        target:
          entity_id:
          - light.guest_bedroom_bedside_lamp_left
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Right off
      - condition: template
        value_template: '{{ ''Left'' in trigger.to_state.attributes.friendly_name
          }}'
      - condition: state
        entity_id: input_boolean.guest_bedroom_allow_lights_off
        state: 'on'
      sequence:
      - target:
          entity_id:
          - light.guest_bedroom_bedside_lamp_left
        data: {}
        enabled: true
        action: light.turn_off
    - conditions:
      - condition: trigger
        id: Ironing
      sequence:
      - data: {}
        action: script.ironing_lights
  mode: restart
  initial_state: true
- id: '1722761890652'
  alias: Smart Button Upstairs 1 Automations
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.smart_button_upstairs_1_action
    id: Casper & Sky toggle
    to: single
  - platform: state
    entity_id: sensor.smart_button_upstairs_1_action
    to: release
    id: Night Lights
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Casper & Sky toggle
      sequence:
      - service: script.spare_room_tv_toggle
        data: {}
    - conditions:
      - condition: trigger
        id: Night Lights
      sequence:
      - service: script.spare_room_night_light
        data: {}
  mode: single
  initial_state: true
- id: '1722850250144'
  alias: Main Bedroom Lights with Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.main_bedroom_fp2_presence_sensor_2
    - binary_sensor.main_bedroom_fp2_presence_sensor_3
    id: Lights On
    from: 'off'
    to: 'on'
  - platform: state
    entity_id:
    - binary_sensor.main_bedroom_fp2_presence_sensor_2
    - binary_sensor.main_bedroom_fp2_presence_sensor_3
    id: Lights Off
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 15
  - platform: numeric_state
    entity_id: sensor.main_bedroom_fp2_light_sensor_light_level
    below: input_number.low_light_threshold
    id: Low Light
  - platform: numeric_state
    entity_id: sensor.main_bedroom_fp2_light_sensor_light_level
    id: Good Light
    above: input_number.upper_light_threshold_level
  - platform: state
    entity_id:
    - binary_sensor.overnight
    from: 'off'
    to: 'on'
    id: disable
  condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Lights On
      - condition: template
        value_template: '{{"Daves" in trigger.to_state.attributes.friendly_name }}'
        alias: Filter Dave's side of bed
      - condition: numeric_state
        entity_id: sensor.main_bedroom_fp2_light_sensor_light_level
        below: input_number.low_light_threshold
      - condition: state
        entity_id: input_boolean.main_bedroom_bedside_lamps_active
        state: 'on'
      - condition: state
        entity_id: binary_sensor.lights_out
        state: 'off'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id:
          - light.sonoff_1001f6d950
    - conditions:
      - condition: trigger
        id:
        - Lights On
      - condition: template
        value_template: '{{"Gem" in trigger.to_state.attributes.friendly_name }}'
        alias: Filter Gem's side of bed
      - condition: numeric_state
        entity_id: sensor.main_bedroom_fp2_light_sensor_light_level
        below: input_number.low_light_threshold
      - condition: state
        entity_id: input_boolean.main_bedroom_bedside_lamps_active
        state: 'on'
      - condition: state
        entity_id: binary_sensor.lights_out
        state: 'off'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.sonoff_1001f6d982
    - conditions:
      - condition: trigger
        id:
        - Lights Off
      - condition: template
        value_template: '{{"Daves" in trigger.to_state.attributes.friendly_name }}'
        alias: Filter Dave's side of bed
      - condition: state
        state: 'on'
        entity_id: light.sonoff_1001f6d950
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.sonoff_1001f6d950
    - conditions:
      - condition: trigger
        id:
        - Lights Off
      - condition: template
        value_template: '{{"Gem" in trigger.to_state.attributes.friendly_name }}'
        alias: Filter Gem's side of bed
      - condition: state
        state: 'on'
        entity_id: light.sonoff_1001f6d982
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.sonoff_1001f6d982
    - conditions:
      - condition: trigger
        id:
        - Low Light
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.main_bedroom_fp2_presence_sensor_2
          state: 'on'
        - condition: state
          entity_id: binary_sensor.main_bedroom_fp2_presence_sensor_3
          state: 'on'
      - condition: state
        entity_id: input_boolean.main_bedroom_bedside_lamps_active
        state: 'on'
      - condition: state
        entity_id: binary_sensor.lights_out
        state: 'off'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id:
          - light.sonoff_1001f6d950
          - light.sonoff_1001f6d982
    - conditions:
      - condition: trigger
        id:
        - Good Light
      - condition: or
        conditions:
        - condition: state
          entity_id: light.sonoff_1001f6d950
          state: 'on'
        - condition: state
          entity_id: light.sonoff_1001f6d982
          state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.sonoff_1001f6d982
          - light.sonoff_1001f6d950
    - conditions:
      - condition: trigger
        id:
        - disable
      sequence:
      - delay:
          hours: 0
          minutes: 33
          seconds: 0
          milliseconds: 0
      - service: input_boolean.turn_off
        entity_id: input_boolean.main_bedroom_bedside_lamps_active
  mode: restart
  initial_state: true
- id: '1722927388728'
  alias: Clock Chime
  description: ''
  trigger:
  - platform: time_pattern
    minutes: 0
    id: '0'
  - platform: time_pattern
    minutes: 15
    id: '15'
  - platform: time_pattern
    minutes: 30
    id: '30'
  - platform: time_pattern
    minutes: 45
    id: '45'
  condition:
  - condition: time
    after: input_datetime.clock_chime_on_time
    before: input_datetime.clock_chime_off_time
  - condition: state
    entity_id: input_boolean.audible_notifications
    state: 'on'
  - condition: state
    entity_id: input_boolean.clock_chime
    state: 'on'
  - condition: or
    conditions:
    - condition: state
      state: 'on'
      entity_id: binary_sensor.family_home
    - condition: state
      entity_id: input_boolean.guest_mode
      state: 'on'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: '15'
        - condition: trigger
          id: '45'
      sequence:
      - condition: or
        conditions:
        - condition: state
          entity_id: input_boolean.clock_chime_quarter_toll
          state: 'off'
        - condition: state
          entity_id: input_select.clock_chime_sound
          state: Cuckoo Clock
      - stop: Quarter Toll Disabled
    - conditions:
      - condition: trigger
        id: '30'
      sequence:
      - condition: state
        entity_id: input_boolean.clock_chime_half_toll
        state: 'off'
      - stop: Half Toll Disabled
    default: []
  - wait_template: '{{ not is_state("media_player.dave_s_2nd_echo_pop", "playing")
      }}'
    continue_on_timeout: false
    timeout: 00:02:00
  - service: script.alexa_voice
    data:
      where: living room
      message: "{% if states(\"input_select.clock_chime_sound\") == \"Cuckoo Clock\"
        %}\n  {% if trigger.id == \"30\" %}\n    <audio src='https://heder-homeassistant.s3.amazonaws.com/cuckoo-clock/cuckoo-clock-01.mp3'/>\n
        \ {% else %}\n    <audio src='https://heder-homeassistant.s3.amazonaws.com/cuckoo-clock/cuckoo-clock-{{now().strftime(\"%I\")}}.mp3'/>\n
        \ {% endif %}\n{% elif states(\"input_select.clock_chime_sound\") == \"Grandfather
        Clock\" %}\n  {% if trigger.id == \"15\" %}\n    <audio src='https://heder-homeassistant.s3.amazonaws.com/gf-clock/toll-1quarter.mp3'/>\n
        \ {% elif trigger.id == \"30\" %}\n    <audio src='https://heder-homeassistant.s3.amazonaws.com/gf-clock/toll-2quarter.mp3'/>\n
        \ {% elif trigger.id == \"45\" %}\n    <audio src='https://heder-homeassistant.s3.amazonaws.com/gf-clock/toll-3quarter.mp3'/>\n
        \ {% else %}\n    <audio src='https://heder-homeassistant.s3.amazonaws.com/gf-clock/{{now().strftime(\"%I\")}}-hour.mp3'/>\n
        \ {% endif %}\n{% endif %}\n"
      msg_summary: clock chime
  mode: restart
- id: '1722962120735'
  alias: Fridge & Freezer Door Watch
  description: Warn me when the fridge or freezer door has been left open
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fridge_door_sensor_contact
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: Fridge Door Open
  - platform: state
    entity_id:
    - binary_sensor.freezer_door_door_sensor_contact
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: Freezer Door Open
  - platform: state
    entity_id:
    - binary_sensor.fridge_too_warm
    to: 'on'
    id: Fridge Problem
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.freezer_too_warm
    to: 'on'
    id: Freezer Problem
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Fridge Door Open
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      sequence:
      - service: script.status_annc
        data:
          where: '{{ states(''sensor.room_audio'') }}'
          call_fridge_warning: 1
      - delay:
          hours: 0
          minutes: 2
          seconds: 0
          milliseconds: 0
      - if:
        - condition: state
          entity_id: binary_sensor.fridge_door_sensor_contact
          state: 'on'
        then:
        - service: script.status_annc
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            call_fridge_warning_again: 1
        else:
        - service: script.status_annc
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            call_fridge_closed: 1
    - conditions:
      - condition: trigger
        id: Freezer Door Open
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      sequence:
      - service: script.status_annc
        data:
          where: '{{ states(''sensor.room_audio'') }}'
          call_freezer_warning: 1
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - if:
        - condition: state
          entity_id: binary_sensor.freezer_door_door_sensor_contact
          state: 'on'
        then:
        - service: script.status_annc
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            call_freezer_warning_again: 1
        else:
        - service: script.status_annc
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            call_freezer_closed: 1
    - conditions:
      - condition: trigger
        id:
        - Fridge Problem
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      - condition: state
        entity_id: binary_sensor.fridge_door_sensor_contact
        state: 'off'
      sequence:
      - service: script.status_annc
        data:
          where: '{{ states(''sensor.room_audio'') }}'
          call_fridge_too_warm: 1
      - delay:
          hours: 0
          minutes: 10
          seconds: 0
          milliseconds: 0
      - if:
        - condition: state
          entity_id: binary_sensor.fridge_too_warm
          state: 'on'
        then:
        - service: script.status_annc
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            call_fridge_too_warm_again: 1
    - conditions:
      - condition: trigger
        id:
        - Freezer Problem
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      - condition: state
        entity_id: binary_sensor.freezer_door_door_sensor_contact
        state: 'off'
      sequence:
      - service: script.status_annc
        data:
          where: '{{ states(''sensor.room_audio'') }}'
          call_freezer_too_warm: 1
      - delay:
          hours: 0
          minutes: 10
          seconds: 0
          milliseconds: 0
      - if:
        - condition: state
          entity_id: binary_sensor.fridge_too_warm
          state: 'on'
        then:
        - service: script.status_annc
          data:
            where: '{{ states(''sensor.room_audio'') }}'
            call_freezer_too_warm_again: 1
  mode: parallel
  initial_state: true
  max: 4
- id: '1723014838907'
  alias: Kitchen Lights with Presence
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence_sensor_1
    from: 'off'
    to: 'on'
    id: Lights On
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence_sensor_1
    from: 'on'
    to: 'off'
    id: Lights Off
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - binary_sensor.presence_sensor_fp2_4b3c_presence_sensor_3
    from: 'off'
    to: 'on'
    id: BDZ On
  - platform: state
    entity_id:
    - binary_sensor.presence_sensor_fp2_4b3c_presence_sensor_3
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: BDZ Off
  - platform: numeric_state
    entity_id: sensor.kitchen_presence_sensor_light_sensor_light_level
    below: input_number.low_light_threshold
    id: Low Light
    for:
      hours: 0
      minutes: 0
      seconds: 20
  - platform: numeric_state
    entity_id: sensor.kitchen_presence_sensor_light_sensor_light_level
    above: input_number.upper_light_threshold_level
    id: Good Light
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: state
    entity_id:
    - binary_sensor.lights_out
    to: 'off'
    id: Allow Lights on
  - platform: state
    entity_id: binary_sensor.day
    from: 'on'
    to: 'off'
    id: sunset
  - platform: state
    entity_id:
    - sensor.dave_location
    - sensor.gem_location
    from: Kitchen
    id: Not in Kitchen
  - platform: state
    entity_id:
    - switch.adaptive_lighting_sleep_mode_kitchen_lights
    from: 'off'
    to: 'on'
    id: Dim lights
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - sunset
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.under_shelf_lights_local
    - conditions:
      - condition: trigger
        id:
        - Lights On
      - condition: numeric_state
        entity_id: sensor.kitchen_presence_sensor_light_sensor_light_level
        below: input_number.low_light_threshold
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.kitchen_lights_2
    - conditions:
      - condition: trigger
        id:
        - Lights Off
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.kitchen_lights_2
    - conditions:
      - condition: trigger
        id:
        - BDZ On
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: sensor.kitchen_presence_sensor_light_sensor_light_level
          below: input_number.low_light_threshold
        - condition: and
          conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: sensor.season
              state: autumn
            - condition: state
              entity_id: sensor.season
              state: winter
          - condition: time
            after: '17:35:00'
            before: '21:00:00'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.back_door_zone_light
    - conditions:
      - condition: trigger
        id:
        - BDZ Off
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.back_door_zone_light
    - conditions:
      - condition: trigger
        id:
        - Low Light
      - condition: state
        entity_id: light.kitchen_lights_2
        state: 'off'
      - condition: state
        entity_id: binary_sensor.kitchen_presence_sensor_presence_sensor_1
        state: 'on'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.kitchen_lights_2
    - conditions:
      - condition: trigger
        id:
        - Good Light
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.kitchen_lights_2
    - conditions:
      - condition: trigger
        id:
        - Allow Lights on
      - condition: state
        entity_id: input_boolean.room_occupied_kitchen
        state: 'on'
      - condition: numeric_state
        entity_id: sensor.kitchen_presence_sensor_light_sensor_light_level
        below: input_number.low_light_threshold
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.kitchen_lights_2
    - conditions:
      - condition: trigger
        id:
        - Dim lights
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.kitchen_lights_2
        data: {}
      - delay:
          hours: 0
          minutes: 0
          seconds: 10
          milliseconds: 0
      - condition: state
        entity_id: binary_sensor.kitchen_occupied
        state: 'off'
      - service: light.turn_off
        target:
          entity_id: light.kitchen_lights_2
        data: {}
  mode: parallel
  trace:
    stored_traces: 20
- id: '1723015519143'
  alias: Utility Lighting with Presence
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.utility_room_motion
    to: Detected
    id: Utility On
  - platform: state
    entity_id: sensor.utility_room_motion
    to: Clear
    id: Utility Off
    for:
      hours: 0
      minutes: 0
      seconds: 30
  - platform: numeric_state
    entity_id:
    - sensor.utility_room_presence_2_illuminance_lux
    below: input_number.low_light_threshold
    id: Low Light
  - platform: numeric_state
    entity_id:
    - sensor.utility_room_presence_2_illuminance_lux
    id: Good Light
    above: input_number.upper_light_threshold_level
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Utility On
      - condition: or
        conditions:
        - condition: sun
          after: sunset
          before: sunrise
        - condition: numeric_state
          entity_id: sensor.utility_room_presence_2_illuminance_lux
          below: input_number.low_light_threshold
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.utility_room_light
    - conditions:
      - condition: trigger
        id:
        - Utility Off
      - condition: state
        entity_id: light.utility_room_light
        state: 'on'
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.utility_room_light
    - conditions:
      - condition: trigger
        id:
        - Low Light
      - condition: state
        entity_id: binary_sensor.utility_room_occupied
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.utility_room_light
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Good Light
      sequence:
      - service: light.turn_off
        target:
          entity_id: light.utility_room_light
        data: {}
  mode: single
- id: '1723189580902'
  alias: Spare Room TV Toggle On and Off
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.sky_q_guest_bedroom_mini
    id: Casper & Sky toggle on
    from: 'off'
    to: playing
  - platform: state
    entity_id:
    - media_player.sky_q_guest_bedroom_mini
    id: Casper & Sky toggle off
    from:
    - playing
    - paused
    to: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Casper & Sky toggle on
      sequence:
      - service: script.spare_room_tv_toggle
        data: {}
    - conditions:
      - condition: trigger
        id: Casper & Sky toggle off
      sequence:
      - service: script.spare_room_tv_toggle
        data: {}
  mode: single
  initial_state: true
- id: '1723739090197'
  alias: Audible Notifications
  description: ''
  trigger:
  - platform: time
    at: input_datetime.audible_notification_on
    id: 'on'
  - platform: time
    at: input_datetime.audible_notification_off
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 'on'
      - condition: state
        entity_id: binary_sensor.family_home
        state: 'on'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.audible_notifications
    - conditions:
      - condition: trigger
        id: 'off'
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.audible_notifications
    default: []
  mode: single
- id: '1723792173268'
  alias: Boys Bedtime Announcements
  description: ''
  trigger:
  - platform: time
    at: input_datetime.school_night_jamie
    id: School Bedtime Jamie
  - platform: time
    at: input_datetime.school_night_sean
    id: School Bedtime Sean
  - platform: time
    at: input_datetime.non_school_night
    id: Non School Bedtime
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - School Bedtime Sean
      - condition: state
        entity_id: sensor.school_tomorrow
        state: 'True'
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      - condition: state
        entity_id: input_boolean.seans_bedtime_announcement_played
        state: 'off'
      sequence:
      - service: script.status_annc
        data:
          where: living_room
          call_jetsons_chime: 1
          call_time_is: 1
          call_sean_time_for_bed: 1
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.seans_bedtime_announcement_played
    - conditions:
      - condition: trigger
        id:
        - School Bedtime Jamie
      - condition: state
        entity_id: sensor.school_tomorrow
        state: 'True'
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      - condition: state
        entity_id: input_boolean.jamies_bedtime_announcement_played
        state: 'off'
      sequence:
      - service: script.status_annc
        data:
          where: living_room
          call_jetsons_chime: 1
          call_time_is: 1
          call_jamie_time_for_bed: 1
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.jamies_bedtime_announcement_played
    - conditions:
      - condition: trigger
        id: Non School Bedtime
      - condition: state
        entity_id: sensor.school_tomorrow
        state: 'False'
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      - condition: and
        conditions:
        - condition: state
          entity_id: input_boolean.seans_bedtime_announcement_played
          state: 'off'
        - condition: state
          entity_id: input_boolean.jamies_bedtime_announcement_played
          state: 'off'
      sequence:
      - service: script.status_annc
        data:
          where: living_room
          call_jetsons_chime: 1
          call_time_is: 1
          call_boys_time_for_bed: 1
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id:
          - input_boolean.seans_bedtime_announcement_played
          - input_boolean.jamies_bedtime_announcement_played
  mode: single
  initial_state: true
- id: '1723812751523'
  alias: Play Seans Morning Briefing
  description: ''
  trigger:
  - platform: time
    at: input_datetime.seans_morning_briefing
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.schoolday
      state: 'on'
    - condition: state
      entity_id: binary_sensor.fridayschool
      state: 'on'
  - condition: state
    entity_id: input_boolean.audible_notifications
    state: 'on'
  - condition: state
    entity_id: input_boolean.seans_morning_briefing_played
    state: 'off'
  action:
  - service: script.seans_morning_briefing
    data: {}
  - service: script.jamies_morning_briefing
    data: {}
  mode: single
  initial_state: true
- id: '1723828046713'
  alias: Schools Out Pick Up Jamie
  description: ''
  trigger:
  - platform: time
    at: input_datetime.school_pick_up_time_friday
  condition:
  - condition: state
    entity_id: binary_sensor.fridayschool
    state: 'on'
  - condition: state
    entity_id: calendar.school_holidays
    state: 'off'
  - condition: state
    entity_id: input_boolean.audible_notifications
    state: 'on'
  action:
  - service: script.status_annc
    data:
      where: '{{ states(''sensor.room_audio'') }}'
      call_jetsons_chime: 1
      call_time_is: 1
      call_school_pick_up: 1
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.school_pick_up_announcement_played
  mode: single
  initial_state: true
- id: '1724174138849'
  alias: Office Echo
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.office_hours
    from: 'off'
    to: 'on'
    id: Office in use
  - platform: state
    entity_id:
    - binary_sensor.office_hours
    from: 'on'
    to: 'off'
    id: Office not in use
  - platform: state
    entity_id:
    - binary_sensor.gem_home
    from: 'on'
    to: 'off'
    id: Gem out of office
  - platform: state
    entity_id:
    - binary_sensor.gem_home
    from: 'off'
    to: 'on'
    id: Gem in office
  - platform: state
    entity_id:
    - binary_sensor.office_presence_sensor_occupancy
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: Welcome
  - platform: time
    at: 08:05:00
    id: Time
  condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  - condition: state
    entity_id: calendar.gem_holidays
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Office in use
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: calendar.gem_holidays
        state: 'off'
      - condition: state
        entity_id: binary_sensor.gem_home
        state: 'on'
      sequence:
      - data: {}
        target:
          entity_id: switch.office_echo_local
        action: switch.turn_off
    - conditions:
      - condition: trigger
        id: Office not in use
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: calendar.gem_holidays
        state: 'off'
      - condition: state
        entity_id: switch.office_echo_local
        state: 'off'
      sequence:
      - data: {}
        target:
          entity_id: switch.office_echo_local
        action: switch.turn_on
    - conditions:
      - condition: trigger
        id:
        - Gem out of office
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: switch.office_echo_local
        state: 'off'
      - condition: state
        entity_id: binary_sensor.office_hours
        state: 'on'
      sequence:
      - data: {}
        target:
          entity_id: switch.office_echo_local
        action: switch.turn_on
      - data: {}
        target:
          entity_id: input_boolean.gem_gone_out_to_office
        action: input_boolean.turn_on
    - conditions:
      - condition: trigger
        id:
        - Gem in office
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: switch.office_echo_local
        state: 'on'
      sequence:
      - data: {}
        target:
          entity_id: input_boolean.gem_gone_out_to_office
        action: input_boolean.turn_off
      - if:
        - condition: state
          entity_id: binary_sensor.office_hours
          state: 'on'
        then:
        - data: {}
          target:
            entity_id: switch.office_echo_local
          action: switch.turn_off
    - conditions:
      - condition: trigger
        id:
        - Welcome
      - condition: time
        after: 07:50:00
        before: 08:13:00
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: input_boolean.office_welcome_played
        state: 'off'
      sequence:
      - data:
          where: office
        action: script.office_welcome_message
      - target:
          entity_id: input_boolean.office_welcome_played
        data: {}
        action: input_boolean.toggle
    - conditions:
      - condition: trigger
        id:
        - Time
      - condition: state
        entity_id: binary_sensor.workday_sensor
        state: 'on'
      - condition: state
        entity_id: input_boolean.office_welcome_played
        state: 'off'
      - condition: state
        entity_id: binary_sensor.office_occupied
        state: 'on'
      sequence:
      - data:
          where: office
        action: script.office_welcome_message
      - target:
          entity_id: input_boolean.office_welcome_played
        data: {}
        action: input_boolean.toggle
  mode: restart
  initial_state: true
- id: '1724234781744'
  alias: Kitchen Lights Needed
  description: Overrides kitchen lights with presence
  trigger:
  - platform: state
    entity_id:
    - switch.kitchen_light_switch_right
    id: Light needed
    from:
  condition:
  - condition: state
    entity_id: binary_sensor.kitchen_occupied
    state: 'on'
  action:
  - target:
      entity_id: automation.kitchen_lights_with_presence_2
    data:
      stop_actions: true
    action: automation.turn_off
  - target:
      entity_id: light.kitchen_lights_2
    data:
      kelvin: 6500
      brightness_pct: 100
    action: light.turn_on
  - wait_for_trigger:
    - platform: state
      entity_id:
      - binary_sensor.kitchen_occupied
      from: 'on'
      to: 'off'
      for:
        hours: 0
        minutes: 0
        seconds: 0
    timeout:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: false
  - target:
      entity_id: automation.kitchen_lights_with_presence_2
    data: {}
    action: automation.turn_on
  - target:
      entity_id: light.kitchen_lights_2
    data: {}
    action: light.turn_off
  mode: restart
- id: '1724439685310'
  alias: Back Door Zone Light Needed
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.kitchen_light_switch_left
    from:
    to:
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.back_door_zone_light
        state: 'off'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.back_door_zone_light
        data: {}
    default:
    - service: light.turn_off
      target:
        entity_id: light.back_door_zone_light
      data: {}
  mode: single
- id: '1724439929676'
  alias: Hallway Lights Needed
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.hallway_light_switch_1
    - switch.hallway_light_switch_2_right
    from:
    to:
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.hallway_lights
        state: 'off'
      sequence:
      - service: light.turn_on
        data: {}
        target:
          entity_id: light.hallway_lights
    default:
    - service: light.turn_off
      data: {}
      target:
        entity_id: light.hallway_lights
  mode: single
- id: '1724440175555'
  alias: Back Door Light Needed
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.back_door_light_switch
    from:
    to:
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.back_door_light
        state: 'off'
      sequence:
      - data: {}
        target:
          entity_id: light.back_door_light
        action: light.turn_on
    default:
    - data: {}
      target:
        entity_id: light.back_door_light
      action: light.turn_off
    - action: script.back_door_light_dim_when_door_closed
      metadata: {}
      data: {}
  mode: single
- id: '1724922616567'
  alias: Notification Volume Normal
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.quiet_time_boys
    to: 'off'
  condition: []
  action:
  - service: media_player.volume_set
    data:
      entity_id:
      - media_player.kitchen_echo_show
      - media_player.dave_s_2nd_echo_pop
      - media_player.dave_s_echo_pop
      - media_player.main_bedroom_dot
      - media_player.guest_bedroom_echo_dot
      - media_player.living_room_dot
      - media_player.seans_room_dot
      volume_level: '{{ states(''input_number.alexa_volume_level_announcements'')
        | float(0) }}'
  mode: single
  initial_state: true
- id: '1725176117496'
  alias: En Suite Lights with presence
  description: Lights on and off with presence and timer
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.en_suite_presence_occupancy
    from: 'off'
    to: 'on'
    id: Presence
  - platform: state
    entity_id:
    - binary_sensor.en_suite_presence_occupancy
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: Absence
  - alias: Light off with Timer
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.en_suite_light
    id: Timer Done
    enabled: true
  - platform: state
    entity_id:
    - switch.en_suite_switch_left
    id: Switch toggle
    from:
    to:
  condition:
  - condition: state
    entity_id: binary_sensor.lights_out
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Presence
      - condition: or
        conditions:
        - condition: numeric_state
          entity_id: sensor.en_suite_presence_illuminance_lux
          below: input_number.daytime_light_needed
        - condition: sun
          before: sunrise
          after: sunset
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.en_suite_switch_left
      - service: timer.start
        data: {}
        target:
          entity_id: timer.en_suite_light
    - conditions:
      - condition: trigger
        id:
        - Absence
      - condition: state
        state: idle
        entity_id: timer.en_suite_light
      - condition: state
        entity_id: input_boolean.allow_en_suite_lights_off
        state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.en_suite_switch_left
    - conditions:
      - condition: trigger
        id:
        - Switch toggle
      sequence:
      - service: switch.toggle
        target:
          entity_id: switch.en_suite_switch_left
        data: {}
      - service: input_boolean.toggle
        target:
          entity_id: input_boolean.allow_en_suite_lights_off
        data: {}
    - conditions:
      - condition: trigger
        id:
        - Timer Done
      - condition: state
        state: 'on'
        entity_id: switch.en_suite_switch_left
      - condition: state
        entity_id: binary_sensor.en_suite_occupied
        state: 'off'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.en_suite_switch_left
  mode: restart
- id: '1725548519733'
  alias: Living Room Lights with presence
  description: ''
  trigger:
  - platform: state
    entity_id: light.living_room_lights
    from: 'off'
    to: 'on'
    id: Ceiling Light On
  - platform: state
    entity_id: light.living_room_lights
    from: 'on'
    to: 'off'
    id: Ceiling Light Off
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_1
    from: 'off'
    to: 'on'
    id: Light On With Presence
  - platform: state
    entity_id:
    - binary_sensor.living_room_fp2_presence_sensor_1
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: Light Off With No Presence
  - platform: numeric_state
    entity_id: sensor.living_room_fp2_light_sensor_light_level
    below: input_number.low_light_threshold
    for:
      seconds: 20
    id: Low Light
  - platform: numeric_state
    entity_id: sensor.living_room_fp2_light_sensor_light_level
    above: input_number.upper_light_threshold_level
    for:
      seconds: 20
    id: Good Light
  condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Ceiling Light On
      sequence:
      - data: {}
        target:
          entity_id:
          - light.corner_lamp_2
          - light.dreamview_g1_pro_2
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Ceiling Light Off
      - condition: numeric_state
        entity_id: sensor.living_room_fp2_light_sensor_light_level
        below: input_number.low_light_threshold
      sequence:
      - data: {}
        target:
          entity_id:
          - light.corner_lamp_2
        action: light.turn_on
      - if:
        - condition: state
          entity_id: switch.living_room_tv
          state: 'on'
        then:
        - data: {}
          target:
            entity_id: light.dreamview_g1_pro_2
          action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Light On With Presence
        alias: Light on with presence
      - condition: numeric_state
        entity_id: sensor.living_room_fp2_light_sensor_light_level
        below: input_number.low_light_threshold
      - condition: state
        entity_id: light.living_room_lights
        state: 'off'
      sequence:
      - data: {}
        target:
          entity_id:
          - light.corner_lamp_2
        action: light.turn_on
      - condition: state
        entity_id: light.hallway_lights
        state: 'off'
      - data: {}
        target:
          entity_id:
          - light.standard_lamp
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Light Off With No Presence
        alias: Light off with no presence
      sequence:
      - data: {}
        target:
          entity_id:
          - light.corner_lamp_2
        action: light.turn_off
      - condition: state
        entity_id: light.standard_lamp
        state: 'on'
      - data: {}
        target:
          entity_id:
          - light.standard_lamp
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Low Light
        alias: Light on when Low Light and Presence
      - condition: state
        entity_id: binary_sensor.living_room_fp2_presence_sensor_1
        state: 'on'
      - condition: state
        entity_id: light.living_room_lights
        state: 'off'
      sequence:
      - data: {}
        target:
          entity_id:
          - light.corner_lamp_2
        action: light.turn_on
      - condition: state
        entity_id: light.hallway_lights
        state: 'off'
      - data: {}
        target:
          entity_id:
          - light.standard_lamp
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Good Light
        alias: Light off with Good Light
      sequence:
      - data: {}
        target:
          entity_id:
          - light.corner_lamp_2
        action: light.turn_off
      - condition: state
        entity_id: light.standard_lamp
        state: 'on'
      - data: {}
        target:
          entity_id:
          - light.standard_lamp
        action: light.turn_off
  mode: restart
  initial_state: true
- id: '1725648134079'
  alias: Home Battery Overnight Charge type test
  description: ''
  trigger:
  - platform: time
    at: '21:00:00'
    id: Set
  - platform: time
    at: 07:00:00
    id: Reset
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Set
      sequence:
      - action: script.text_notify_dave
        data:
          message: '{{states(''sensor.solar_battery_charge_overnight_logic'')}}'
    - conditions:
      - condition: trigger
        id:
        - Reset
      sequence:
      - action: input_number.set_value
        target:
          entity_id: input_number.home_battery_charge_length
        data:
          value: 2.5
  mode: single
- id: '1725982003472'
  alias: Play Morning Briefing
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.kitchen_presence_sensor_presence_sensor_1
    from: 'off'
    to: 'on'
    id: presence
  - platform: time
    at: input_datetime.morning_report
    id: time
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: presence
      - condition: state
        entity_id: input_boolean.morning_briefing_played
        state: 'off'
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      - condition: time
        after: input_datetime.morning_report_earliest_time
        before: input_datetime.morning_report_latest_time
      sequence:
      - action: script.kitchen_morning_message
        data: {}
    - conditions:
      - condition: trigger
        id: time
      - condition: or
        conditions:
        - condition: state
          entity_id: calendar.school_holidays
          state: 'on'
        - condition: state
          entity_id: binary_sensor.workday_sensor
          state: 'off'
      - condition: state
        entity_id: input_boolean.morning_briefing_played
        state: 'off'
      sequence:
      - action: script.kitchen_morning_message
        data: {}
  mode: single
  initial_state: true
- id: '1726137208476'
  alias: Welcome Home
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.dave_home
    - binary_sensor.gem_home
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.welcome_home
        state: 'on'
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      - condition: state
        entity_id: input_boolean.morning_briefing_playing
        state: 'off'
      sequence:
      - wait_for_trigger:
        - platform: state
          entity_id:
          - binary_sensor.front_door_sense_contact
          - binary_sensor.back_door_sensor_contact
          to: 'off'
          from: 'on'
          for:
            hours: 0
            minutes: 0
            seconds: 0
        timeout:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - delay:
          hours: 0
          minutes: 0
          seconds: 20
          milliseconds: 0
      - data: {}
        action: script.welcome_briefing
    default:
    - data:
        object_id: arriving
        add_entities: '{{ trigger.to_state.entity_id }}'
      action: group.set
    - wait_for_trigger:
      - platform: state
        entity_id:
        - binary_sensor.front_door_sense_contact
        - binary_sensor.back_door_sensor_contact
        from: 'on'
        to: 'off'
      timeout:
        hours: 0
        minutes: 1
        seconds: 0
        milliseconds: 0
    - delay:
        hours: 0
        minutes: 0
        seconds: 20
        milliseconds: 0
    - data:
        where: kitchen
        message: "{{ [\n  'Pardon me. ',\n  '<prosody pitch=\"high\">Excuse me.</prosody>
          ',\n  '<prosody pitch=\"high\">I do not mean to interrupt. </prosody>but.',\n
          \ '<prosody pitch=\"high\">I hate to interrupt. </prosody>but.',\n  'I beg
          your pardon. ',\n  '<prosody pitch=\"high\">I do not mean to intrude, </prosody>but.
          ',\n  'I am sorry to interrupt, but. ',\n  'Just a quick heads up. ',\n
          \ '<prosody pitch=\"high\">Information. </prosody>',\n  'Pardon me for intruding
          on your relaxation once more.',\n  'Excuse me for once again breaking the
          silence.'\n  ] | random }}\n{% set person = expand('group.arriving')|map(attribute='name')|join('
          and ') %} {% set peoplecount = expand('group.arriving') | count %} {% if
          peoplecount == 1 %}\n  {% set is_are = ' is ' %}\n  {% set has_have = '
          has ' %}\n{% else %}\n  {% set is_are = ' are ' %}\n  {% set has_have =
          ' have ' %}\n{% endif %} {%- macro greeting_sentence(person, is_are, has_have)
          -%}\n  {{ [\n  person ~ has_have + \" arrived.\",\n  \"My sensors are picking
          up the presence of additional humans. \" ~ person ~ has_have + \" been identified
          as home.\",\n  \"Guess who is in the house?\" ~ person ~ is_are,\n  \"I
          am sensing a disturbance in the force. \"  ~ person +\" must be back!\",\n
          \ person ~ is_are + \"now in the house.\",\n  person  ~ is_are + \" now
          here.  Welcome Home.\",\n  person  ~ is_are + \" now here.\",\n  \"Just
          a quick announcement. \" ~ person ~ has_have + \"  arrived!\",\n  person
          ~ has_have + \" finally made it home.\"\n  ] | random }}\n{%- endmacro -%}
          {{greeting_sentence(person, is_are, has_have)}}\n"
      action: script.speech_engine
    - delay: 00:02:00
    - data:
        object_id: arriving
        entities: []
      action: group.set
  mode: restart
- id: '1726138536829'
  alias: Time for Bed Parents
  description: ''
  trigger:
  - platform: time
    at: '22:10:00'
  condition:
  - condition: state
    entity_id: input_boolean.audible_notifications
    state: 'on'
  action:
  - action: script.parents_bedtime_announcement
    data:
      where: living_room
  mode: single
- id: '1726253825482'
  alias: Count Front Door Motion While Out
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door_motion_detected
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.family_home
    state: 'off'
  action:
  - target:
      entity_id: counter.front_door_motion_detected
    action: counter.increment
  mode: single
- id: '1726319289620'
  alias: Main Bathroom Extractor Fan
  description: With blueprint
  use_blueprint:
    path: Blackshome/bathroom-humidity-exhaust-fan.yaml
    input:
      trigger: sensor.main_bathroom_humidity_change
      fan_switch:
        entity_id: switch.shellyplus1_441793a36e14_switch_0
      bathroom_humidity_sensor: sensor.main_bathroom_temperature_and_humidity_humidity
      rising_humidity: 5
      falling_humidity: -2
      time_out: 60
      include_max_humidity: maximum_humidity_enabled
      include_manual_fan_switch: enable_manual_fan_switch_auto_off
      month_winter_mode:
      - '12'
      - '1'
      - '2'
      - '3'
      - '4'
      winter_time_delay: 5
      winter_time_out: 60
      winter_include_max_humidity: maximum_humidity_enabled
      bypass_auto_off_delay: 60
      by_pass: binary_sensor.main_bathroom_window
      include_bypass: bypass_enabled
      time_delay: 5
      include_winter_mode: winter_mode_enabled
      winter_rising_humidity: 2
      winter_falling_humidity: -3
      max_humidity: 90
      winter_max_humidity: 90
      include_manual_trigger: disable_manual_trigger
      manual_trigger: []
      manual_trigger_winter_time_delay: 20
      manual_trigger_default_time_delay: 5
      manual_fan_switch:
      - switch.main_bathroom_switch_fan
- id: '1726405705772'
  alias: 'Schedule: Hourly'
  description: ''
  trigger:
  - platform: time_pattern
    seconds: '00'
    minutes: '00'
  condition: []
  action:
  - data:
      overwrite: true
      url: https://sdo.gsfc.nasa.gov/assets/img/latest/mpeg/latest_1024_0193.mp4
    action: downloader.download_file
  - data:
      overwrite: true
      url: https://sdo.gsfc.nasa.gov/assets/img/latest/mpeg/latest_1024_0335.mp4
    action: downloader.download_file
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - target:
      entity_id: counter.sun_335_downloads
    data: {}
    action: counter.increment
  mode: single
- id: '1726748258357'
  alias: Update Weather Records
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.gw2000a_max_daily_gust
    id: new_gust
  - platform: state
    entity_id: sensor.gw2000a_wind_speed
    id: new_wind_speed
  - platform: time
    at: '23:55:00'
    id: daily
  - platform: time
    at: 00:01:00
    id: save_stats
  - platform: time
    at: 00:03:00
    id: record_reset
  - platform: time
    at: 00:00:00
    id: record_reset
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: new_gust
      sequence:
      - if:
        - condition: template
          value_template: '{{ (states(''sensor.gw2000a_max_daily_gust'') | float)
            > (states(''sensor.ath_wind_gust'') | float)  }}'
        then:
        - data:
            topic: house/weather/athwind
            payload: '{{ states(''sensor.gw2000a_max_daily_gust'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH Gust
            message: 'Just recorded a new ALL TIME HIGH WIND GUST: {{ states(''sensor.gw2000a_max_daily_gust'')
              }} mph'
          action: script.text_notify_parents
        - delay: 00:00:30
    - conditions:
      - condition: trigger
        id: save_stats
      sequence:
      - if:
        - condition: numeric_state
          entity_id: sensor.chill_time_yesterday
          above: 0
        then:
        - data:
            topic: house/weather/chillhours
            payload: '{% set total = (states(''sensor.chill_time_yesterday'') | float
              | round(1)) + (states(''sensor.chill_hours'') | float) | round(1) %}
              {{ total|int }}

              '
            retain: true
          action: mqtt.publish
      - if:
        - condition: numeric_state
          entity_id: sensor.freeze_time_yesterday
          above: 0
        then:
        - data:
            topic: house/weather/freezehours
            payload: '{% set total = (states(''sensor.freeze_time_yesterday'') | float
              | round(1)) + (states(''sensor.freeze_hours'') | float) | round(1) %}
              {{ total }}

              '
            retain: true
          action: mqtt.publish
    - conditions:
      - condition: trigger
        id: record_reset
      sequence:
      - if:
        - condition: template
          value_template: '{{ now().day == 1 }}'
        then:
        - data:
            topic: house/weather/monthlymaxtemp
            payload: '{{ states(''sensor.gw2000a_outdoor_temperature'') }}'
            retain: true
          action: mqtt.publish
        - data:
            topic: house/weather/monthlylowtemp
            payload: '{{ states(''sensor.gw2000a_outdoor_temperature'') }}'
            retain: true
          action: mqtt.publish
      - if:
        - condition: time
          weekday:
          - sun
        then:
        - data:
            topic: house/weather/weekly_rainfall
            payload: '{{ states(''sensor.rainfall_last_week_2'') }}'
          action: mqtt.publish
      - if:
        - condition: template
          value_template: '{{ now().day == 28 }}'
        - condition: template
          value_template: '{{ now().month == 4 }}'
        then:
        - data:
            topic: house/weather/chillhours
            payload: '0'
            retain: true
          action: mqtt.publish
        - data:
            topic: house/weather/freezehours
            payload: '0'
            retain: true
          action: mqtt.publish
    - conditions:
      - condition: trigger
        id: new_wind_speed
      sequence:
      - data:
          topic: house/weather/new_wind_speed
          payload: "{% if has_value('sensor.gw2000a_wind_speed') %}\n  {{ states('sensor.gw2000a_wind_speed')
            | int }}\n{% else %}\n  0\n{% endif %}\n"
          retain: true
        action: mqtt.publish
    - conditions:
      - condition: trigger
        id: daily
      sequence:
      - data:
          topic: house/weather/yesterday_rainfall_mm
          payload: '{{ state_attr(''sensor.daily_rainfall_ut'',''last_period'') |
            float }}'
          retain: true
        action: mqtt.publish
      - alias: Record daily max temp
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_temp'') | float) > (states(''sensor.max_temp'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/maxtemp
            payload: '{{ states(''sensor.daily_max_temp'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record ATH temp
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_temp'') | float) > (states(''sensor.ath_max_temp'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/athmaxtemp
            payload: '{{ states(''sensor.daily_max_temp'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH High Temp
            message: 'Just recorded a new ALL TIME HIGH TEMP: {{ states(''sensor.daily_max_temp'')
              }} degrees.'
          action: script.text_notify_parents
        - delay: 00:00:30
      - alias: Record daily low temp
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_low_temp'') | float) < (states(''sensor.low_temp'')
            | float) }}'
        then:
        - data:
            topic: house/weather/lowtemp
            payload: '{{ states(''sensor.daily_low_temp'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record ATL temp
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_low_temp'') | float) < (states(''sensor.ath_low_temp'')
            | float) }}'
        then:
        - data:
            topic: house/weather/athlowtemp
            payload: '{{ states(''sensor.daily_low_temp'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH Low Temp
            message: 'Just recorded a new ALL TIME LOW TEMP: {{ states(''sensor.daily_low_temp'')
              }} degrees.'
          action: script.text_notify_parents
        - delay: 00:00:30
      - alias: Record ATH Daily Rain
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_rainfall_ut'') | float) > (states(''sensor.ath_24h_rain'')
            | float) }}'
        then:
        - data:
            topic: house/weather/athdailyrain
            payload: '{{ states(''sensor.daily_rainfall_ut'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New Wettest Day
            message: 'Just recorded a new ALL TIME HIGH DAILY RAINFALL: {{ states(''sensor.ath_24h_rain'')
              }} mm.'
          action: script.text_notify_parents
      - alias: Record daily max wind speed
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_wind_speed'') | float) >
            (states(''sensor.max_wind_gust'') | float) }}'
        then:
        - data:
            topic: house/weather/maxwind
            payload: '{{ states(''sensor.daily_max_wind_speed'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record number of days with rain and total rainfall
        if:
        - condition: numeric_state
          entity_id: sensor.daily_rainfall_ut
          above: 0
        then:
        - data:
            topic: house/weather/daysrain
            payload: '{% set total = states(''sensor.days_with_rain'') | int + 1 %}
              {{ total }}

              '
            retain: true
          action: mqtt.publish
        - data:
            topic: house/weather/totalrainfall
            payload: '{% set total = (states(''sensor.daily_rainfall_ut'') | float)
              + (states(''sensor.gw2000a_daily_rain_rate'') | float) | round(1) %}
              {{ total }}

              '
            retain: true
          action: mqtt.publish
        else:
        - if:
          - condition: state
            entity_id: sensor.daily_rainfall_ut
            state: '0'
          then:
          - data:
              topic: house/weather/daysnorain
              payload: '{% set total = states(''sensor.days_without_rain'') | int
                + 1 %} {{ total }}

                '
              retain: true
            action: mqtt.publish
      - if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_pressure'') | float) > (states(''sensor.max_pressure'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/maxpress
            payload: '{{ states(''sensor.daily_max_pressure'') }}'
            retain: true
          action: mqtt.publish
        alias: Record daily high pressure
      - if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_pressure'') | float) > (states(''sensor.ath_max_press'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/athmaxpress
            payload: '{{ states(''sensor.daily_max_pressure'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH High Pressure
            message: 'Just recorded a new ALL TIME HIGH BAROMETRIC PRESSURE: {{ states(''sensor.daily_max_pressure'')
              }} millibars.'
          action: script.text_notify_parents
        - delay: 00:00:30
        alias: Record ATH Pressure
      - if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_low_pressure'') | float) < (states(''sensor.min_pressure'')
            | float) }}'
        then:
        - data:
            topic: house/weather/minpress
            payload: '{{ states(''sensor.daily_low_pressure'') }}'
            retain: true
          action: mqtt.publish
        alias: Record daily low pressure
      - alias: Record ATL pressure
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_low_pressure'') | float) < (states(''sensor.ath_min_pressure'')
            | float) }}'
        then:
        - data:
            topic: house/weather/athminpress
            payload: '{{ states(''sensor.daily_low_pressure'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH Low Pressure
            message: 'Just recorded a new ALL TIME LOW BAROMETRIC PRESSURE: {{ states(''sensor.daily_low_pressure'')
              }} millibars.'
          action: script.text_notify_parents
        - delay: 00:00:30
      - alias: Record daily max humidity
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_humidity'') | float) > (states(''sensor.max_humidity'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/maxhum
            payload: '{{ states(''sensor.daily_max_humidity'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record ATH humidity
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_humidity'') | float) > (states(''sensor.ath_max_humidity'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/athmaxhum
            payload: '{{ states(''sensor.daily_max_humidity'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH High Humidity Level
            message: 'Just recorded a new ALL TIME HIGH HUMDITIY LEVEL: {{ states(''sensor.daily_max_humidity'')
              }}%'
          action: script.text_notify_parents
        - delay: 00:00:30
      - alias: Record daily low humidity
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_min_humidity'') | float) < (states(''sensor.min_humidity'')
            | float) }}'
        then:
        - data:
            topic: house/weather/minhum
            payload: '{{ states(''sensor.daily_min_humidity'') }}'
            retain: true
          action: mqtt.publish
      - if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_min_humidity'') | float) < (states(''sensor.ath_min_humidity'')
            | float) }}'
        then:
        - data:
            topic: house/weather/athminhum
            payload: '{{ states(''sensor.daily_min_humidity'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH Low Humidity Level
            message: 'Just recorded a new ALL TIME LOW HUMIDITY LEVEL: {{ states(''sensor.daily_min_humidity'')
              }}%'
          action: script.text_notify_parents
        - delay: 00:00:30
        alias: Record ATL humidity
      - alias: Record daily max solar radiation
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_solar_radiation'') | float)
            > (states(''sensor.max_solar_radiation'') | float)  }}'
        then:
        - data:
            topic: house/weather/maxsolrad
            payload: '{{ states(''sensor.daily_max_solar_radiation'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record ATH solar radiation
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_solar_radiation'') | float)
            > (states(''sensor.ath_max_solar_radiation'') | float)  }}'
        then:
        - data:
            topic: house/weather/athmaxsolrad
            payload: '{{ states(''sensor.daily_max_solar_radiation'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH High Solar Radiation Level
            message: 'Just recorded a new ALL TIME HIGH SOLAR RADIATION LEVEL: {{
              states(''sensor.daily_max_solar_radiation'') }}%'
          action: script.text_notify_parents
        - delay: 00:00:30
      - alias: Record daily max lux level
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_solar_lux'') | float) > (states(''sensor.max_solar_lux'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/maxsollux
            payload: '{{ states(''sensor.daily_max_solar_lux'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record ATH lux level
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_solar_lux'') | float) > (states(''sensor.ath_max_solar_lux'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/athmaxsollux
            payload: '{{ states(''sensor.daily_max_solar_lux'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH High Solar Lux Level
            message: 'Just recorded a new ALL TIME HIGH SOLAR LUX LEVEL: {{ states(''sensor.daily_max_solar_lux'')
              }}%'
          action: script.text_notify_parents
        - delay: 00:00:30
      - alias: Record daily max uv index
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_uv_index'') | float) > (states(''sensor.max_uv_index'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/maxuv
            payload: '{{ states(''sensor.daily_max_uv_index'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record ATH uv index
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_uv_index'') | float) > (states(''sensor.ath_max_uv_index'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/athmaxuv
            payload: '{{ states(''sensor.daily_max_uv_index'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH High UV Index
            message: 'Just recorded a new ALL TIME HIGH UV LEVEL: {{ states(''sensor.daily_max_uv_index'')
              }}%'
          action: script.text_notify_parents
        - delay: 00:00:30
      - alias: Record daily max soil temp
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_soil_temp'') | float) > (states(''sensor.max_soil_temperature'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/maxsoiltemp
            payload: '{{ states(''sensor.daily_max_soil_temp'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record ATH soil temp
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_soil_temp'') | float) > (states(''sensor.ath_max_soil_temperature'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/athmaxsoiltemp
            payload: '{{ states(''sensor.daily_max_soil_temp'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH Soil Temp
            message: 'Just recorded a new ALL TIME HIGH SOIL TEMPERATURE: {{ states(''sensor.daily_max_soil_temp'')
              }}%'
          action: script.text_notify_parents
        - delay: 00:00:30
      - alias: Record daily min soil temp
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_min_soil_temp'') | float) < (states(''sensor.min_soil_temperature'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/minsoiltemp
            payload: '{{ states(''sensor.daily_min_soil_temp'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record ATL soil temp
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_min_soil_temp'') | float) < (states(''sensor.ath_min_soil_temperature'')
            | float)  }}'
        then:
        - data:
            topic: house/weather/athminsoiltemp
            payload: '{{ states(''sensor.daily_min_soil_temp'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATL Soil Temp
            message: 'Just recorded a new ALL TIME LOW SOIL TEMPERATURE: {{ states(''sensor.daily_min_soil_temp'')
              }}%'
          action: script.text_notify_parents
        - delay: 00:00:30
      - alias: Record daily max soil moisture
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_soil_moisture'') | float)
            > (states(''sensor.max_soil_moisture'') | float)  }}'
        then:
        - data:
            topic: house/weather/maxsoilmoist
            payload: '{{ states(''sensor.daily_max_soil_moisture'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record ATH soil moisture
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_max_soil_moisture'') | float)
            > (states(''sensor.ath_max_soil_moisture'') | float)  }}'
        then:
        - data:
            topic: house/weather/athmaxsoilmoist
            payload: '{{ states(''sensor.daily_max_soil_moisture'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATH Soil Moisture
            message: 'Just recorded a new ALL TIME HIGH SOIL MOISTURE: {{ states(''sensor.daily_max_soil_moisture'')
              }}%'
          action: script.text_notify_parents
        - delay: 00:00:30
      - alias: Record daily min soil moisture
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_min_soil_moisture'') | float)
            < (states(''sensor.min_soil_moisture'') | float)  }}'
        then:
        - data:
            topic: house/weather/minsoilmoist
            payload: '{{ states(''sensor.daily_min_soil_moisture'') }}'
            retain: true
          action: mqtt.publish
      - alias: Record ATL soil moisture
        if:
        - condition: template
          value_template: '{{ (states(''sensor.daily_min_soil_moisture'') | float)
            < (states(''sensor.ath_min_soil_moisture'') | float)  }}'
        then:
        - data:
            topic: house/weather/athminsoilmoist
            payload: '{{ states(''sensor.daily_min_soil_moisture'') }}'
            retain: true
          action: mqtt.publish
        - data:
            title: New ATL Soil Moisture
            message: 'Just recorded a new ALL TIME LOW SOIL MOISTURE: {{ states(''sensor.daily_min_soil_moisture'')
              }}%'
          action: script.text_notify_parents
        - delay: 00:00:30
  mode: queued
- id: '1726934953551'
  alias: Kids Bathroom Fan Control
  description: With blueprint
  use_blueprint:
    path: Blackshome/bathroom-humidity-exhaust-fan.yaml
    input:
      trigger: sensor.jack_and_jill_humidity_change
      fan_switch:
        entity_id: switch.jamie_bathroom_switch_right
      bathroom_humidity_sensor: sensor.kids_bathroom_temperature_and_humidity_humidity
      rising_humidity: 5
      falling_humidity: -2
      time_out: 60
      include_max_humidity: maximum_humidity_enabled
      include_manual_fan_switch: enable_manual_fan_switch_auto_off
      month_winter_mode:
      - '12'
      - '1'
      - '2'
      - '3'
      - '4'
      winter_time_delay: 5
      winter_time_out: 60
      winter_include_max_humidity: maximum_humidity_enabled
      bypass_auto_off_delay: 60
      by_pass: group.en_suite_window
      include_bypass: bypass_disabled
      time_delay: 5
      include_winter_mode: winter_mode_enabled
      winter_rising_humidity: 2
      winter_falling_humidity: -3
      max_humidity: 90
      winter_max_humidity: 90
      include_manual_trigger: disable_manual_trigger
      manual_trigger: []
      manual_trigger_winter_time_delay: 20
      manual_trigger_default_time_delay: 5
      manual_fan_switch:
      - switch.sean_bathroom_switch_left
- id: '1727262696473'
  alias: New AHC Blueprint Version Available
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.ahc_latest_version
    from:
  condition: []
  action:
  - action: script.text_notify_dave
    metadata: {}
    data:
      title: AHC VERSION
      message: There is a new version of the AHC Blueprint
  mode: single
- id: '1727273028449'
  alias: Frost Warning
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.outdside_thermal_comfort_frost_risk
    to: probable
    id: Probable
  - platform: state
    entity_id:
    - sensor.outdside_thermal_comfort_frost_risk
    to: high
    id: 'High Probability '
  - platform: state
    entity_id:
    - sensor.outdside_thermal_comfort_frost_risk
    to: unlikely
    id: Unlikely
  - platform: state
    entity_id:
    - sensor.outdside_thermal_comfort_frost_risk
    to: no_risk
    id: No Risk
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id:
        - Probable
      sequence:
      - action: script.text_notify_parents
        metadata: {}
        data:
          title: FROST RISK - PROBABLE
          message: There may be a frost tonight.
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      - action: script.jarvis_speech_engine
        data:
          where: dave
          message: Sorry to interrupt, but it will probably be frosty tonight.
    - conditions:
      - condition: trigger
        id:
        - 'High Probability '
      sequence:
      - action: script.text_notify_parents
        metadata: {}
        data:
          title: FROST RISK - HIGHLY PROIBABLY
          message: There will most likely be a frost tonight.
      - condition: state
        entity_id: input_boolean.audible_notifications
        state: 'on'
      - action: script.jarvis_speech_engine
        data:
          where: dave
          message: Sorry to interrupt, but there is a good chance it will be frosty
            tonight.
    - conditions: []
      sequence: []
  mode: single
- id: '1727364410131'
  alias: All Govee Lighting
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.living_room_fp2_light_sensor_light_level
    below: input_number.low_light_threshold
    id: Low Light
    for:
      seconds: 20
  - platform: numeric_state
    entity_id: sensor.living_room_fp2_light_sensor_light_level
    above: input_number.upper_light_threshold_level
    id: Good Light
    for:
      seconds: 20
  - platform: state
    entity_id:
    - binary_sensor.morning
    from: 'off'
    to: 'on'
    id: Morning
  - platform: state
    entity_id:
    - sun.sun
    from: below_horizon
    to: above_horizon
    id: sunrise
  - platform: state
    entity_id:
    - binary_sensor.afternoon
    from: 'off'
    to: 'on'
    id: Afternoon
  - platform: state
    entity_id:
    - binary_sensor.evening
    from: 'off'
    to: 'on'
    id: Evening
  - platform: state
    entity_id:
    - sun.sun
    from: above_horizon
    to: below_horizon
    id: sunset
  - platform: state
    entity_id:
    - binary_sensor.overnight
    from: 'off'
    to: 'on'
    id: Overnight
    for:
      hours: 1
      minutes: 0
      seconds: 0
  - platform: state
    entity_id:
    - switch.living_room_tv
    from: 'off'
    to: 'on'
    id: TV on
  - platform: state
    entity_id:
    - switch.living_room_tv
    from: 'on'
    to: 'off'
    id: TV off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Low Light
      - condition: state
        entity_id: switch.living_room_tv
        state: 'on'
      sequence:
      - data: {}
        target:
          entity_id: light.dreamview_g1_pro_2
        action: light.turn_on
    - conditions:
      - condition: trigger
        id: Good Light
      - condition: state
        entity_id: switch.living_room_tv
        state: 'on'
      sequence:
      - data: {}
        target:
          entity_id: light.dreamview_g1_pro_2
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - Morning
      sequence:
      - target:
          entity_id: light.glide_lights_right_2
        data:
          brightness_pct: 1
          effect: Morning
        action: light.turn_on
      - target:
          entity_id: light.govee_glide_left_2
        data:
          brightness_pct: 1
          effect: Morning
        action: light.turn_on
      - target:
          entity_id: light.stair_lights_2
        data:
          brightness_pct: 5
          effect: Morning
        action: light.turn_on
      - target:
          entity_id: light.xmas_string_lights_3_2
        data:
          brightness_pct: 50
          effect: Morning
        action: light.turn_on
      - condition: state
        entity_id: input_boolean.wakeup_lights
        state: 'off'
      - delay:
          hours: 0
          minutes: 23
          seconds: 0
          milliseconds: 0
      - condition: state
        entity_id: input_boolean.wakeup_lights
        state: 'off'
      - target:
          entity_id: light.bed_lamps_3
        data:
          brightness_pct: 5
          effect: Morning
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Afternoon
      sequence:
      - target:
          entity_id: light.glide_lights_right_2
        data:
          brightness_pct: 1
          effect: Rustling Leaves
        action: light.turn_on
      - target:
          entity_id: light.govee_glide_left_2
        data:
          brightness_pct: 1
          effect: Rustling Leaves
        action: light.turn_on
      - target:
          entity_id: light.stair_lights_2
        data:
          brightness_pct: 5
          effect: Afternoon
        action: light.turn_on
      - target:
          entity_id: light.bed_lamps_3
        data:
          brightness_pct: 5
          effect: Afternoon
        action: light.turn_on
      - target:
          entity_id: light.xmas_string_lights_3_2
        data:
          brightness_pct: 50
          effect: Afternoon
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Evening
      sequence:
      - target:
          entity_id: light.glide_lights_right_2
        data:
          brightness_pct: 1
          effect: Candlelight
        action: light.turn_on
      - target:
          entity_id: light.govee_glide_left_2
        data:
          brightness_pct: 1
          effect: Candlelight
        action: light.turn_on
      - target:
          entity_id: light.stair_lights_2
        data:
          brightness_pct: 5
          effect: Dating
        action: light.turn_on
      - target:
          entity_id: light.bed_lamps_3
        data:
          brightness_pct: 5
          effect: Dating
        action: light.turn_on
      - target:
          entity_id: light.xmas_string_lights_3_2
        data:
          brightness_pct: 50
          effect: Gobi Desert
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - Overnight
      sequence:
      - target:
          entity_id:
          - light.glide_lights_right_2
          - light.govee_glide_left_2
          - light.xmas_string_lights_3_2
        data: {}
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - sunrise
      - condition: state
        entity_id: binary_sensor.morning
        state: 'on'
      sequence:
      - if:
        - condition: state
          entity_id: input_boolean.wakeup_lights
          state: 'off'
        then:
        - target:
            entity_id: light.bed_lamps_3
          data:
            brightness_pct: 5
            effect: Sunrise
          action: light.turn_on
        alias: Turn on bed lamps if wakeup lights off
      - target:
          entity_id: light.stair_lights_2
        data:
          brightness_pct: 5
          effect: Sunrise
        action: light.turn_on
      - target:
          entity_id: light.govee_glide_left_2
        data:
          brightness_pct: 5
          effect: Sunrise
        action: light.turn_on
      - target:
          entity_id: light.glide_lights_right_2
        data:
          brightness_pct: 5
          effect: Sunrise
        action: light.turn_on
      - target:
          entity_id: light.xmas_string_lights_3_2
        data:
          brightness_pct: 50
          effect: Sunrise
        action: light.turn_on
      - delay:
          minutes: 30
      - target:
          entity_id: light.glide_lights_right_2
        data:
          brightness_pct: 1
          effect: Morning
        action: light.turn_on
      - target:
          entity_id: light.govee_glide_left_2
        data:
          brightness_pct: 1
          effect: Morning
        action: light.turn_on
      - target:
          entity_id: light.stair_lights_2
        data:
          brightness_pct: 5
          effect: Morning
        action: light.turn_on
      - target:
          entity_id: light.bed_lamps_3
        data:
          brightness_pct: 5
          effect: Morning
        action: light.turn_on
      - target:
          entity_id: light.xmas_string_lights_3_2
        data:
          brightness_pct: 50
          effect: Morning
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - TV on
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.day
          state: 'off'
        - condition: numeric_state
          entity_id: sensor.living_room_fp2_light_sensor_light_level
          below: input_number.low_light_threshold
      sequence:
      - target:
          entity_id: light.dreamview_g1_pro_2
        data: {}
        action: light.turn_on
    - conditions:
      - condition: trigger
        id:
        - TV off
      - condition: state
        entity_id: light.dreamview_g1_pro_2
        state: 'on'
      sequence:
      - target:
          entity_id: light.dreamview_g1_pro_2
        data: {}
        action: light.turn_off
    - conditions:
      - condition: trigger
        id:
        - sunset
      sequence:
      - if:
        - condition: state
          entity_id: binary_sensor.overnight
          state: 'off'
        then:
        - target:
            entity_id: light.bed_lamps_3
          data:
            brightness_pct: 5
            effect: Warm
          action: light.turn_on
      - target:
          entity_id: light.stair_lights_2
        data:
          brightness_pct: 5
          effect: Warm
        action: light.turn_on
      - target:
          entity_id: light.govee_glide_left_2
        data:
          brightness_pct: 5
          effect: Sunset Glow
        action: light.turn_on
      - target:
          entity_id: light.glide_lights_right_2
        data:
          brightness_pct: 5
          effect: Sunset Glow
        action: light.turn_on
      - target:
          entity_id: light.xmas_string_lights_3_2
        data:
          brightness_pct: 50
          effect: Warm
        action: light.turn_on
      - delay:
          minutes: 30
      - if:
        - condition: state
          entity_id: binary_sensor.afternoon
          state: 'on'
        then:
        - target:
            entity_id: light.glide_lights_right_2
          data:
            brightness_pct: 1
            effect: Rustling Leaves
          action: light.turn_on
        - target:
            entity_id: light.govee_glide_left_2
          data:
            brightness_pct: 1
            effect: Rustling Leaves
          action: light.turn_on
        - target:
            entity_id: light.stair_lights_2
          data:
            brightness_pct: 5
            effect: Afternoon
          action: light.turn_on
        - target:
            entity_id: light.xmas_string_lights_3_2
          data:
            brightness_pct: 50
            effect: Afternoon
          action: light.turn_on
        - target:
            entity_id: light.bed_lamps_3
          data:
            brightness_pct: 5
            effect: Afternoon
          action: light.turn_on
        else:
        - target:
            entity_id: light.glide_lights_right_2
          data:
            brightness_pct: 1
            effect: Candlelight
          action: light.turn_on
        - target:
            entity_id: light.govee_glide_left_2
          data:
            brightness_pct: 1
            effect: Candlelight
          action: light.turn_on
        - target:
            entity_id: light.stair_lights_2
          data:
            brightness_pct: 5
            effect: Dating
          action: light.turn_on
        - target:
            entity_id: light.xmas_string_lights_3_2
          data:
            brightness_pct: 50
            effect: Gobi Desert
          action: light.turn_on
        - if:
          - condition: state
            entity_id: binary_sensor.overnight
            state: 'off'
          then:
          - target:
              entity_id: light.bed_lamps_3
            data:
              brightness_pct: 5
              effect: Dating
            action: light.turn_on
  mode: parallel
  initial_state: true
- id: '1727367350595'
  alias: Birthday Announcements
  description: ''
  trigger:
  - platform: calendar
    event: start
    offset: '7:45:0'
    entity_id: calendar.birthdays
  condition:
  - condition: template
    value_template: '{{ is_state(''input_boolean.audible_notifications'',''on'') }}'
  action:
  - action: script.birthday_announcement
    data:
      where: kitchen
  - delay:
      hours: 0
      minutes: 0
      seconds: 15
      milliseconds: 0
  - data:
      entity_id: media_player.dave_s_2nd_echo_pop
      media_content_id: Awesome Birthday Song in everywhere group
      media_content_type: AMAZON_MUSIC
    action: media_player.play_media
  mode: single
  initial_state: true
