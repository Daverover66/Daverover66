alias: Office Lights with Presence
description: ""
triggers:
  - entity_id:
      - binary_sensor.office_presence_sensor_occupancy
    from: "off"
    to: "on"
    id: Light on
    trigger: state
  - entity_id:
      - binary_sensor.office_occupied
    from: "on"
    to: "off"
    id: Light off
    for:
      hours: 0
      minutes: 0
      seconds: 0
    trigger: state
conditions: []
actions:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - Light on
          - condition: or
            conditions:
              - condition: sun
                before: sunrise
                after: sunset
              - condition: and
                conditions:
                  - condition: numeric_state
                    entity_id: sensor.office_light_level
                    below: input_number.low_light_threshold
                  - condition: template
                    value_template: >-
                      {{ is_state('sensor.day_of_week','Saturday') or
                      is_state('sensor.day_of_week','Sunday') }}
        sequence:
          - action: switch.turn_on
            target:
              entity_id: switch.office_light_switch
            data: {}
      - conditions:
          - condition: trigger
            id:
              - Light off
          - condition: state
            entity_id: switch.office_light_switch
            state: "on"
          - condition: state
            entity_id: binary_sensor.gem_workstation_status
            state: "off"
            alias: Confirm Gem's PC is not active
          - alias: Confirm home PC is not being used
            condition: template
            value_template: >-
              {{
              is_state('sensor.dave_and_gemma_dave_and_gemma_monitorpowerstate','PowerOff')
              or
              is_state('sensor.dave_and_gemma_dave_and_gemma_monitorpowerstate','unavailable')}}
        sequence:
          - action: switch.turn_off
            target:
              entity_id: switch.office_light_switch
            data: {}
mode: single
