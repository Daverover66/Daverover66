##########################
These are all the home battery related automations not currently in use
##########################

###############################################################################
### Actionable notification to request charge level of battery overnight
###############################################################################

  # alias: Get desired battery %
  # description: Send a notification asking for desired battery percentage
  # trigger:
  #   - platform: time
  #     at: input_datetime.get_desired_charge_notification_at
  # condition: []
  # action:
  #   - alias: Send a notification based on an input text helper
  #     service: script.text_notify_dave
  #     data:
  #       message: >
  #         What battery % do you want to charge to? (default {{
  #         states('input_number.default_battery_percentage')|int }}%)
  #       title: Set battery charge %
  #       data:
  #         actions:
  #           - action: FULL
  #             title: 100%
  #           - action: HALF
  #             title: 50%
  #           - action: REPLY
  #             title: Custom
  #   - alias: Wait for a response
  #     wait_for_trigger:
  #       - platform: event
  #         event_type: mobile_app_notification_action
  #         event_data:
  #           action: FULL
  #       - platform: event
  #         event_type: mobile_app_notification_action
  #         event_data:
  #           action: REPLY
  #       - platform: event
  #         event_type: mobile_app_notification_action
  #         event_data:
  #           action: HALF
  #     timeout:
  #       hours: 1
  #       minutes: 0
  #       seconds: 0
  #       milliseconds: 0
  #     continue_on_timeout: true
  #   - choose:
  #       - conditions:
  #           - condition: template
  #             value_template: "{{ not wait.trigger }}"
  #         sequence:
  #           - service: input_number.set_value
  #             target:
  #               entity_id: input_number.desired_battery_percentage
  #             data:
  #               value: "{{ states('input_number.default_battery_percentage') | float }}"
  #       - conditions:
  #           - condition: template
  #             value_template: "{{ wait.trigger.event.data.action == \"FULL\" }}"
  #         sequence:
  #           - service: input_number.set_value
  #             target:
  #               entity_id: input_number.desired_battery_percentage
  #             data:
  #               value: 100
  #       - conditions:
  #           - condition: template
  #             value_template: "{{ wait.trigger.event.data.action == \"REPLY\" }}"
  #         sequence:
  #           - service: input_number.set_value
  #             target:
  #               entity_id: input_number.desired_battery_percentage
  #             data:
  #               value: |
  #                 {{ wait.trigger.event.data.reply_text | int(0) }}
  #       - conditions:
  #           - condition: template
  #             value_template: "{{ wait.trigger.event.data.action == \"HALF\" }}"
  #         sequence:
  #           - service: input_number.set_value
  #             target:
  #               entity_id: input_number.desired_battery_percentage
  #             data:
  #               value: 50
  # mode: single

###############################################################################
### Actionable notification to request discharge level of battery during peak export
###############################################################################

alias: Get Desired Battery Discharge %
description: Send a notification asking for desired battery discharge percentage
trigger:
  - platform: time
    at: input_datetime.get_desired_discharge_notification_at 
condition: []
action:
  - alias: Send notification
    service: script.text_notify_dave
    data:
      message: >
        What battery % do you want to discharge to? (default {{
        states('input_number.default_battery_discharge_percentage')|int }}%)
        Current Battery Level is {{
        states('sensor.solaredge_b1_state_of_energy') }}kWh
      title: Set battery discharge %
      data:
        actions:
          - action: FORTY
            title: 40%
          - action: THIRTY
            title: 30%
          - action: REPLY
            title: Custom
  - alias: Wait for a response
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: FORTY 
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: REPLY
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: THIRTY 
    timeout:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
    continue_on_timeout: true
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ not wait.trigger }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: input_number.desired_battery_discharge_percentage
            data:
              value: "{{ states('input_number.default_battery_percentage') | float }}"
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"FIFTYFIVE\" }}"
        sequence:
          - service: input_number.set_value
            data:
              value: 40
            target:
              entity_id: input_number.desired_battery_discharge_percentage
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"REPLY\" }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: input_number.desired_battery_discharge_percentage
            data:
              value: |
                {{ wait.trigger.event.data.reply_text | int(0) }}
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"FORTYFIVE\" }}"
        sequence:
          - service: input_number.set_value
            data:
              value: 30
            target:
              entity_id: input_number.desired_battery_discharge_percentage
mode: single

alias: Discharge Battery to Desired %
description: Discharge the Home Battery to the desired % during Flux peak time
trigger:
  - platform: state
    entity_id:
      - sensor.solaredge_b1_state_of_energy
    enabled: true
    id: Battery State of Energy
  - platform: time
    id: Start of peak
    alias: At Start Discharge Helper Time
    at: input_datetime.start_battery_discharge
  - platform: time
    at: input_datetime.end_battery_discharge
    id: End of peak
    alias: At End Discharge Helper Time
  - platform: state
    entity_id:
      - switch.solaredge_i1_advanced_power_control
    from: unavailable
    to: "on"
    id: Inverter Reset
condition:
  - condition: state
    entity_id: input_boolean.allow_battery_grid_discharge
    state: "on"
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Start of peak
          - condition: numeric_state
            entity_id: sensor.solaredge_b1_state_of_energy
            above: input_number.desired_battery_discharge_percentage
            alias: Confirm Battery State of Charge is above desired discharge %
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{
                states('input_number.storage_command_timeout_for_discharge_to_grid')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Input Number Helper Value
          - service: number.set_value
            data:
              value: "{{ states('input_number.battery_output_limit') | float(0) }}"
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Discharge to Maximize Export
            alias: Set Storage Command Mode to Discharge to Maximise Export
      - conditions:
          - condition: trigger
            id: Battery State of Energy
          - condition: device
            device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: selected_option
            option: Discharge to Maximize Export
            alias: Storage Command Mode is Discharge to Maximise Export
          - condition: numeric_state
            entity_id: sensor.solaredge_b1_state_of_energy
            below: input_number.desired_battery_discharge_percentage
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.default_battery_output_limit') |
                float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
      - conditions:
          - condition: trigger
            id: End of peak
          - condition: not
            conditions:
              - condition: device
                device_id: 952193e87f675ba7f7e32eda5500c572
                domain: select
                entity_id: select.solaredge_i1_storage_command_mode
                type: selected_option
                option: Maximize Self Consumption
            alias: Test if Storage Command Mode is MSC
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float (0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.default_battery_output_limit') |
                float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
mode: single

alias: "Grid Charge Battery to Desired % "
description: Charge the Home Battery to the desired % from the grid during off-peak time
trigger:
  - platform: state
    entity_id:
      - sensor.solaredge_b1_state_of_energy
    enabled: true
    id: Battery State of Energy
  - platform: time
    at: input_datetime.start_battery_grid_charge
    id: Start of off peak
    alias: When off-peak period has started
  - platform: time
    at: input_datetime.end_battery_grid_charge
    id: End of off peak
    alias: When off-peak period has ended
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Start of off peak
          - condition: numeric_state
            entity_id: sensor.solaredge_b1_state_of_energy
            below: input_number.desired_battery_percentage
        sequence:
          - service: script.grid_charge_battery
            data: {}
      - conditions:
          - condition: trigger
            id: Battery State of Energy
          - condition: device
            device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: selected_option
            option: Charge from Solar Power and Grid
            alias: Storage Command Mode is Charge from Solar Power and Grid
          - condition: or
            conditions:
              - condition: numeric_state
                entity_id: sensor.solaredge_b1_state_of_energy
                above: input_number.desired_battery_percentage
              - condition: numeric_state
                entity_id: sensor.solaredge_b1_state_of_energy
                above: 99.5
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
          - service: input_number.set_value
            data:
              value: 0
            target:
              entity_id: input_number.desired_battery_percentage
            alias: Set Desired Battery % to zero
      - conditions:
          - condition: trigger
            id: End of off peak
          - condition: not
            conditions:
              - condition: device
                device_id: 952193e87f675ba7f7e32eda5500c572
                domain: select
                entity_id: select.solaredge_i1_storage_command_mode
                type: selected_option
                option: Maximize Self Consumption
            alias: Test if Storage Command Mode is MSC
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
mode: single

alias: Grid Charge Battery to full
description: ""
trigger:
  - platform: time
    at: input_datetime.start_battery_grid_charge
    id: Start of slot 1
  - platform: time
    at: input_datetime.end_battery_grid_charge
    id: End of slot 1
  - platform: time
    at: input_datetime.start_battery_grid_charge_slot_2_at
    id: Start of slot 2
  - platform: time
    at: input_datetime.end_battery_charge_grid_slot_2_at
    id: End of slot 2
  - platform: time
    at: input_datetime.start_battery_grid_charge_slot_3_at
    id: Start of slot 3
  - platform: time
    at: input_datetime.end_battery_charge_grid_slot_3_at
    id: End of slot 3
  - platform: time
    at: input_datetime.start_battery_grid_charge_slot_4_at
    id: Start of slot 4
  - platform: time
    at: input_datetime.end_battery_grid_charge_slot_4_at
    id: End of slot 4
  - platform: state
    entity_id:
      - switch.solaredge_i1_grid_control
      - switch.solaredge_i1_advanced_power_control
    from: unavailable
    to: "on"
    id: Inverter Reset
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - Start of slot 1
          - condition: state
            entity_id: input_boolean.grid_charge_battery_slot_1_active
            state: "on"
        sequence:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.home_battery_grid_charging
          - service: script.grid_charge_battery
            data: {}
      - conditions:
          - condition: trigger
            id:
              - End of slot 1
          - condition: state
            entity_id: input_boolean.grid_charge_battery_slot_1_active
            state: "on"
        sequence:
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: 0bdfb19491b49722c2a94351b9a673aa
            type: select_option
            option: Maximize Self Consumption
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.home_battery_grid_charging
      - conditions:
          - condition: trigger
            id:
              - Start of slot 2
          - condition: state
            entity_id: input_boolean.grid_charge_battery_slot_2_active
            state: "on"
        sequence:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.home_battery_grid_charging
          - service: script.grid_charge_battery
            data: {}
      - conditions:
          - condition: trigger
            id:
              - End of slot 2
          - condition: state
            entity_id: input_boolean.grid_charge_battery_slot_2_active
            state: "on"
        sequence:
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: 0bdfb19491b49722c2a94351b9a673aa
            type: select_option
            option: Maximize Self Consumption
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.home_battery_grid_charging
      - conditions:
          - condition: trigger
            id:
              - Start of slot 3
          - condition: state
            entity_id: input_boolean.grid_charge_battery_slot_3_active
            state: "on"
        sequence:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.home_battery_grid_charging
          - service: script.grid_charge_battery
            data: {}
      - conditions:
          - condition: trigger
            id:
              - End of slot 3
          - condition: state
            entity_id: input_boolean.grid_charge_battery_slot_3_active
            state: "on"
        sequence:
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: 0bdfb19491b49722c2a94351b9a673aa
            type: select_option
            option: Maximize Self Consumption
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.home_battery_grid_charging
      - conditions:
          - condition: trigger
            id:
              - Start of slot 4
          - condition: state
            entity_id: input_boolean.grid_charge_battery_slot_4_active
            state: "on"
        sequence:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.home_battery_grid_charging
          - service: script.grid_charge_battery
            data: {}
      - conditions:
          - condition: trigger
            id:
              - End of slot 4
          - condition: state
            entity_id: input_boolean.grid_charge_battery_slot_4_active
            state: "on"
        sequence:
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: 0bdfb19491b49722c2a94351b9a673aa
            type: select_option
            option: Maximize Self Consumption
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.home_battery_grid_charging
      - conditions:
          - condition: trigger
            id:
              - Inverter Reset
          - condition: state
            entity_id: input_boolean.grid_charge_home_battery
            state: "on"
          - condition: or
            conditions:
              - condition: time
                after: input_datetime.start_battery_grid_charge
                before: input_datetime.end_battery_grid_charge
              - condition: time
                after: input_datetime.start_battery_grid_charge_slot_2_at
                before: input_datetime.end_battery_charge_grid_slot_2_at
              - condition: time
                after: input_datetime.start_battery_grid_charge_slot_3_at
                before: input_datetime.end_battery_charge_grid_slot_3_at
              - condition: time
                after: input_datetime.start_battery_grid_charge_slot_4_at
                before: input_datetime.end_battery_grid_charge_slot_4_at
        sequence:
          - service: script.grid_charge_battery
            data: {}
mode: restart


alias: Set battery to charge from clipped Solar ( normally after longer EV charge)
description: ""
trigger:
  - platform: time
    at: input_datetime.start_charge_from_clipped_solar
condition: []
action:
  - service: number.set_value
    data:
      value: >-
        {{
        states('input_number.storage_command_timeout_period_for_clipped_solar')
        | float(0)}}
    target:
      entity_id: number.solaredge_i1_storage_command_timeout
    alias: Set Storage Command Timeout to Clipped Solar Input Number Helper
  - device_id: 952193e87f675ba7f7e32eda5500c572
    domain: select
    entity_id: select.solaredge_i1_storage_command_mode
    type: select_option
    option: Charge from Clipped Solar Power
    alias: Set Storage Command Mode to Charge from Clipped Solar
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: number.set_value
    data:
      value: >-
        {{ states('input_number.storage_command_timeout_default_period') |
        float(0)}}
    target:
      entity_id: number.solaredge_i1_storage_command_timeout
    alias: Set Storage Command Timeout to default
mode: single

alias: Charging Controls Work Together
description: ""
trigger:
  - platform: state
    entity_id:
      - input_boolean.grid_charge_battery_slot_1_active
      - input_boolean.grid_charge_battery_slot_2_active
      - input_boolean.grid_charge_battery_slot_3_active
      - input_boolean.grid_charge_battery_slot_4_active
    id: Grid Slot Active Change
  - platform: state
    entity_id:
      - input_datetime.start_battery_grid_charge
      - input_datetime.start_battery_grid_charge_slot_2_at
      - input_datetime.start_battery_grid_charge_slot_3_at
      - input_datetime.start_battery_output_limit_slot_4
    id: Grid Slot Start Time Set
  - platform: state
    entity_id:
      - input_datetime.end_battery_grid_charge
      - input_datetime.end_battery_charge_grid_slot_2_at
      - input_datetime.end_battery_charge_grid_slot_3_at
      - input_datetime.end_battery_grid_charge_slot_4_at
    id: Grid Slot End Time Set
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - Grid Slot Active Change
          - condition: template
            value_template: "{{ \"1\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id:
                - input_boolean.rolec_slot_1_active
      - conditions:
          - condition: trigger
            id:
              - Grid Slot Active Change
          - condition: template
            value_template: "{{ \"2\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id:
                - input_boolean.rolec_slot_2_active
      - conditions:
          - condition: trigger
            id:
              - Grid Slot Active Change
          - condition: template
            value_template: "{{ \"3\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id:
                - input_boolean.rolec_slot_3_active
      - conditions:
          - condition: trigger
            id:
              - Grid Slot Active Change
          - condition: template
            value_template: "{{ \"4\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id:
                - input_boolean.rolec_slot_4_active
      - conditions:
          - condition: trigger
            id:
              - Grid Slot Start Time Set
          - condition: template
            value_template: "{{ \"1\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_datetime.set_datetime
            data:
              time: "{{ states('input_datetime.start_battery_grid_charge') }}"
            target:
              entity_id:
                - input_datetime.rolec_wallbox_on
          - service: input_datetime.set_datetime
            data:
              time: >
                {{(as_timestamp(strptime(states('input_datetime.start_battery_grid_charge'),
                "%H:%M:%S")) + 1800)|timestamp_custom ("%H:%M")}}
            target:
              entity_id: input_datetime.start_battery_grid_charge_slot_2_at
      - conditions:
          - condition: trigger
            id:
              - Grid Slot Start Time Set
          - condition: template
            value_template: "{{ \"2\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_datetime.set_datetime
            data:
              time: >-
                {{ states('input_datetime.start_battery_grid_charge_slot_2_at')
                }}
            target:
              entity_id:
                - input_datetime.rolec_wallbox_slot_2_on_at
          - service: input_datetime.set_datetime
            data:
              time: >
                {{(as_timestamp(strptime(states('input_datetime.start_battery_grid_charge_slot_2_at'),
                "%H:%M:%S")) + 1800)|timestamp_custom ("%H:%M")}}
            target:
              entity_id: input_datetime.start_battery_grid_charge_slot_3_at
      - conditions:
          - condition: trigger
            id:
              - Grid Slot Start Time Set
          - condition: template
            value_template: "{{ \"3\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_datetime.set_datetime
            data:
              time: >-
                {{ states('input_datetime.start_battery_grid_charge_slot_3_at')
                }}
            target:
              entity_id:
                - input_datetime.rolec_wallbox_slot_3_on_at
          - service: input_datetime.set_datetime
            data:
              time: >
                {{(as_timestamp(strptime(states('input_datetime.start_battery_grid_charge_slot_3_at'),
                "%H:%M:%S")) + 1800)|timestamp_custom ("%H:%M")}}
            target:
              entity_id: input_datetime.start_battery_grid_charge_slot_4_at
      - conditions:
          - condition: trigger
            id:
              - Grid Slot Start Time Set
          - condition: template
            value_template: "{{ \"4\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_datetime.set_datetime
            data:
              time: >-
                {{ states('input_datetime.start_battery_grid_charge_slot_4_at')
                }}
            target:
              entity_id:
                - input_datetime.rolec_wallbox_slot_4_on_at
      - conditions:
          - condition: trigger
            id:
              - Grid Slot End Time Set
          - condition: template
            value_template: "{{ \"1\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_datetime.set_datetime
            data:
              time: "{{ states('input_datetime.end_battery_grid_charge') }}"
            target:
              entity_id:
                - input_datetime.rolec_wallbox_off
          - service: input_datetime.set_datetime
            data:
              time: >
                {{(as_timestamp(strptime(states('input_datetime.end_battery_grid_charge'),
                "%H:%M:%S")) + 1800)|timestamp_custom ("%H:%M")}}
            target:
              entity_id: input_datetime.end_battery_charge_grid_slot_2_at
      - conditions:
          - condition: trigger
            id:
              - Grid Slot End Time Set
          - condition: template
            value_template: "{{ \"2\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_datetime.set_datetime
            data:
              time: "{{ states('input_datetime.end_battery_charge_grid_slot_2_at') }}"
            target:
              entity_id:
                - input_datetime.rolec_wallbox_slot_2_off_at
          - service: input_datetime.set_datetime
            data:
              time: >
                {{(as_timestamp(strptime(states('input_datetime.end_battery_charge_grid_slot_2_at'),
                "%H:%M:%S")) + 1800)|timestamp_custom ("%H:%M")}}
            target:
              entity_id: input_datetime.end_battery_charge_grid_slot_3_at
      - conditions:
          - condition: trigger
            id:
              - Grid Slot End Time Set
          - condition: template
            value_template: "{{ \"3\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_datetime.set_datetime
            data:
              time: "{{ states('input_datetime.end_battery_charge_grid_slot_3_at') }}"
            target:
              entity_id:
                - input_datetime.rolec_wallbox_slot_3_off_at
          - service: input_datetime.set_datetime
            data:
              time: >
                {{(as_timestamp(strptime(states('input_datetime.end_battery_charge_grid_slot_3_at'),
                "%H:%M:%S")) + 1800)|timestamp_custom ("%H:%M")}}
            target:
              entity_id: input_datetime.end_battery_grid_charge_slot_4_at
      - conditions:
          - condition: trigger
            id:
              - Grid Slot End Time Set
          - condition: template
            value_template: "{{ \"4\" in trigger.to_state.attributes.friendly_name }}"
        sequence:
          - service: input_datetime.set_datetime
            data:
              time: "{{ states('input_datetime.end_battery_grid_charge_slot_4_at') }}"
            target:
              entity_id:
                - input_datetime.rolec_wallbox_slot_4_off_at
mode: queued
max: 6

alias: Set times for battery grid charge
description: ""
trigger:
  - platform: state
    entity_id:
      - binary_sensor.overnight
    from: "off"
    to: "on"
    id: Set
    enabled: false
  - platform: state
    entity_id:
      - binary_sensor.lunchtime
    from: "off"
    to: "on"
    id: Reset
    enabled: true
condition:
  - condition: state
    entity_id: input_boolean.grid_charge_home_battery
    state: "on"
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Set
        sequence:
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: input_boolean.grid_charge_battery_slot_1_active
          - service: input_datetime.set_datetime
            data:
              time: "{{states('sensor.home_battery_charge_start_time')}}"
            target:
              entity_id: input_datetime.start_battery_grid_charge
          - service: input_datetime.set_datetime
            data:
              time: "{{states('sensor.home_battery_charge_end_time')}}"
            target:
              entity_id: input_datetime.end_battery_grid_charge
      - conditions:
          - condition: trigger
            id:
              - Reset
        sequence:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.grid_charge_battery_slot_1_active
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.grid_charge_battery_slot_2_active
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.grid_charge_battery_slot_3_active
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.grid_charge_battery_slot_4_active
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.rolec_slot_1_active
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.rolec_slot_2_active
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.rolec_slot_3_active
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.rolec_slot_4_active
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.battery_output_limit_slot_1
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.battery_output_limit_slot_2
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.battery_output_limit_slot_3
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.battery_output_limit_slot_4
mode: single

###############################################################################
### Charge battery to desired level from the grid during off-peak
###############################################################################

alias: "Charge Battery to Desired % "
description: Charge the Home Battery to the desired % from the grid during off-peak time
trigger:
  - platform: state
    entity_id:
      - sensor.solaredge_b1_state_of_energy
    enabled: true
    id: Battery State of Energy
  - platform: time
    at: input_datetime.start_battery_grid_charge
    id: Start of off peak
    alias: When off-peak period has started
  - platform: time
    at: input_datetime.end_battery_grid_charge
    id: End of off peak
    alias: When off-peak period has ended
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Start of off peak
          - condition: numeric_state
            entity_id: sensor.solaredge_b1_state_of_energy
            below: input_number.desired_battery_percentage
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{
                states('input_number.storage_command_timeout_for_discharge_to_grid')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Input Number Helper Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Charge from Solar Power and Grid
            alias: Set Storage Command Mode to Charge from Solar Power and Grid
      - conditions:
          - condition: trigger
            id: Battery State of Energy
          - condition: device
            device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: selected_option
            option: Charge from Solar Power and Grid
            alias: Storage Command Mode is Charge from Solar Power and Grid
          - condition: or
            conditions:
              - condition: numeric_state
                entity_id: sensor.solaredge_b1_state_of_energy
                above: input_number.desired_battery_percentage
              - condition: numeric_state
                entity_id: sensor.solaredge_b1_state_of_energy
                above: 99.5
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
          - service: input_number.set_value
            data:
              value: 0
            target:
              entity_id: input_number.desired_battery_percentage
            alias: Set Desired Battery % to zero
      - conditions:
          - condition: trigger
            id: End of off peak
          - condition: not
            conditions:
              - condition: device
                device_id: 952193e87f675ba7f7e32eda5500c572
                domain: select
                entity_id: select.solaredge_i1_storage_command_mode
                type: selected_option
                option: Maximize Self Consumption
            alias: Test if Storage Command Mode is MSC
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
mode: single



###############################################################################
### Discharge battery to desired level during peak export period
###############################################################################

alias: Discharge Battery to Desired %
description: Disharge the Home Battery to the desired % during Flux peak time
trigger:
  - platform: state
    entity_id:
      - sensor.solaredge_b1_state_of_energy
    enabled: true
    id: Battery State of Energy
  - platform: time
    id: Start of peak
    alias: At Start Discharge Helper Time
    at: input_datetime.start_battery_discharge
  - platform: time
    at: input_datetime.end_battery_discharge
    id: End of peak
    alias: At End Discharge Helper Time
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Start of peak
          - condition: numeric_state
            entity_id: sensor.solaredge_b1_state_of_energy
            above: input_number.desired_battery_discharge_percentage
            alias: Confirm Battery State of Charge is above desired discharge %
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{
                states('input_number.storage_command_timeout_for_discharge_to_grid')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Input Number Helper Value
          - service: number.set_value
            data:
              value: "{{ states('input_number.battery_output_limit') | float(0) }}"
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Discharge to Maximize Export
            alias: Set Storage Command Mode to Discharge to Maximise Export
      - conditions:
          - condition: trigger
            id: Battery State of Energy
          - condition: device
            device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: selected_option
            option: Discharge to Maximize Export
            alias: Storage Command Mode is Discharge to Maximise Export
          - condition: numeric_state
            entity_id: sensor.solaredge_b1_state_of_energy
            below: input_number.desired_battery_discharge_percentage
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.default_battery_output_limit') |
                float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
      - conditions:
          - condition: trigger
            id: End of peak
          - condition: not
            conditions:
              - condition: device
                device_id: 952193e87f675ba7f7e32eda5500c572
                domain: select
                entity_id: select.solaredge_i1_storage_command_mode
                type: selected_option
                option: Maximize Self Consumption
            alias: Test if Storage Command Mode is MSC
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.storage_command_timeout_default_period')
                | float (0) }}
            target:
              entity_id: number.solaredge_i1_storage_command_timeout
            alias: Set Storage Command Timeout to Default Value
          - device_id: 952193e87f675ba7f7e32eda5500c572
            domain: select
            entity_id: select.solaredge_i1_storage_command_mode
            type: select_option
            option: Maximize Self Consumption
            alias: Set Storage Command Mode to MSC
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.default_battery_output_limit') |
                float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
mode: single

###################################################################################################
### Actionable notification to ask if battery output is to be limited overnight during EV charging
###################################################################################################

alias: Get Battery Output Limit
description: Send a notification asking if the battery output should be limited overnight
trigger:
  - platform: time
    at: "22:05:00"
condition: []
action:
  - alias: Send notification
    service: notify.mobile_app_daves_samsung_galaxy
    data:
      message: |
        Do you want to limit the battery output overnight?
      title: Battery Output Limit
      data:
        actions:
          - action: "YES"
            title: "Yes"
          - action: "NO"
            title: "No"
  - alias: Wait for a response
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "YES"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "NO"
    timeout:
      hours: 0
      minutes: 30
      seconds: 0
      milliseconds: 0
    continue_on_timeout: true
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ not wait.trigger }}"
        sequence:
          - service: input_number.set_value
            target:
              entity_id: >-
                input_number.desired_battery_output_limit_for_overnight_ev_charging
            data:
              value: >-
                {{ states('input_number.default_battery_output_limit') | float
                }}
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"YES\" }}"
        sequence:
          - service: input_number.set_value
            data:
              value: 500
            target:
              entity_id: >-
                input_number.desired_battery_output_limit_for_overnight_ev_charging
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == \"NO\" }}"
        sequence:
          - service: input_number.set_value
            data:
              value: 5000
            target:
              entity_id: >-
                input_number.desired_battery_output_limit_for_overnight_ev_charging
mode: single

###############################################################################
### Limit battery output overnight during EV charging 
###############################################################################

alias: Limit Battery Output
description: Limit the output of the battery during overnight EV charging window
trigger:
  - platform: time
    at: input_datetime.start_battery_output_limit
    id: Start of Flux Period
  - platform: time
    at: input_datetime.end_battery_output_limit
    id: End of Flux Period
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Start of Flux Period
            alias: When triggered by start of limit period
          - condition: numeric_state
            entity_id: number.solaredge_i1_storage_discharge_limit
            above: >-
              input_number.desired_battery_output_limit_for_overnight_ev_charging
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{
                states('input_number.desired_battery_output_limit_for_overnight_ev_charging')
                | float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
      - conditions:
          - condition: trigger
            id: End of Flux Period
            alias: When triggered by end of limit period
        sequence:
          - service: number.set_value
            data:
              value: >-
                {{ states('input_number.default_battery_output_limit') |
                float(0) }}
            target:
              entity_id: number.solaredge_i1_storage_discharge_limit
            alias: Set Storage Discharge Limit to Input Number Helper Value
mode: single

###############################################################################
### Set Battery to charge from Clipped Solar
###############################################################################

alias: Set battery to charge from clipped Solar ( normally after longer EV charge)
description: ""
trigger:
  - platform: time
    at: input_datetime.start_charge_from_clipped_solar
condition: []
action:
  - service: number.set_value
    data:
      value: >-
        {{
        states('input_number.storage_command_timeout_period_for_clipped_solar')
        | float(0)}}
    target:
      entity_id: number.solaredge_i1_storage_command_timeout
    alias: Set Storage Command Timeout to Clipped Solar Input Number Helper
  - device_id: 952193e87f675ba7f7e32eda5500c572
    domain: select
    entity_id: select.solaredge_i1_storage_command_mode
    type: select_option
    option: Charge from Clipped Solar Power
    alias: Set Storage Command Mode to Charge from Clipped Solar
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: number.set_value
    data:
      value: >-
        {{ states('input_number.storage_command_timeout_default_period') |
        float(0)}}
    target:
      entity_id: number.solaredge_i1_storage_command_timeout
    alias: Set Storage Command Timeout to default
mode: single

###############################################################################
### Check Battery Settings
###############################################################################

alias: Battery Settings Confirm
description: checks to see if battery settings are correct and sets an input boolean toggle
trigger:
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_default_mode
    from: Maximize Self Consumption
    id: Storage Default Mode Wrong
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_default_mode
    id: Storage Default Mode Correct
    to: Maximize Self Consumption
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_command_mode
    from: Maximize Self Consumption
    id: Storage Cmd Mode Wrong
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_command_mode
    id: Storage Cmd Mode Correct
    to: Maximize Self Consumption
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_control_mode
    from: Remote Control
    id: Storage Control Mode Wrong
  - platform: state
    entity_id:
      - select.solaredge_i1_storage_control_mode
    id: Storage Control Mode Correct
    to: Remote Control
condition: []
action:
  - choose:
      - conditions:
          - condition: trigger
            id: Storage Default Mode Wrong
          - condition: state
            entity_id: input_boolean.desired_storage_default_mode_correct
            state: "on"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_default_mode_correct
      - conditions:
          - condition: trigger
            id: Storage Default Mode Correct
          - condition: state
            entity_id: input_boolean.desired_storage_default_mode_correct
            state: "off"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_default_mode_correct
      - conditions:
          - condition: trigger
            id: Storage Cmd Mode Wrong
          - condition: state
            entity_id: input_boolean.desired_storage_cmd_mode_correct
            state: "on"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_cmd_mode_correct
      - conditions:
          - condition: trigger
            id: Storage Cmd Mode Correct
          - condition: state
            entity_id: input_boolean.desired_storage_cmd_mode_correct
            state: "off"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_cmd_mode_correct
      - conditions:
          - condition: trigger
            id: Storage Control Mode Wrong
          - condition: state
            entity_id: input_boolean.desired_storage_control_mode_correct
            state: "on"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_control_mode_correct
      - conditions:
          - condition: trigger
            id: Storage Control Mode Correct
          - condition: state
            entity_id: input_boolean.desired_storage_control_mode_correct
            state: "off"
        sequence:
          - service: input_boolean.toggle
            data: {}
            target:
              entity_id: input_boolean.desired_storage_control_mode_correct
mode: single
