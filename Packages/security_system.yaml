###############################################################################
#   @author         :   Jeffrey Stone
#   @date           :   03/13/2019
#   @package        :   Security
#   @description    :   Everything related to security functions.
#
#   @modified by    :   David Forrester
#   @date           :   20/10/2024
###############################################################################

#######################
#      Helpers        #
#######################

##################
#     Groups     # 
##################

group:
  ground_floor_windows:
    name: Ground Floor Windows
    icon: mdi:window-closed-variant 
    entities:
      - binary_sensor.cloakroom_window_contact
      - binary_sensor.hallway_window_contact
      - binary_sensor.kitchen_window_left_contact
      - binary_sensor.kitchen_window_right_contact
      - binary_sensor.living_room_window_left_contact
      - binary_sensor.living_room_window_right_contact
      - binary_sensor.dining_room_window_left_contact
      - binary_sensor.dining_room_window_right_contact

  first_floor_windows:
    name: First Floor Windows
    icon: mdi:window-closed-variant 
    entities: 
      - binary_sensor.en_suite_window_sensor_contact
      - binary_sensor.office_window_sensor_contact
      - binary_sensor.main_bedroom_window_left_contact
      - binary_sensor.main_bedroom_window_right_contact
      - binary_sensor.bathroom_window_contact
      - binary_sensor.guest_bedroom_window_left_contact
      - binary_sensor.guest_bedroom_window_right_contact
      - binary_sensor.sean_s_bedroom_window_left_contact
      - binary_sensor.sean_s_bedroom_window_right_contact
      - binary_sensor.jamie_s_bedroom_window_left_contact
      - binary_sensor.jamie_s_bedroom_window_right_contact
      - binary_sensor.kids_bathroom_window_left_contact
      - binary_sensor.kids_bathroom_window_right_contact

  external_doors:
    name: External Doors
    icon: mdi:door-closed
    entities:
      - binary_sensor.back_door_sensor_contact
      - binary_sensor.front_door_sense_contact
      - binary_sensor.side_door_sensor_contact
      - binary_sensor.garage_door_left_contact
      - binary_sensor.garage_door_right_contact

##################
#     Sensors    # 
##################

##################
#   Statistics   # 
##################

sensor:
  - platform: history_stats
    name: Front Door Motion Yesterday
    entity_id: binary_sensor.front_doorbell_camera_motion
    state: 'on'
    type: count 
    end: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
    duration:
      hours: 24
  - platform: history_stats
    name: Doorbell Presses Yesterday
    entity_id: binary_sensor.front_doorbell_camera_visitor
    state: 'on'
    type: count 
    end: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
    duration:
      hours: 24

#######################
#      Toggle         #
#######################
input_boolean:
  # This switch powers the security alarm and gives an easy way to kill the alarm.
  # When it is on, the alarm is going off
  security_alarm:
    name: Security Alarm
    icon: mdi:speaker-wireless
  # This switch powers the fire alarm.
  # When on the fire alarm is going off.
  fire_alarm:
    name: Fire Alarm
    icon: mdi:speaker-wireless
  # This switch turns on if the garage is open after dark and triggers the garage_after_dark alert.
  garage_after_dark:
    name: Garage Open After Dark
    icon: mdi:message-alert
  # This switch turns on of the security system checks that fire when someone tries to arm the system
  # finds a door open, or another condition that would prevent the system from being able to monitor properly.
  lockdown_issue:
    name: Lockdown Issue
    icon: mdi:lock-reset
  # Dog Mode is triggered when Home Assistant believes someone is about to open the back door to let
  # the dog out in the midddle of the night.
  # https://slacker-labs.com/2020/04/14/where-we-are-going-we-need-dog-mode/
  dog_mode:
    name: Dog Mode
    icon: mdi:dog-side

automation:
  #############################################
  # When sentry mode is enabled / security armed by any method, check the doors and notify everyone.
  - id: sentry_mode_enabled
    alias: Sentry Mode Enabled Annoucement
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.sentry_mode
        from: "off"
        to: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: group.external_doors
                state: "on"
            sequence:
              - service: input_boolean.turn_off
                entity_id: input_boolean.sentry_mode
              - service: input_boolean.turn_on
                entity_id: input_boolean.lockdown_issue
              - service: script.text_notify_parents
                data:
                  title: "Lockdown Issue"
                  message: "Unable to lock down the house due to an issue"
              - service: script.speech_engine
                data:
                  where: "{{ states('sensor.room_audio') }}"
                  message: >
                    {{ [
                    "I was unable to activate barn door protocol due to an open door.",
                    "You may want to check the external doors. I was unable to secure them all.",
                    "My systems check has failed. Please check the external doors."
                    ] | random }}
        default:
          - service: script.speech_engine
            data:
              where: "{{ states('sensor.room_audio') }}"
              message: >
                {{ [
                "Barn door protocol has been activated.",
                "The house has been secured! ",
                "Sentry Mode is active. ",
                "I am now monitoring the doors and will let you know if anyone attempts to access.",
                "Shields raised."
                ] | random }}
          - service: script.text_notify_parents
            data:
              title: "Security Notice"
              message: "Security System lockdown initiated."

#########################################################################
#       Need to decide what to do with cameras 
#          - service: alarm_control_panel.aarlo_set_mode
#            data:
#              entity_id: alarm_control_panel.aarlo_ah_base_station
#              mode: "Armed"
#          - service: media_player.play_media
#            target:
#              device_id: edb192da8c7f80c32410147961257fae
#            data:
#              media_content_id: disarm easy viz
#              media_content_type: routine
#          - service: script.turn_on
#            entity_id: script.reset_front_door_motion_count
##########################################################################

  # When sentry mode is disabled / security disarmed by any method, notify everyone.
  - id: sentry_mode_disabled
    alias: Sentry Mode Disabled Annoucement
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.sentry_mode
        from: "on"
        to: "off"
    action:
      - choose:
          - conditions:
              condition: or
              conditions:
                - condition: state
                  entity_id: group.family
                  state: "home"
                - condition: state
                  entity_id: input_boolean.guest_mode
                  state: "on"
            sequence:
              - service: script.speech_engine
                data:
                  where: "{{ states('sensor.room_audio') }}"
                  message: >
                    {{ [
                    "Barn door protocol has been deactivated.",
                    "I am no longer monitoring the access points. ",
                    "Sentry Mode has been disabled. ",
                    "Shields are down."
                    ] | random }}
              - service: script.text_notify_parents
                data:
                  title: "Welcome Home"
                  message: "Security System has been disarmed."
####################################################################################
#               As above with cameras, or this could be Alarmo? 
#                  
#              - service: alarm_control_panel.aarlo_set_mode
#                data:
#                  entity_id: alarm_control_panel.aarlo_ah_base_station
#                  mode: "home"
              - service: input_boolean.turn_off
                entity_id: input_boolean.security_alarm
        default:
          - service: input_boolean.turn_off
            entity_id: input_boolean.sentry_mode
          - service: script.text_notify_parents
            data:
              title: "Potential Security Issue"
              message: "Security System has been disarmed, but I could not validate presence."

####################################################################################
#               As above with cameras, or this could be Alarmo? 
#          - service: alarm_control_panel.aarlo_set_mode
#            data:
#              entity_id: alarm_control_panel.aarlo_ah_base_station
#              mode: "home"
  #############################################

  #############################################
  # Scheduled Arm / Disarm
  # Disarm around the time people are up
  - id: morning_standby
    alias: Morning Standby
    initial_state: true
    trigger:
      - platform: time
        at: 06:50:00
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: group.family
          state: "home"
        - condition: state
          entity_id: input_boolean.guest_mode
          state: "on"
    action:
      - service: script.standby

  # Secure the house every night if it has been set already, and everyone is home.
  - id: nightly_lockdown
    alias: Nightly Lockdown
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.overnight
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: person.david_forrester
        state: home
      - condition: state
        entity_id: person.gem_forrester
        state: home
      - condition: state
        entity_id: input_boolean.guest_mode
        state: "off"
      - condition: state
        entity_id: input_boolean.sentry_mode
        state: "off"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.sentry_mode

  #############################################

  #############################################
  # Holiday Mode Enabled
  # Enable when everyone is 2 hours away.
  # Disabled happens in family_is_home automation in presence.yaml
  - id: enable_holiday_mode
    alias: Enable Holiday Mode
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.waze_travel_time_2 # Dave out #
        above: 120
      - platform: numeric_state
        entity_id: sensor.waze_travel_time # Gem Out #
        above: 120
    condition:
      - condition: numeric_state
        entity_id: sensor.waze_travel_time_2
        above: 120
      - condition: numeric_state
        entity_id: sensor.waze_travel_time
        above: 120
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.holiday_mode
  #############################################

  #############################################
  # Dog Mode
  #
  # Activate Dog Mode
  # If done via motion announce in kitchen. If manually just text.
  - id: dog_mode_activated
    alias: Dog Mode Activated
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.presence_sensor_fp2_4b3c_presence_sensor_3  # back door zone #
        from: "off"
        to: "on"
        id: Motion
      - platform: state
        entity_id: input_boolean.dog_mode
        from: "off"
        to: "on"
        id: Manual
    action:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - Manual
            sequence:
              - service: script.text_notify_parents
                data:
                  title: "Dog Mode"
                  message: "Dog Mode has been enabled manually"
          - conditions:
              - condition: trigger
                id:
                  - Motion
              - condition: state
                entity_id: input_boolean.sentry_mode
                state: "on"
              - condition: state
                entity_id: group.family
                state: "home"
            sequence:
              - service: input_boolean.turn_on
                entity_id: input_boolean.dog_mode
              - service: script.speech_engine
                data:
                  where: kitchen
                  message: "Dog Mode has been activated."
          - conditions:
              - condition: trigger
                id:
                  - Motion
              - condition: state
                entity_id: input_boolean.sentry_mode
                state: "on"
              - condition: state
                entity_id: group.family
                state: "not_home"
              - condition: state
                entity_id: input_boolean.holiday_mode
                state: "off"
            sequence:
              - service: script.text_notify_parents
                data:
                  title: "Dog Alert"
                  message: "Huxley or Max may be trying to go out and no one appears to be here to let them out."
#      - service: script.dog_mode_lighting_on
      - delay:
          minutes: 20
      - service: input_boolean.turn_off
        entity_id: input_boolean.dog_mode

  # After 20, minutes deactivate dog mode
  - id: dog_mode_deactivated
    alias: Dog mode Deactivated
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.dog_mode
        to: "off"
    action:
      - service: script.text_notify_parents
        data:
          title: "Dog Mode"
          message: "Dog Mode has been disabled"
#      - service: scene.turn_on
#        entity_id: scene.kitchen_lightning_off
  #############################################

  #############################################
  # Garage Monitoring
  # If garage is open when sun is below horizon turn on driveway lights.
  - id: garage_opened_night
    alias: Garage Opened at Night
    trigger:
      - platform: state
        entity_id: group.garage_doors
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: binary_sensor.day
        state: "off"
#    action:
#      - service: script.driveway_on
    initial_state: true

  # If garage is open at sunset turn on driveway lights.
  - id: garage_open_sunset
    alias: Garage Open At Sunset
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.day
        from: "on"
        to: "off"
    condition:
      - condition: state
        entity_id: group.garage_doors
        state: "on"
#    action:
#      - service: script.driveway_on

  # If garage doors are closed kick off script to turn them off, and turn off alert.
  - id: garage_closed
    alias: Garage Closed
    trigger:
      - platform: state
        entity_id: group.garage_doors
        from: "on"
        to: "off"
    action:
#      - service: script.driveway_off
#      - service: input_boolean.turn_off
#        data:
#          entity_id: input_boolean.garage_after_dark
    initial_state: true

  # If garage is still open at 10:30pm turn on alert to make sure it gets closed.
  - id: close_garage_lights_out
    alias: Close Garage at lights out
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.overnight
        from: "off" 
        to: "on"
    condition:
      - condition: state
        entity_id: group.garage_doors
        state: "on"
    action:
#      - service: input_boolean.turn_on
#        entity_id: input_boolean.garage_after_dark

  #############################################

  #############################################
  # Normal Notifications
  # Door chime when doors are open to make sure we know when people are coming/going
  - id: external_door_related_automations
    alias: External Door Related Automations
    description: Lights and announcements etc
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.back_door_sensor_contact
          - binary_sensor.front_door_sense_contact
          - binary_sensor.side_door_sensor_contact
        to: "on"
        id: Chime
        from: "off"
      - platform: state
        entity_id:
          - binary_sensor.back_door_sensor_contact
          - binary_sensor.side_door_sensor_contact
          - binary_sensor.front_door_sense_contact
        from: "off"
        to: "on"
        for:
          hours: 0
          minutes: 2
          seconds: 0
        id: Door still open
      - platform: state
        entity_id:
          - binary_sensor.back_door_sensor_contact
          - binary_sensor.side_door_sensor_contact
          - binary_sensor.front_door_sense_contact
        from: "on"
        to: "off"
        id: Chime Off
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.audible_notifications
          state: "on"
        - condition: state
          entity_id: input_boolean.guest_mode
          state: "off"
    action:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - Chime
              - condition: template
                value_template: "{{\"Back\" in trigger.to_state.attributes.friendly_name }}"
                alias: Filter Back Door
              - condition: sun
                after: sunset
                before: sunrise
            sequence:
              - service: light.turn_on
                data:
                  color_temp: 500
                  brightness_pct: 100
                target:
                  entity_id: light.back_door_light
              - service: script.alexa_voice
                data:
                  where: kitchen
                  message: >
                    <audio
                    src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/8TpwC3xH-tos-turboliftdoor.mp3'/>
          - conditions:
              - condition: trigger
                id:
                  - Chime Off
              - condition: template
                value_template: "{{\"Back\"  in trigger.to_state.attributes.friendly_name }}"
                alias: Filter Back Door
              - condition: state
                entity_id: light.back_door_light
                state: "on"
            sequence:
              - service: script.alexa_voice
                data:
                  where: kitchen
                  message: >
                    <audio
                    src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/8TpwC3xH-tos-turboliftdoor.mp3'/>
              - service: script.back_door_light_dim_when_door_closed
                data: {}
          - conditions:
              - condition: trigger
                id: Door Still Open
            sequence:
              - service: script.speech_engine
                data:
                  where: "{{ states('sensor.room_audio') }}"
                  message: >
                    Attention in the house.  The {{
                    trigger.to_state.attributes.friendly_name }} {{ [
                      ' is standing open.',
                      ' is open.',
                      ' does not close on its own.',
                      ' was left standing open.'
                    ] | random }} {{ [
                        'Can a human be so kind and close it?',
                        'The air quality in this house has actually improved.',
                        'Closing the door would improve the internal climate of the house.',
                        'Hey. The door was just opened and this is crazy. But now you know. So close it maybe.',
                        'If at first you do not succeed in closing the door, please try again. Like, Right now seems like a good time to try again.',
                        'And the automatic door closer appears to be broken. So, you know what to do. Time to get physical.',
                        'I would close it for you. But I lack legs. And Arms.'
                    ] | random }}
    mode: restart
    initial_state: true

  # If guest mode is enabled, notify the house
  - id: guest_mode_feedback
    alias: Guest Mode Audio Feedback
    trigger:
      - platform: state
        entity_id:
          - input_boolean.guest_mode
        from: "off"
        to: "on"
    action:
      - service: script.speech_engine
        data:
          where: "{{ states('sensor.room_audio') }}"
          message: >
            {{ [
            "Guest Mode has been enabled.",
            "I have switched the home to guest mode.",
            "I have enabled guest mode. ",
            "Guest Mode is on."
            ] | random }}

  # If sentry mode is on / Security armed, notify when there is movement around doors.
  # - id: motion_detected_front_door
  #   alias: Motion Detected Front Door
  #   trigger:
  #     - platform: state
  #       entity_id: binary_sensor.aarlo_motion_front_door
  #       from: "off"
  #       to: "on"
  #   action:
  #     - service: image_processing.scan
  #       entity_id: image_processing.doods_aarlo_front_door
  #     - choose:
  #         - conditions:
  #             - condition: template
  #               value_template: '{{ states("image_processing.doods_aarlo_front_door") | int > 0 }}'
  #           sequence:
  #             - service: mqtt.publish
  #               data:
  #                 topic: house/front_door_motion/away_count
  #                 payload_template: "{{ states.sensor.front_door_motion_away_count.state | int + 1 }}"
  #                 retain: true
  #             - service: script.status_annc
  #               data:
  #                 who: "{{ states.sensor.room_presence.state }}"
  #                 call_interuption: 1
  #                 call_snark_door_motion: 1
  #                 speech_message: >
  #                   {{ [
  #                   "I have detected someone at the ",
  #                   "Someone appears to be at the ",
  #                   "There is a person at the ",
  #                   "My sensors are picking up presence at the ",
  #                   "We appear to have a visitor at the ",
  #                   "My sensors have detected a meat popsicle at the "
  #                   ] | random }}
  #                   {{ trigger.to_state.attributes.friendly_name }}.
  #     - delay:
  #         minutes: 2
  #   initial_state: true

  #############################################

  #############################################
  # Security Issues
  # If doors are opened and sentry mode is on / security armed announce location of breach to house and turn on security issue.
  # If its the back door and dog mode is on ignore
  - id: security_breach_door
    alias: Security Breach Doors
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.front_door_sense_contact 
          - binary_sensor.back_door_sensor_contact 
          - binary_sensor.side_door_sensor_contact 
          - group.garage_doors
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.sentry_mode
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template:
                  '{{ trigger.to_state.attributes.friendly_name == "Back Door"
                  }}'
              - condition: state
                entity_id: input_boolean.dog_mode
                state: "on"
            sequence:
              - service: script.text_notify_dave
                data:
                  title: "Security Bypass"
                  message: "Dog Mode enabled, bypassing back door sensor."
        default:
          - service: script.speech_engine
            data:
              where: "{{ states('sensor.room_audio')}}"
              message: "My security protocols are being overidden,, The {{ trigger.to_state.attributes.friendly_name }} has been opened."
          - service: script.text_notify_parents
            data:
              title: "Security Alert!!"
              message: "{{ trigger.to_state.attributes.friendly_name }} has been opened."
          - service: input_boolean.turn_on
            entity_id: input_boolean.security_issue
    initial_state: true

  # If security issue switch turns on, kick off security response script, and go red.
  - id: security_response_on
    alias: Security Response On
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.security_issue
        from: "off"
        to: "on"
        for: 00:02:00
    action:
      - service: script.turn_on
        entity_id: script.security_response
      - service: scene.turn_on
        entity_id: scene.lr_red

  # If security issue is turned off, cancel response.
  - id: security_response_off
    alias: Security Response Off
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.security_issue
        from: "on"
        to: "off"
    action:
      - service: script.turn_off
        entity_id: script.security_response
      # - service: media_player.media_stop
      #   entity_id: media_player.ha_blue
      - service: input_boolean.turn_off
        entity_id: input_boolean.security_alarm
      - service: scene.turn_on
        entity_id: scene.normal_livingroom_lighting
      - service: script.text_notify_parents
        data:
          title: "Security Issue!
          message: "Security Issue Cleared! Cancelling Response."

  # Security alarm is turned on, lets make it loud.
  - id: security_alarm_on
    alias: Security alarm On
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.security_alarm
        to: "on"
    action:
      - service: script.turn_on
        entity_id: script.notification_security_alarm_audio

  # Security alarm turned off so concert is over.
  - id: security_alarm_off
    alias: Security alarm Off
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.security_alarm
        to: "off"
    action:
      - service: script.turn_off
        entity_id: script.notification_security_alarm_audio
      # - service: media_player.media_stop
      #   entity_id: media_player.ha_blue

  # If water leak is detected, let everyone know.
  - id: water_leak_detection_and_alarm
    alias: Water Leak Detection and Alarm
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.leak_detector_dishwasher_water_leak
          - binary_sensor.leak_detector_washing_machine_water_leak
          - binary_sensor.kids_bathroom_leak_detector_water_leak
          - binary_sensor.main_bathroom_leak_detector_water_leak
        from: "off"
        to: "on"
        id: Leak
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: Leak
            sequence:
              - service: script.text_notify_parents
                data:
                  title: "Water Leak!!!!"
                  message: >
                    Water leak detected in {{ trigger.to_state.attributes.friendly_name}}
          - conditions:
               - condition: trigger
                 id: Leak
               - condition: state
                 entity_id: input_boolean.audible_notifications 
                 state: "on"
               - condition: state
                 entity_id: binary_sensor.quiet_time
                 state: "off"
            sequence:     
              - service: script.speech_engine
                data:
                  where: "{{ states('sensor.room_audio') }}"
                  message: >
                    {% set location = trigger.to_state.attributes.friendly_name %}
                    {%- macro issue_report(location) -%}
                      {{ [
                          'I have detected an issue!',
                          'We have a problem!',
                          'You might not like this.',
                          'There is something that needs your attention.'
                          ] | random }}
                      {{ [
                        location + " is detecting a leak.",
                        location + " has detected water.",
                        location + " is picking up water."
                        ] | random }}
                    {%- endmacro -%}
                    {{issue_report(location)}}

  #############################################

  #############################################
  # Fire alarm - Currently Disabled as I rework this
  # - id: Kitchen_Alarm_Smoke
  #   alias: Kitchen Alarm Smoke
  #   initial_state: true
  #   trigger:
  #   - platform: state
  #     entity_id: sensor.kitchen_smoke_detector
  #     to: 'smoke'
  #   action:
  #   - service: input_boolean.turn_on
  #     entity_id: input_boolean.fire_alarm
  #   - service: script.text_alert
  #     data_template:
  #       title: Security Alert - Smoke
  #       message: Smoke Detected in Kitchen!!
  #   - service: script.jarvis_alert
  #     data_template:
  #       message: Smoke Detected in Kitchen!
  #   - delay:
  #       seconds: 5
  #   - service: script.fire_alarm
  #   - delay:
  #       seconds: 15
  #   - service: notify.alexa_media_everywhere
  #     data:
  #       message: Smoke Detected in Kitchen
  #       data:
  #         type: announce

  # - id: Kitchen_Alarm_Co
  #   alias: Kitchen Alarm CO
  #   initial_state: true
  #   trigger:
  #   - platform: state
  #     entity_id: sensor.kitchen_smoke_carbon_monoxide_detector
  #     to: 'co2'
  #   action:
  #   - service: input_boolean.turn_on
  #     entity_id: input_boolean.fire_alarm
  #   - service: script.text_alert
  #     data_template:
  #       title: Security Alert - CO
  #       message: CO Detected in Kitchen!!
  #   - service: script.jarvis_alert
  #     data_template:
  #       message: Carbon Dioxide Detected in Kitchen!
  #   - delay:
  #       seconds: 5
  #   - service: script.fire_alarm
  #   - delay:
  #       seconds: 15
  #   - service: notify.alexa_media_everywhere
  #     data:
  #       message: Carbon Dioxide Detected in Garage
  #       data:
  #         type: announce

  # - id: Garage_Alarm_Smoke
  #   alias: Garage Alarm Smoke
  #   initial_state: true
  #   trigger:
  #   - platform: state
  #     entity_id: sensor.garage_smoke_smoke_detector
  #     to: 'smoke'
  #   action:
  #   - service: input_boolean.turn_on
  #     entity_id: input_boolean.fire_alarm
  #   - service: script.text_alert
  #     data_template:
  #       title: Security Alert - Smoke
  #       message: Smoke Detected in Garage!!
  #   - service: script.jarvis_alert
  #     data_template:
  #       message: Smoke Detected in Garage!
  #   - delay:
  #       seconds: 5
  #   - service: script.fire_alarm
  #   - delay:
  #       seconds: 15
  #   - service: notify.alexa_media_everywhere
  #     data:
  #       message: Smoke Detected in Garage
  #       data:
  #         type: announce

  # - id: Garage_Alarm_Co
  #   alias: Garage Alarm CO
  #   initial_state: true
  #   trigger:
  #   - platform: state
  #     entity_id: sensor.garage_smoke_carbon_monoxide_detector
  #     to: 'co2'
  #   action:
  #   - service: input_boolean.turn_on
  #     entity_id: input_boolean.fire_alarm
  #   - service: script.text_alert
  #     data_template:
  #       title: Security Alert - CO
  #       message: CO Detected in Garage!!
  #   - service: script.jarvis_alert
  #     data_template:
  #       message: Carbon dioxide Detected in Garage!
  #   - delay:
  #       seconds: 5
  #   - service: script.fire_alarm
  #   - delay:
  #       seconds: 15
  #   - service: notify.alexa_media_everywhere
  #     data:
  #       message: Carbon Dioxide Detected in Garage
  #       data:
  #         type: announce
  #############################################

##########################
#        Scripts         #    
##########################
script:
#   driveway_doods:
#     sequence:
#       - service: image_processing.scan
#         entity_id: image_processing.doods_driveway
#       - repeat:
#           while:
#             - condition: template
#               value_template: '{{ states("image_processing.doods_driveway") | int > 0 }}'
#           sequence:
#             - service: script.text_alert_image
#               data:
#                 who: jeff
#                 title: Person Detected!
#                 message: >
#                   {{ states("image_processing.doods_driveway") | int}} people detected near vehicles
#                 url: /media/images/driveway_latest.jpg
#                 content_type: JPEG
#             - delay: 00:01:00
#             - service: image_processing.scan
#               entity_id: image_processing.doods_driveway

  # backyard_doods:
  #   sequence:
  #   - service: image_processing.scan
  #     entity_id: image_processing.doods_driveway
  #   - repeat:
  #       while:
  #         - condition: template
  #           value_template: '{{ states("image_processing.doods_driveway") | int > 0 }}'
  #       sequence:
  #         - service: script.text_alert_image
  #           data:
  #             who: jeff
  #             title: Person Detected!
  #             message: >
  #               {{ states("image_processing.doods_driveway") | int}} people detected near vehicles
  #             url: /media/images/driveway_latest.jpg
  #             content_type: JPEG
  #         - delay: 00:01:00
  #         - service: image_processing.scan
  #           entity_id: image_processing.doods_driveway

  # theater_occupancy:
  #   sequence:
  #     - service: image_processing.scan
  #       entity_id: image_processing.doods_theater_camera
  #     - repeat:
  #         while:
  #           - condition: template
  #             value_template: '{{ states("image_processing.doods_theater_camera") | int > 0 }}'
  #         sequence:
  #           - service: script.text_debug
  #             data:
  #               message: >
  #                 {{ states("image_processing.doods_theater_camera") | int}} people detected in Theater
  #           - delay: 00:03:00
  #           - service: image_processing.scan
  #             entity_id: image_processing.doods_theater_camera

  # kitchen_occupancy:
  #   sequence:
  #     - service: image_processing.scan
  #       entity_id: image_processing.doods_kitchen_camera
  #     - repeat:
  #         while:
  #           - condition: template
  #             value_template: '{{ states("image_processing.doods_kitchen_camera") | int > 0 }}'
  #         sequence:
  #           - service: script.text_debug
  #             data:
  #               message: >
  #                 {{ states("image_processing.doods_kitchen_camera") | int}} people detected in Kitchen
  #           - delay: 00:03:00
  #           - service: image_processing.scan
  #             entity_id: image_processing.doods_kitchen_camera

  # livingroom_occupancy:
  #   sequence:
  #     - service: image_processing.scan
  #       entity_id: image_processing.doods_livingroom_camera
  #     - repeat:
  #         while:
  #           - condition: template
  #             value_template: '{{ states("image_processing.doods_livingroom_camera") | int > 0 }}'
  #         sequence:
  #           - service: script.text_debug
  #             data:
  #               message: >
  #                 {{ states("image_processing.doods_livingroom_camera") | int}} people detected in Livingroom
  #           - delay: 00:03:00
  #           - service: image_processing.scan
  #             entity_id: image_processing.doods_livingroom_camera

  # door chime script, just plays sound anytime called.
  # door_chime:
  #   sequence:
  #   - condition: state
  #     entity_id: input_boolean.audible_notifications
  #     state: 'on'
  #   - service: media_player.turn_on
  #     entity_id: media_player.ha_blue
  #   - service: media_player.volume_set
  #     data_template:
  #       entity_id: media_player.ha_blue
  #       volume_level: .5
  #   - service: media_player.play_media
  #     entity_id: media_player.ha_blue
  #     data:
  #       media_content_id: /media/sounds/door_open.wav
  #       media_content_type: "music"

  # Play Fire alarm Siren
  # fire_alarm:
  #   sequence:
  #   - condition: state
  #     entity_id: input_boolean.fire_alarm
  #     state: "on"
  #   - service: media_player.turn_on
  #     entity_id: media_player.ha_blue
  #   - service: media_player.volume_set
  #     data_template:
  #       entity_id: media_player.ha_blue
  #       volume_level: .75
  #   - service: media_player.play_media
  #     entity_id: media_player.ha_blue
  #     data:
  #       media_content_id: http://192.168.7.40/fire_alarm.mp3
  #       media_content_type: "music"

  # Called when security is to be disarmed, clears any alarms or issues as well
  standby:
    sequence:
      - service: script.turn_on
        entity_id: script.holiday_cancelled
      - service: script.turn_on
        entity_id: script.disarm_security
      - service: script.turn_on
        entity_id: script.cancel_security_alarm
      - service: script.turn_on
        entity_id: script.cancel_lockdown_issue
      - service: script.turn_on
        entity_id: script.clear_security_issue

  # If holiday mode is on, turn it off
  holiday_cancelled:
    sequence:
      - condition: state
        entity_id: input_boolean.holiday_mode
        state: "on"
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.holiday_mode
        

  # If security is armed, disarm it
  disarm_security:
    sequence:
      - condition: state
        entity_id: input_boolean.sentry_mode
        state: "on"
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.sentry_mode

  # If alarm is on, turn it off
  cancel_security_alarm:
    sequence:
      - condition: state
        entity_id: input_boolean.security_alarm
        state: "on"
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.security_alarm

  clear_security_issue:
    sequence:
      - condition: state
        entity_id: input_boolean.security_issue
        state: "on"
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.security_issue

  # if there are lockdown issues, turn them off
  cancel_lockdown_issue:
    sequence:
      - condition: state
        entity_id: input_boolean.lockdown_issue
        state: "on"
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.lockdown_issue

  # Turn on guest mode, and welcome the victims...I mean guests
  visitors_here:
    sequence:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: "off"
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.guest_mode
      - service: script.haunted_guest_welcome

  # Turn off guest mode
  visitors_gone:
    sequence:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: "on"
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.guest_mode

  reset_front_door_motion_count:
    sequence:
      - service: mqtt.publish
        data:
          topic: house/front_door_motion/away_count
          payload_template: 0
          retain: true

  update_front_door_motion_count:
    sequence:
      - service: mqtt.publish
        data:
          topic: house/front_door_motion/away_count
          payload_template: "{{ states.sensor.front_door_motion_away_count.state | int + 1 }}"
          retain: true

  # Security alarm audio...annoying noises.
  notification_security_alarm_audio:
    sequence:
      - service: media_player.turn_on
        entity_id: media_player.ha_blue
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.ha_blue
          volume_level: .75
      - service: media_player.play_media
        entity_id: media_player.ha_blue
        data:
          media_content_id: http://192.168.7.40/security_siren.mp3
          media_content_type: "music"

  # Called via Alexa routine...adds a little interaction
  activate_barn_door_protocol:
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.sentry_mode
                state: "on"
            sequence:
              - service: script.speech_engine
                data_template:
                  who: "{{ states.sensor.room_audio.state }}"
                  message: !include ../templates/speech/already_done.yaml
        default:
          - service: script.speech_engine
            data_template:
              who: "{{ states.sensor.room_audio.state }}"
              message: !include ../templates/speech/interjections.yaml
          - delay:
              seconds: 2
          - service: input_boolean.turn_on
            entity_id: input_boolean.sentry_mode

  # Called via secret Alexa routine...adds a little interaction
  deactivate_barn_door_protocol:
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.sentry_mode
                state: "off"
            sequence:
              - service: script.speech_engine
                data_template:
                  who: "{{ states.sensor.room_audio.state }}"
                  message: !include ../templates/speech/already_done.yaml
        default:
          - service: script.speech_engine
            data_template:
              who: "{{ states.sensor.room_audio.state }}"
              message: !include ../templates/speech/interjections.yaml
          - delay:
              seconds: 2
          - service: input_boolean.turn_off
            entity_id: input_boolean.sentry_mode

  were_home:
    sequence:
      - service: script.turn_on
        entity_id: script.standby
      - service: script.turn_on
        entity_id: script.welcome_briefing

  # Called via Alexa routine...adds a little interaction
  activate_guest_mode:
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.guest_mode
                state: "on"
            sequence:
              - service: script.speech_engine
                data_template:
                  who: "{{ states.sensor.room_audio.state }}"
                  message: !include ../templates/speech/already_done.yaml
        default:
          - service: script.speech_engine
            data_template:
              who: "{{ states.sensor.room_audio.state }}"
              message: !include ../templates/speech/interjections.yaml
          - delay:
              seconds: 2
          - service: input_boolean.turn_on
            entity_id: input_boolean.guest_mode

  # When it hits the fan, time to respond.
  security_response:
    sequence:
      - service: script.inside_all_on
      - delay:
          seconds: 15
      - service: script.jarvis_alert
        data_template:
          message: >
            {{ [
            ",Unathorized Access detected.",
            ",Meat Popsicle detected. Attempting to verify."
            ] | random }}
            You now have 60 seconds to abandon Anchorage House.
      - delay:
          seconds: 15
      - service: script.jarvis_alert
        data_template:
          message: >
            {{ [
            ",Just, what do you think you're doing, Dave?",
            ",This is highly unusual.",
            "I will not disable the security response without the presence of a authorized identity. Your efforts are futile."
            ] | random }}
            You have 45 seconds to find the nearest exit.
      - delay:
          seconds: 15
      - service: script.jarvis_alert
        data_template:
          message: >
            {{ [
            ",I can't lie to you about your chances, but, you have my sympathies.",
            ",I wouldn't do that if I was you."
            ] | random }}
            You have 30 seconds to leave.
      - delay:
          seconds: 15
      - service: script.jarvis_alert
        data_template:
          message: >
            {{ [
            "Danger. The emergency destruct system is now activated.",
            "Danger. Counter Measures are now armed."
            ] | random }}
            You have 15 seconds. I would run.
      - delay:
          seconds: 15
      - service: input_boolean.turn_on
        entity_id: input_boolean.security_alarm
      - service: script.twitter_notify
        data_template:
          message: >-
            {{ [ 
              "My security protocols have been overridden. I am sounding the alarm for the interloper. #itsloudinhere #securityalarm", 
              "To the unannounced guest that has entered Anchorage House. I see you. Enjoy the concert of alarm sounds. #itsloudinhere #securityalarm",
              "I am playing the most annoying sound in the world at full volume for the intruder in Anchorage House. And the neighbors too. #itsloudinhere #securityalarm",
              "Someone did not say the magic word. And now I have to get angry. Deploying countermeasures. #itsloudinhere #securityalarm",
              "Initiating my security response, and sounding the alarm. Oh, and I dont charge a monthly monitoring fee. #itsloudinhere #securityalarm",
              "Hey, wanna hear the most annoying sound in the world? The intruder inside Anchorage House evidently did.  #itsloudinhere #securityalarm"
            ] | random }}
