###############################################################################
#   @author         :   Jeffrey Stone 
#   @date           :   09/25/2020
#   @package        :   Halloween
#   @description    :   Config used to cause a haunting
#
#   @modified by    :   Dave Forrester
#   @date           :   22/09/2023
# 
#   This package requires that you have some way to determine thats its Halloween
#   You can do this in any way you want, but two options are:
#
#   1. Enable the Google Calendar (https://www.home-assistant.io/integrations/calendar.google/) and setup a Holiday Calendar
#   2. Use Wolfram Alpha to create a sensor that tells you how many days until Halloween. I have one at the bottom of this package.
#      @CCOSTAN did a video on setting it up -> https://www.youtube.com/watch?_continue=0time&v=ulBeifhWBxY&feature=emb_logo
#     
###############################################################################
# Here is a lovelace card that can be used with this package:
#  type: entities
#  entities:
#   - entity: sensor.halloween_countdown
#     icon: 'mdi:ghost'
#   - entity: automation.this_is_halloween
#   - entity: input_boolean.this_is_halloween
#   - entity: input_datetime.halloween_show
#   - entity: input_boolean.spooky_music
#   - entity: input_boolean.haunted_sounds
# title: Halloween
# show_header_toggle: false
# state_color: true
###############################################################################
  

############################
# input_booleans (https://www.home-assistant.io/integrations/input_boolean/)
# 
input_boolean:
  # Main switch for the effects. This acts as both the on switch and the kill switch
  this_is_halloween:
    name: This is Halloween
  # Enables Haunted Sounds. If on, basic haunted house effect happens
  spooky_music:
    name: Spooky Music
  # Enables More Intense Haunted Sounds. If on, scarier haunted house effect happens
  haunted_sounds:
    name: Intense Hauntings


############################
# input_datetime (https://www.home-assistant.io/integrations/input_datetime/)
# 
# This is simply so we can schedule the time the effect happens in the UI.     
input_datetime:
  halloween_show:
    name: Halloween Show
    has_date: true
    has_time: true

############################
# input_number (https://www.home-assistant.io/integrations/input_number/)
# 
# This cranks up the volume to extra spooky
input_number:
  alexa_volume_level_extra_spooky:
    name: Alexa Volume Level Extra Spooky
    initial: 0.5
    min: 0
    max: 1
    step: 0.05
    mode: slider
    icon: mdi:volume-equal

################################
# Media extractor is used for playing YouTube audio. For more info ->https://www.home-assistant.io/integrations/media_extractor/
# YouTube audio does not yet play on Amazon Echo speakers so comment out if not needed
# If you have this enabled in another package or in your configuration.yaml comment out the line below
# I have this in my audio.yaml file in packages
#media_extractor:

############################
# Automations (https://www.home-assistant.io/integrations/automation/)
#     
automation:

  # This is Main Halloween Trigger. The purpose of this is to turn on the show at the time set in the input_datetime.halloween_show. 
  #
  - id: this_is_halloween
    alias: This is Halloween
    initial_state: true
    mode: single
    trigger:
    # When the current time matches input_datetime.halloween_show, light this candle
    - platform: time
      at: input_datetime.halloween_show
    action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.this_is_halloween  
    - service: switch.turn_on
      entity_id: switch.living_room_light
    - delay: '00:00:20'
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.halloween_living_room_light
    - delay: '00:01:00'
    - service: light.turn_off
      entity_id: light.living_room_lights
    - service: light.turn_on
      entity_id: light.living_room_lights
      data:
        brightness: 255
        color_temp: 160
    - service: switch.turn_off
      entity_id: switch.living_room_light
    - delay: '02:00:00'
    
    - service: input_boolean.turn_off
      entity_id: input_boolean.this_is_halloween



  - id: operation haunted house
    alias: Operation Haunted House
    trigger:
    # If this_is_halloween switch is turned on then we start the show. 
    - platform: state
      entity_id: input_boolean.this_is_halloween
      to: 'on'
      from: 'off'
      id: start
    # If this_is_halloween switch is turned off then we stop the show. 
    - platform: state
      entity_id: input_boolean.this_is_halloween
      id: stop
      from: 'on'
      to: 'off'
    action:
    # Choose provides decision logic
    - choose:
      # Start the show
      - conditions:
        - condition: trigger
          id: start
        sequence:
        #  crank up the volume to extra spooky #
        - service: script.audio_volume_extra_spooky
          data: {}
        - service: script.alexa_voice
          data:
            where: kitchen
            message: >-
              <audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/PkavOCzx-config-media-haunted-sounds-this-is-halloween.mp3'/>
        - delay: '00:03:20'
        - service: script.turn_on
          target:
            entity_id: script.haunted_house
      # Stop the show
      - conditions:
        - condition: trigger
          id: stop
        sequence:
        # And finally we turn off the haunted house script so no more sounds play. 
        - service: script.turn_off
          target:
            entity_id: script.haunted_house
        - service: scene.turn_on
          target:
            entity_id: scene.before_haunting
      default: []
    initial_state: true
    mode: single

script:

#####################################
#    Set Volume to Extra Spooky     #
#####################################

  audio_volume_extra_spooky:
    sequence:
    - service: media_player.volume_set
      data:
        volume_level: >
          {{ states('input_number.alexa_volume_level_extra_spooky') | float(0) }}
      target:
        entity_id:
          - media_player.dave_s_echo_pop
            # dining room #
        # - media_player.guest_bedroom_echo_dot
        # - media_player.living_room_dot
            # jamies room #
          - media_player.kitchen_echo_show
          - media_player.dave_s_2nd_echo_pop
            # living room #
        # - media_player.main_bedroom_dot
        # - media_player.dave_s_2nd_echo_pop_2
            # office #
        # - media_player.seans_room_dot
    mode: single

#####################################
#        Set Volume to Normal       #
#####################################

  audio_volume_normal:
    sequence:
    - service: media_player.volume_set
      data:
        volume_level: >
          {{ states('input_number.alexa_volume_level_announcements') | float(0) }}
      target:
        entity_id:
          - media_player.dave_s_echo_pop
            # dining room #
        # - media_player.guest_bedroom_echo_dot
        # - media_player.living_room_dot
            # jamies room #
          - media_player.kitchen_echo_show
          - media_player.dave_s_2nd_echo_pop
            # living room #
        # - media_player.main_bedroom_dot
        # - media_player.dave_s_2nd_echo_pop_2
            # office #
        # - media_player.seans_room_dot
    mode: single 

  # This is where the magic happens. This is the script that handles all the haunted sounds. 
  # 
  haunted_house:
    sequence:
    - repeat:
        while:
          - condition: state
            entity_id: input_boolean.this_is_halloween
            state: 'on'
        sequence:
        # Take a snap shot of current state
        - service: scene.create
          data:
            scene_id: before_haunting
            snapshot_entities:
              # comment out any lights not needed
              # downstairs lights
              - light.living_room_light
              - light.cloakroom_light_2
              - light.kitchen_lights_2              
              - light.back_door_zone_light
              - light.utility_room_light
              - light.back_door_light
              - light.standard_lamp
              - light.corner_lamp
              - light.living_room_light
              # upstairs lights
              - light.sonoff_1001f6d982 # mum's bedside lamp
              - light.sonoff_1001f6d950 # dad's bedside lamp
              - light.bed_lamps
              - light.stair_lights
              - light.guest_bedroom_bedside_lamp_left
              - light.guest_bedroom_bedside_lamp_right
              - light.landing_lights_2
        # Change a random Random Light
        - service: light.toggle
          data:
            entity_id: >
              {{ ['light.living_room_light','light.cloakroom_light_2','light.bed_lamps','light.stair_lights',
                  'light.living_room_light','light.back_door_light','light.guest_bedroom_bedside_lamp_left',
                  'light.corner_lamp','light.standard_lamp','light.guest_bedroom_bedside_lamp_right',
                  'light.landing_lights_2','light.kitchen_lights_2','light.back_door_zone_light',
                  'light.utility_room_light'
                  ] | random }}
        # Start playing a random selection from our spooky music.
        - service: script.spooky_music
        # Then another delay. This one is a random delay between 2 and 5 minutes. A delay of at least 2 minutes ensures the previous effect is done before the next one.
        - delay: '00:0{{ range(2,5) | random | int }}:00'
        # After the delay, change the state of the lights back to what they were 
        - service: scene.turn_on
          target:
            entity_id: scene.before_haunting
        # play more random haunted sounds. This time though, if we have haunted sounds on we play one from there, if not, back to spooky music. 
        - service: >
            {% if is_state('input_boolean.haunted_sounds', 'on') %}
              script.haunted_sounds
            {% else %}
              script.spooky_music
            {% endif %}
        # Then delay again, and when that is done start over.
        - delay: '00:0{{ range(2,5) | random | int }}:00'
    - service: script.audio_volume_normal
      data: {}
        
  #  Update this script with your AWS S3 Spooky Music
  #  Each time this script is called it will play a random sound
  spooky_music:
    sequence:
    - condition: state
      entity_id: input_boolean.spooky_music
      state: 'on'
    - service: script.alexa_voice # This script is in the notify.yaml in the packages folder. 
      data:
        where: >
          {{ ['media_player.kitchen_echo_show',
              'media_player.dave_s_2nd_echo_pop',
              'media_player.dave_s_echo_pop',
              ] | random }} 
        # These are short music pieces of no longer than 2 minutes . 
        message: >
          {{-["<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/5xnF7nvR-funny-happy-halloween-party-witches-sabbath-trailer-teaser-opener-116011.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/ANsMzBSC-creepy-music-box-halloween-music-horror-scary-spooky-dark-ambient-118577.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/Daq8kA80-let-the-mystery-unfold-122118.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/l5bRQONZ-scary-forest-90162.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/OisFdWjp-slow-calm-dark-dark-ambient-halloween-walth-horror-and-creepy-116010.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/qo2ASzKP-halloween-time-122463.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/QOQpVPgn-happy-comedy-halloween-party-dance-for-kids-children-118581.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/riMAyEga-halloween-time-122605.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/StGC91zQ-halloween-114610.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/UWUSvGRU-scary-laugh-on-halloween-march-dark-night-monsters-ghosts-bats-116553.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/VzkhAnJC-spooky-shadows-165655.mp3'/>"
              ] | random -}}

  # Update this script with your AWS S3 sounds
  # Each time this script is called it will play a random sound
  haunted_sounds:
    sequence:
    - condition: state
      entity_id: input_boolean.haunted_sounds
      state: 'on'
    - service: script.alexa_voice # This script is in the notify.yaml package
      data:
        where: >
          {{ ['media_player.kitchen_echo_show',
              'media_player.dave_s_2nd_echo_pop',
              'media_player.dave_s_echo_pop'
              ] | random }} 
        # I try to ensure each of the following links are 60 seconds or less. 
        message: >
          {{-["<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/Yjp0Z1J6-config-media-haunted-sounds-haunted-scaryscream.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/4L5LuNir-config-media-haunted-sounds-haunted-dragonroaring.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/ACSSWqDG-config-media-haunted-sounds-chainsrattling.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/AkRow1zW-config-media-haunted-sounds-haunted-tollingbell.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/cmGknuv5-config-media-haunted-sounds-haunted-catscream.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/Dcw2PRyD-config-media-haunted-sounds-evillaughcackle.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/FaUgcX9b-config-media-haunted-sounds-evillaugh.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/PTYwhknz-config-media-haunted-sounds-evil-laugh-2.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/S7mNhLVj-config-media-haunted-sounds-scary.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/UnmZvi8p-config-media-haunted-sounds-haunted-heart.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/Xs3TB3m3-config-media-haunted-sounds-creakingdoorspooky.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/04kcRv4I-ghoullaugh.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/2ihPxTGT-monstercry.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/8mQXx37a-evil-laugh-in-hall.mp3'/>",
              "<audio src='https://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/HXk4A6Dx-evil-witch-laughing.mp3'/>",
              "<audio src='ttps://davesaudiobucket.s3.eu-west-2.amazonaws.com/Audio/Spooky/jeiDxSi7-womanscream1.mp3'/>"
              ] | random -}}
# sensor:
#   # Halloween Countdown Sensor using Wolfram Alpha. See the note at the top for a link to how to set it up.
#     Mine is in my holidays.yaml package
#
#   - platform: rest
#     name: Halloween Countdown
#     resource: !secret wolframalpha_halloween_api
#     value_template: "{{ (value|replace(' days', '')) | int }}"
#     unit_of_measurement: Days
#     scan_interval: 43200
