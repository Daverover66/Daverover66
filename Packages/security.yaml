###############################################################################
#   @author         :   Jeffrey Stone
#   @date           :   03/13/2019
#   @package        :   Security
#   @description    :   Everything related to security functions.
#                       Note: this is the most recent version from Jeffs repo
###############################################################################

input_boolean:
  security_alarm:
    name: Security Alarm
    icon: mdi:speaker-wireless
  # This switch powers the fire alarm.
  # When on the fire alarm is going off.
  fire_alarm:
    name: Fire Alarm
    icon: mdi:speaker-wireless
  # This switch turns on if the garage is open after dark and triggers the garage_after_dark alert.
  garage_after_dark:
    name: Garage Open After Dark
    icon: mdi:message-alert
  # This switch turns on of the security system checks that fire when someone tries to arm the system
  # finds a door open, or another condition that would prevent the system from being able to monitor properly.
  lockdown_issue:
    name: Lockdown Issue
    icon: mdi:lock-reset
  # This switch is turned on if there is a security breach. Turning on this switch starts the countdown to the alarm.
  security_issue:
    name: Security Issue
    icon: mdi:alert-circle-outline
  # Dog Mode is triggered when Home Assistant believes someone is about to open the back door to let
  # to let the dog out in the midddle of the night.
  # https://slacker-labs.com/2020/04/14/where-we-are-going-we-need-dog-mode/
  dog_mode:
    name: Dog Mode
    icon: mdi:dog-side

automation:
  - id: 26267abe-fbc4-4d1e-8d8d-4c06910766d0
    alias: Sentry Mode Enabled Annoucement
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.sentry_mode
        from: "off"
        to: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: group.external_doors
                state: "on"
            sequence:
              - service: input_boolean.turn_off
                entity_id: input_boolean.sentry_mode
              - service: input_boolean.turn_on
                entity_id: input_boolean.lockdown_issue
              - service: script.text_notify
                data:
                  who: "parents"
                  message: "Unable to lock down Maison Des Lunes due to issue"
              - service: script.speech_engine
                data_template:
                  message: >
                    {{ [
                    "I was unable to activate sentry mode due to an open door.",
                    "You may want to check the external doors. I was unable to secure them all.",
                    "My systems check has failed. Please check the external doors.",
                    "Someone has left the pod bay doors open."
                    ] | random }}
        default:
          - service: script.speech_engine
            data_template:
              message: >
                {{ [
                "Sentry Mode has been activated.",
                "May zan Day Loon has been secured! ",
                "Sentry Mode is active. ",
                "I am now monitoring the doors and will let you know if anyone attempts to access.",
                "May zan Day Loon Shields are up."
                ] | random }}
          - service: script.text_notify
            data_template:
              who: "parents"
              title: "Security Armed"
              message: "Security System has been armed."
          - service: alarm_control_panel.aarlo_set_mode
            data:
              entity_id: alarm_control_panel.aarlo_mdl_base_station
              mode: "Armed"
          - service: media_player.play_media
            target:
              device_id: edb192da8c7f80c32410147961257fae
            data:
              media_content_id: disarm easy viz
              media_content_type: routine
          - service: scene.turn_on
            entity_id: scene.lockdown
          

  # When sentry mode is disabled / security disarmed by any method, notify everyone.
  - id: 4dbf31f4-49e6-43fe-b48e-0970a68853dd
    alias: Sentry Mode Disabled Annoucement
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.sentry_mode
        from: "on"
        to: "off"
    action:
      - choose:
          - conditions:
              condition: or
              conditions:
                - condition: state
                  entity_id: binary_sensor.family_home
                  state: "on"
                - condition: state
                  entity_id: input_boolean.guest_mode
                  state: "on"
            sequence:
              - service: script.speech_engine
                data_template:
                  message: >
                    {{ [
                    "Sentry Mode has been deactivated.",
                    "I am no longer monitoring the access points. ",
                    "Sentry Mode has been disabled. ",
                    "May zan Day Loons Shields are down."
                    ] | random }}
              - service: script.text_notify
                data_template:
                  who: "parents"
                  title: "Welcome Home"
                  message: "Security System has been disarmed."
              - service: alarm_control_panel.aarlo_set_mode
                data:
                  entity_id: alarm_control_panel.aarlo_mdl_base_station
                  mode: "Disarmed"
              - service: input_boolean.turn_off
                entity_id: 
                - input_boolean.security_alarm
                - input_boolean.security_issue
              - service: script.set_skylar_mode
        default:
          - service: input_boolean.turn_off
            entity_id: input_boolean.sentry_mode
          - service: script.text_notify
            data_template:
              who: "parents"
              title: "Potential Security Issue"
              message: "Security System has been disarmed, but I could not validate presence."
          - service: alarm_control_panel.aarlo_set_mode
            data:
              entity_id: alarm_control_panel.aarlo_mdl_base_station
              mode: "Disarmed"

  - id: 6a058189-d013-4758-b5f8-f528e7318bd5
    alias: barn door protocol action 
    trigger:
    - platform: state
      entity_id: input_boolean.barn_door_protocol
      from: "off"
      to: "on"
      id: activate
    - platform: state
      entity_id: input_boolean.barn_door_protocol
      from: "on"
      to: "off"
      id: deactivate
    action:
    - choose:
      - conditions:
          - condition: trigger
            id: activate
        sequence:
          - service: scene.turn_on
            entity_id: scene.lockdown
  - id: a668ef5b-0372-431b-921e-e2691690cf79
    alias: Security Breach Doors
    trigger:
    - platform: state
      entity_id:
      - binary_sensor.front_door_contact
      - binary_sensor.kitchen_door_contact
      - binary_sensor.basement_door_contact
      - binary_sensor.back_door_contact
      - binary_sensor.garage_door
      to: 'on'
    condition:
    - condition: state
      entity_id: input_boolean.sentry_mode
      state: 'on'
    action:
    - choose:
      - conditions:
        - condition: template
          value_template: '{{ trigger.to_state.attributes.friendly_name == "Back Door"
            }}'
        - condition: state
          entity_id: input_boolean.dog_mode
          state: 'on'
        sequence:
        - service: script.text_notify
          data:
            who: jeff
            message: Dog Mode enabled, bypassing back door sensor.
      default:
      - service: input_boolean.turn_on
        entity_id: input_boolean.security_issue
      - service: script.text_alert
        data:
          who: parents
          title: Security Alert!!
          message: >
            {{ trigger.to_state.attributes.friendly_name }} has been opened.
      - service: script.jarvis_alert
        data:
          who: master_bedroom
          message: >
            My security protocols are being overidden,, The {{ trigger.to_state.attributes.friendly_name }} has been opened.
      - service: script.jarvis_alert
        data:
          who: main
          message: >
            My security protocols are being overidden,, The {{ trigger.to_state.attributes.friendly_name }} has been opened.
      - service: script.jarvis_alert
        data:
          who: basement
          message: >
            My security protocols are being overidden,, The {{ trigger.to_state.attributes.friendly_name }} has been opened.
    initial_state: true
  - id: security_response_on
    alias: Security Response On
    initial_state: true
    trigger:
    - platform: state
      entity_id: input_boolean.security_issue
      from: 'off'
      to: 'on'
      for: 00:02:00
    action:
    - service: script.turn_on
      entity_id: script.security_response
    - service: scene.turn_on
      entity_id: scene.lr_red
  - id: security_response_off
    alias: Security Response Off
    initial_state: true
    trigger:
    - platform: state
      entity_id: input_boolean.security_issue
      from: 'on'
      to: 'off'
    action:
    - service: script.turn_off
      entity_id: script.security_response
    - service: media_player.media_stop
      entity_id: media_player.ha_blue
    - service: input_boolean.turn_off
      entity_id: input_boolean.security_alarm
    - service: scene.turn_on
      entity_id: scene.normal_livingroom_lighting
    - service: script.text_alert
      data:
        who: parents
        message: Security Issue Cleared! Canceling Repsonse.
  - id: security_alarm_on
    alias: Security alarm On
    initial_state: true
    trigger:
    - platform: state
      entity_id: input_boolean.security_alarm
      to: 'on'
    action:
    - service: script.turn_on
      entity_id: script.notification_security_alarm_audio
  - id: security_alarm_off
    alias: Security alarm Off
    initial_state: true
    trigger:
    - platform: state
      entity_id: input_boolean.security_alarm
      to: 'off'
    action:
    - service: script.turn_off
      entity_id: script.notification_security_alarm_audio
    - service: media_player.media_stop
      entity_id: media_player.ha_blue

  #############################################
  # Vacation Mode Enabled
  # Enable when everyone is 3 hours away.
  # Disable happens in family_is_home automation in presence.yaml
  - id: 184eb5f1-b853-41e7-9448-3e7c6a15f12e
    alias: Enable Vacation Mode
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: proximity.home_jeff
      - platform: numeric_state
        entity_id: proximity.home_kat
        above: 180
    condition:
      - condition: numeric_state
        entity_id: proximity.home_jeff
        above: 180
      - condition: numeric_state
        entity_id: proximity.home_kat
        above: 180
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.vacation_mode

  #############################################
  # Dog Mode
  #
  # Activate Dog Mode
  # If done via motion annouce in kitchen. If manually just text.
  - id: d8067a7c-a0d3-4dd5-a157-1f19bb3c2e91
    alias: Dog Mode Activated
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.back_door_motion
        to: "on"
        id: motion
      - platform: state
        entity_id: input_boolean.dog_mode
        to: "on"
        id: manual
      - platform: state
        entity_id: sensor.dog_mode_action
        to: "single"
        id: toggle
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: manual
            sequence:
              - service: scene.turn_on
                entity_id: scene.pantry_green
              - service: script.text_notify
                data:
                  who: "parents"
                  message: "Dog Mode has been enabled manually"
          - conditions:
              - condition: trigger
                id: toggle
              - condition: state
                entity_id: input_boolean.sentry_mode
                state: "on"
              - condition: state
                entity_id: input_boolean.dog_mode
                state: "off"
            sequence:
              - service: scene.turn_on
                entity_id: scene.pantry_green
              - service: script.text_notify
                data:
                  who: "parents"
                  message: "Dog Mode has been enabled manually"
          - conditions:
              - condition: trigger
                id: toggle
              - condition: state
                entity_id: input_boolean.dog_mode
                state: "on"
            sequence:
              - service: input_boolean.turn_off
                entity_id: input_boolean.dog_mode
          - conditions:
              - condition: state
                entity_id: input_boolean.sentry_mode
                state: "on"
              - condition: state
                entity_id: binary_sensor.family_home
                state: "on"
              - condition: trigger
                id: motion
            sequence:
              - service: input_boolean.turn_on
                entity_id: input_boolean.dog_mode
              - service: scene.turn_on
                entity_id: scene.pantry_green
              - service: tts.amazon_polly_say
                data_template:
                  entity_id: media_player.kitchen_display
                  message: >
                    <speak>
                      <break time="1s"/>
                      <amazon:auto-breaths>
                      <prosody rate="fast">
                      Turning on Dog Mode.
                      <prosody>
                      </amazon:auto-breaths>
                    </speak>
                  cache: true
              
          - conditions:
              - condition: state
                entity_id: input_boolean.sentry_mode
                state: "on"
              - condition: state
                entity_id: binary_sensor.family_home
                state: "off"
              - condition: state
                entity_id: input_boolean.vacation_mode
                state: "off"
              - condition: trigger
                id: motion
            sequence:
              - service: script.text_alert
                data:
                  who: parents
                  message: "Winston may be trying to go out and no one appears to be here to let him out."

  # After 20, minutes deactivate dog mode
  - id: 0ed9200f-3c35-4400-b12a-c637fb7138ca
    alias: Dog mode Deactivated
    initial_state: true
    trigger:
      - platform: state
        entity_id: input_boolean.dog_mode
        to: "off"
    action:
      - service: script.text_notify
        data:
          who: "jeff"
          message: "Dog Mode has been disabled"
      - service: scene.turn_on
        entity_id: scene.pantry_normal
  #############################################

template: 
  - sensor:
      - name: doorbell_snark
        state: >-
          {% if states('sensor.doorbell_presses_yesterday') |int == 0 %}
            No one has come to the door in the last 24 hours. 
            {{ [
              " It is me, isn't?",
              " My automation doesn't bring people to the yard."
              ]| random }}
          {% elif states('sensor.doorbell_presses_yesterday') |int == 1 %}
            {{ [
              "One person in the last 24 hours was brave enough to push my button.",
              "The doorbell was rang one time in the last 24 hours. I am pretty sure they were testing me.",
              "The doorbell has been tested one time in the last 24 hours. Or maybe there is a package on the porch."
              ]| random }}
          {% else %}
            {{ [
              "{{ states('sensor.doorbell_presses_yesterday')}} people have come to the door in the last 24 hours. Did someone put an open sign out?",
              "We dont't get a lot of visitors at Maison Des Lunes, but some days {{ states('sensor.doorbell_presses_yesterday')}} people randomly show up.",
              "To the {{ states('sensor.doorbell_presses_yesterday')}} people that pressed the doorbell in the last 24 hours. Welcome Foolish Mortals!"
              ]| random }}
          {% endif %}
          
  - binary_sensor:
      - name: dog_mode
        delay_off:
          seconds: 30
        state: >
          {{ is_state('sensor.dog_mode_action','single') }}
        


sensor:
  - platform: history_stats
    name: Weekly Doorbell
    entity_id: binary_sensor.front_door_ding
    state: "on"
    type: count
    end: "{{ now() }}"
    duration:
      days: 7
  # - platform: template
  #   sensors:
  #     doorbell_snark:
  #       friendly_name: "Doorbell Snark"
  #       value_template: >-
  #         {% if states('sensor.doorbell_presses_yesterday') |int == 0 %}
  #           No one has come to the door in the last 24 hours. 
  #           {{ [
  #             " It is me, isn't?",
  #             " My automation doesn't bring people to the yard."
  #             ]| random }}
  #         {% elif states('sensor.doorbell_presses_yesterday') |int == 1 %}
  #           {{ [
  #             "One person in the last 24 hours was brave enough to push my button.",
  #             "The doorbell was rang one time in the last 24 hours. I am pretty sure they were testing me.",
  #             "The doorbell has been tested one time in the last 24 hours. Or maybe there is a package on the porch."
  #             ]| random }}
  #         {% else %}
  #           {{ [
  #             "{{ states('sensor.doorbell_presses_yesterday')}} people have come to the door in the last 24 hours. Did someone put an open sign out?",
  #             "We dont't get a lot of visitors at Maison Des Lunes, but some days {{ states('sensor.doorbell_presses_yesterday')}} people randomly show up.",
  #             "To the {{ states('sensor.doorbell_presses_yesterday')}} people that pressed the doorbell in the last 24 hours. Welcome Foolish Mortals!"
  #             ]| random }}
  #         {% endif %}
script:
  driveway_doods:
    sequence:
      - service: image_processing.scan
        entity_id: image_processing.doods_driveway
      - repeat:
          while:
            - condition: template
              value_template: '{{ states("image_processing.doods_driveway") | int > 0 }}'
          sequence:
            - service: script.text_alert_image
              data:
                who: jeff
                title: Person Detected!
                message: >
                  {{ states("image_processing.doods_driveway") | int}} people detected near vehicles
                url: /media/images/driveway_latest.jpg
                content_type: JPEG
            - delay: 00:01:00
            - service: image_processing.scan
              entity_id: image_processing.doods_driveway

  # Play Fire alarm Siren
  # fire_alarm:
  #   sequence:
  #   - condition: state
  #     entity_id: input_boolean.fire_alarm
  #     state: "on"
  #   - service: media_player.turn_on
  #     entity_id: media_player.ha_blue
  #   - service: media_player.volume_set
  #     data_template:
  #       entity_id: media_player.ha_blue
  #       volume_level: .75
  #   - service: media_player.play_media
  #     entity_id: media_player.ha_blue
  #     data:
  #       media_content_id: http://192.168.7.40/fire_alarm.mp3
  #       media_content_type: "music"

  # Called when security is to be disarmed, clears any alarms or issues as well
  standby:
    sequence:
      - service: script.turn_on
        entity_id: script.vacation_canceled
      - service: script.turn_on
        entity_id: script.disarm_security
      - service: script.turn_on
        entity_id: script.cancel_security_alarm
      - service: script.turn_on
        entity_id: script.cancel_lockdown_issue
      - service: script.turn_on
        entity_id: script.clear_security_issue

  # If vacation mode is on, turn it off
  vacation_canceled:
    sequence:
      - condition: state
        entity_id: input_boolean.vacation_mode
        state: "on"
      - data:
          entity_id: input_boolean.vacation_mode
        service: input_boolean.turn_off

  # If security is armed, disarm it
  disarm_security:
    sequence:
      - condition: state
        entity_id: input_boolean.sentry_mode
        state: "on"
      - service: input_boolean.turn_off
        entity_id: input_boolean.sentry_mode

  # If alarm is on, turn it off
  cancel_security_alarm:
    sequence:
      - condition: state
        entity_id: input_boolean.security_alarm
        state: "on"
      - service: input_boolean.turn_off
        entity_id: input_boolean.security_alarm

  clear_security_issue:
    sequence:
      - condition: state
        entity_id: input_boolean.security_issue
        state: "on"
      - service: input_boolean.turn_off
        entity_id: input_boolean.security_issue

  # if there are lockdown issues, turn them off
  cancel_lockdown_issue:
    sequence:
      - condition: state
        entity_id: input_boolean.lockdown_issue
        state: "on"
      - service: input_boolean.turn_off
        entity_id: input_boolean.lockdown_issue

  # Turn on guest mode, and welcome the victims...I mean guests
  visitors_here:
    sequence:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: "off"
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.guest_mode
      - service: script.turn_on
        entity_id: script.haunted_guest_welcome

  # Turn off guest mode
  visitors_gone:
    sequence:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: "on"
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.guest_mode

  reset_front_door_motion_count:
    sequence:
      - service: mqtt.publish
        data:
          topic: house/front_door_motion/away_count
          payload_template: 0
          retain: true

  update_front_door_motion_count:
    sequence:
      - service: mqtt.publish
        data:
          topic: house/front_door_motion/away_count
          payload_template: "{{ states.sensor.front_door_motion_away_count.state | int + 1 }}"
          retain: true

  # Security alarm audio...annoying noises.
  notification_security_alarm_audio:
    sequence:
      - service: media_player.turn_on
        entity_id: media_player.ha_blue
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.ha_blue
          volume_level: .75
      - service: media_player.play_media
        entity_id: media_player.ha_blue
        data:
          media_content_id: http://192.168.7.40/security_siren.mp3
          media_content_type: "music"

  # Called via Alexa routine...adds a little interaction
  activate_barn_door_protocol:
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.barn_door_protocol
                state: "on"
            sequence:
              - service: script.jarvis_already_done
        default:
          - service: script.jarvis_response
          - delay:
              seconds: 2
          - service: input_boolean.turn_on
            entity_id: input_boolean.barn_door_protocol
          - delay:
              seconds: 5
          - if:
            - condition: state
              entity_id: input_boolean.barn_door_protocol
              state: 'on'
            then:
            - service: script.speech_engine
              data_template:
                message: "Barn door protocol has been activated."

  # Called via secret Alexa routine...adds a little interaction
  deactivate_barn_door_protocol:
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.barn_door_protocol
                state: "off"
            sequence:
              - service: script.jarvis_already_done
        default:
          - service: script.jarvis_response
          - delay:
              seconds: 2
          - service: input_boolean.turn_off
            entity_id: input_boolean.barn_door_protocol
          - delay:
              seconds: 5
          - if:
            - condition: state
              entity_id: input_boolean.barn_door_protocol
              state: 'off'
            then:
            - service: script.speech_engine
              data_template:
                message: "Barn door protocol has been deactivated."

  were_home:
    sequence:
      - service: script.turn_on
        entity_id: script.standby
      - service: script.turn_on
        entity_id: script.welcome_briefing

  # Called via Alexa routine...adds a little interaction
  activate_guest_mode:
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.guest_mode
                state: "on"
            sequence:
              - service: script.speech_engine
                data_template:
                  message: !include ../templates/speech/already_done.yaml
        default:
          - service: script.speech_engine
            data_template:
              message: !include ../templates/speech/interjections.yaml
          - delay:
              seconds: 2
          - service: input_boolean.turn_on
            entity_id: input_boolean.guest_mode

  # When it hits the fan, time to respond.
  security_response:
    sequence:
      - service: script.inside_all_on
      - delay:
          seconds: 15
      - service: script.jarvis_alert
        data_template:
          message: >
            {{ [
            ",Unathorized Access detected.",
            ",Meat Popsicle detected. Attempting to verify."
            ] | random }}
            You now have 60 seconds to abandon Maison Des Lunes.
      - delay:
          seconds: 15
      - service: script.jarvis_alert
        data_template:
          message: >
            {{ [
            ",Just, what do you think you're doing, Dave?",
            ",This is highly unusual.",
            "I will not disable the security response without the presence of a authorized identity. Your efforts are futile."
            ] | random }}
            You have 45 seconds to find the nearest exit.
      - delay:
          seconds: 15
      - service: script.jarvis_alert
        data_template:
          message: >
            {{ [
            ",I can't lie to you about your chances, but, you have my sympathies.",
            ",I wouldn't do that if I was you."
            ] | random }}
            You have 30 seconds to leave.
      - delay:
          seconds: 15
      - service: script.jarvis_alert
        data_template:
          message: >
            {{ [
            "Danger. The emergency destruct system is now activated.",
            "Danger. Counter Measures are now armed."
            ] | random }}
            You have 15 seconds. I would run.
      - delay:
          seconds: 15
      - service: input_boolean.turn_on
        entity_id: input_boolean.security_alarm
      - service: script.twitter_notify
        data_template:
          message: >-
            {{ [ 
              "My security protocols have been overridden. I am sounding the alarm for the interloper. #itsloudinhere #securityalarm", 
              "To the unannounced guest that has entered Maison Des Lunes. I see you. Enjoy the concert of alarm sounds. #itsloudinhere #securityalarm",
              "I am playing the most annoying sound in the world at full volume for the intruder in Maison Des Lunes. And the neighbors too. #itsloudinhere #securityalarm",
              "Someone did not say the magic word. And now I have to get angry. Deploying countermeasures. #itsloudinhere #securityalarm",
              "Initiating my security response, and sounding the alarm. Oh, and I dont charge a monthly monitoring fee. #itsloudinhere #securityalarm",
              "Hey, wanna hear the most annoying sound in the world? The intruder inside Maison Des Lunes evidently did.  #itsloudinhere #securityalarm"
            ] | random }}
