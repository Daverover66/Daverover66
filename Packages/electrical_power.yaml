################################################################################## 
#   @author                 :   Remko Van Der Veer                               #
#   @date                   :   11/4/2020                                        #
#   @package                :   energy.yaml                                      #
#   @description            :   All energy config for dashboard                  # 
#                                                                                #
#   @modified by            :   Ryan McLean                                      #
#   @date                   :   05/12/2022                                       #    
#                                                                                #
#   @further modified by    :   Dave Forrester (@Daverover66)                    #
#   @date                   :   25/05/2025                                       #
#   @description            :   Added dynamic battery charge rate sensor         #
##################################################################################


    
###########################
#       sensors           # 
########################### 

template:
  - sensor:
      - name: "Inverter 1 Production"
        unique_id: inverter_1_production
        icon: mdi:solar-power
        unit_of_measurement: "W"
        state_class: "measurement"
        device_class: "power"
        state: >
          {% set inverter_1_dc_output = states('sensor.solaredge_i1_dc_power') | float (0) %}
          {% set battery_output = states('sensor.solaredge_b1_dc_power') | float (0) %}
          {% set inverter_1_production_discharging = battery_output + inverter_1_dc_output %}
          {% set inverter_1_production_charging = inverter_1_dc_output + battery_output %}

          {% if (battery_output >=0) %}
            {{ inverter_1_production_charging }}
          {% else %}
            {{ inverter_1_production_discharging }}
          {% endif %}

        availability: >
          {{ states('sensor.solaredge_i1_dc_power') | is_number and states('sensor.solaredge_b1_dc_power') | is_number }}
      
      - name: "Total DC Power"
        unique_id: total_dc_power
        icon: mdi:solar-power
        unit_of_measurement: "W"
        state_class: "measurement"
        device_class: "power"
        state: >
          {% set total_dc_power = (states('sensor.solaredge_i1_dc_power')|float(0) + states('sensor.solaredge_i2_dc_power')|float(0)) %}
            {{ total_dc_power }}
        availability: >
          {{ states('sensor.solaredge_i1_dc_power') | is_number and states('sensor.solaredge_i2_dc_power') | is_number }}

      - name: "Total AC Power"
        unique_id: total_ac_power
        icon: mdi:solar-power
        unit_of_measurement: "W"
        state_class: "measurement"
        device_class: "power"
        state: >
          {% set total_ac_power = (states('sensor.solaredge_i1_ac_power')|float(0) + states('sensor.solaredge_i2_ac_power')|float(0)) %}
            {{ total_ac_power }}
        availability: >
          {{ states('sensor.solaredge_i1_ac_power') | is_number and states('sensor.solaredge_i2_ac_power') | is_number }}

##########################################################
#    energy flow from Modbus config documentation 
##########################################################

      - name: "Power - Battery Charging"  
        unique_id: power_battery_charging                                      
        unit_of_measurement: "W"                                                
        device_class: "power"                                                   
        state_class: "measurement"                                              
        state: "{{ max([float(states('sensor.solaredge_b1_dc_power'), 0), 0]) | abs() }}"

      - name: "Power - Battery Discharging"   
        unique_id: power_battery_discharging                              
        unit_of_measurement: "W"                                                
        device_class: "power"                                                   
        state_class: "measurement"                                              
        state: "{{ min([float(states('sensor.solaredge_b1_dc_power'), 0), 0]) | abs() }}"
                                                                                  
      - name: "Power - Grid Import" 
        unique_id: power_grid_import                                            
        unit_of_measurement: "W"                                                
        device_class: "power"                                                   
        state_class: "measurement"                                              
        state: "{{ min([float(states('sensor.solaredge_m1_ac_power'), 0), 0]) | abs() }}"

      - name: "Power - Grid Export" 
        unique_id: power_grid_export                                            
        unit_of_measurement: "W"                                                
        device_class: "power"                                                   
        state_class: "measurement"                                              
        state: "{{ max([float(states('sensor.solaredge_m1_ac_power'), 0), 0]) | abs() }}"
                                                                                  
      - name: "Power - Solar Generation"  
        unique_id: power_solar_generation                                      
        unit_of_measurement: "W"                                                
        device_class: "power"                                                   
        state_class: "measurement"                                              
        # The net of DC power from inverters and battery, only if this is positive
        state: "{{ max([float(states('sensor.solaredge_i1_dc_power'), 0) + float(states('sensor.solaredge_i2_dc_power'), 0) + float(states('sensor.solaredge_b1_dc_power'), 0), 0]) }}"
                                                                                  
      - name: "Power - Consumption"    
        unique_id: power_consumption                                         
        unit_of_measurement: "W"                                                
        device_class: "power"                                             
        state_class: "measurement"                                              
        # The net of inverters and grid power                                    
        state: "{{ (float(states('sensor.solaredge_i1_ac_power'), 0) + float(states('sensor.solaredge_i2_ac_power'), 0)) - float(states('sensor.solaredge_m1_ac_power'), 0) }}"
                                                                                                                                                                
      - name: "Power - PV - Battery"   
        unique_id: power_pv_battery                                         
        unit_of_measurement: "W"                                                
        device_class: "power"                                                   
        state_class: "measurement"                                              
        # Battery power less anything coming from the grid, always positive     
        state: "{{ max([float(states('sensor.solaredge_b1_dc_power'), 0) + min([float(states('sensor.solaredge_i1_dc_power'), 0) + float(states('sensor.solaredge_i2_dc_power'), 0), 0]), 0]) }}"
      
      - name: "Power - PV - Load"    
        unique_id: power_pv_load                                           
        unit_of_measurement: "W"                                                
        device_class: "power"
        state_class: "measurement"                                              
        # What is being generated less what is going to the battery and what is being exported, always positive.
        state: "{{ max([float(states('sensor.power_solar_generation'), 0) - float(states('sensor.power_pv_battery'), 0) - float(states('sensor.power_grid_export'), 0), 0]) }}"
    
      - name: "Power - PV - Grid"    
        unique_id: power_pv_grid                                           
        unit_of_measurement: "W"                                                
        device_class: "power"                                                   
        state_class: "measurement"                                              
        # What is being generated less what is going to the battery and what is being consumed, always positive
        state: "{{ max([float(states('sensor.power_solar_generation'), 0) - float(states('sensor.power_pv_battery'), 0) - float(states('sensor.power_consumption'), 0), 0]) }}"
                                                                                  
      - name: "Power - Grid - Load"  
        unique_id: power_grid_load                                           
        unit_of_measurement: "W"                                                
        device_class: "power"                                                   
        state_class: "measurement"                                              
        # What is being imported less anything going to the battery, always positive
        state: "{{ max([float(states('sensor.power_grid_import'), 0) + min([float(states('sensor.solaredge_i1_ac_power'), 0), 0]), 0]) }}"
      
      - name: "Power - Grid - Battery" 
        unique_id: power_grid_battery                                         
        unit_of_measurement: "W"                                                
        device_class: "power"                                                   
        state_class: "measurement"                                              
        # Grid -> Battery is I1 AC + I2 AC power, when negative                         
        # Battery -> Grid is what is being exported, if the battery is discharging
        state: "{{ max([-(float(states('sensor.solaredge_i1_ac_power'), 0) + float(states('sensor.solaredge_i2_ac_power'), 0)), 0]) - (float(states('sensor.power_grid_export'), 0) if float(states('sensor.solaredge_b1_dc_power'), 0) < 0 else 0) }}"

      - name: "Power - Battery - Load"  
        unique_id: power_battery_load                                        
        unit_of_measurement: "W"                                                
        device_class: "power"                                                   
        state_class: "measurement"                                              
        # What is being discharged minus what is being exported, if positive    
        state: "{{ max([float(states('sensor.power_battery_discharging'), 0) - float(states('sensor.power_grid_export'), 0), 0]) }}"
        
##################################################################
#  Dynamic battery charge rate with sun elevation  
##################################################################

      - name: "Battery Charge Limit Dynamic"
        unique_id: battery_charge_dynamic_limit
        unit_of_measurement: 'W'
        state: >
          {% set sun_elevation = state_attr('sun.sun', 'elevation') | float(0) %}
          {% set min_elev = 10 %}
          {% set max_elev = 50 %}
          {% set max_power = 2160 %}
          {% if sun_elevation < min_elev %}
            0
          {% elif sun_elevation > max_elev %}
            {{ max_power }}
          {% else %}
            {{ ((sun_elevation - min_elev) / (max_elev - min_elev) * max_power) | round(0) }}
          {% endif %}
      - name: "Solar Elevation Match Percentage"
        unique_id: solar_elevation_match_percentage
        unit_of_measurement: '%'
        state: >
          {% set sun_elevation = state_attr('sun.sun', 'elevation') | float(0) %}
          {% set min_elev = 10 %}
          {% set max_elev = 50 %}
          {% if sun_elevation < min_elev %}
            0
          {% elif sun_elevation > max_elev %}
            100
          {% else %}
            {{ ((sun_elevation - min_elev) / (max_elev - min_elev) * 100) | round(0) }}
          {% endif %}
          
    
  
