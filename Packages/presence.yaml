###############################################################################
#   @author               :   Jeffrey Stone
#   @date                 :   02/19/2019
#   @package              :   Presence
#   @description          :   A Collection of Presence Related Trackers and Sensors
#
#   @modified by          :   Chris Heder (@chrisron95)
#   @date                 :   05/12/2022
#  
#   @further modified by  :   Dave Forrester (@Daverover66)
#   @date                 :   20/01/2024
###############################################################################    

##############################
#        Helpers             #
##############################

##############################
#          Timer             #
##############################

timer:
  office_presence:
    duration: "01:00:00"

##############################
#         Number             #
##############################

input_number:
  presence_threshold:
    name: Presence Threshold
    initial: 130
    min: 0
    max: 900
    step: 1
    mode: box
    
##############################
#        Datetime            #
##############################

input_datetime:
  last_time_home_dave:
    name: Dave Last Seen
    has_date: true
    has_time: true
  last_time_home_gem:
    name: Gem Last Seen
    has_date: true
    has_time: true
#  last_time_home_kaitlyn:
#    name: Kaitlyn Last Seen
#    has_date: true
#    has_time: true

##############################
#        Text                #
##############################

input_text:
  room_presence:
    name: Room Presence

##############################
#        Group               #
##############################

group:
  family:
    name: Family
    entities:
      - person.david_forrester
      - person.gem_forrester
      - sensor.dave_is_in_da_hoose
      - sensor.gem_is_in_da_hoose

 # some more example groups
 
 # friends:
 #   name: Friends
 #   entities:
 #     - person.kaitlyn
 #     - person.ronald

 # people:
 #   name: People
 #   entities:
 #     - person.chris
 #     - person.steven

 # chris:
 #   name: Chris
 #   entities:
 #     - device_tracker.chriss_iphone_4 # iCloud integration
 #     - device_tracker.christophers_apple_watch # iCloud integration
 #     - device_tracker.chriss_ipad_2 # iCloud integration
 #     - device_tracker.chriss_iphone_3 # HA Mobile App
 #     - device_tracker.chriss_ipad # HA Mobile App

 # steven:
 #   name: Steven
 #   entities:
 #     - device_tracker.stevens_iphone_3 # HA Mobile App

 # occupancy:
 #   name: Occupancy
 #   entities:
 #     - binary_sensor.espresense_bedroom_motion
 #     - binary_sensor.espresense_lab_motion
 #     - binary_sensor.espresense_kitchen_motion
 #     - binary_sensor.espresense_dining_room_motion
 #     - binary_sensor.espresense_living_room_motion

 # arriving:
 #   name: Arriving
 #   entities: []

##############################
#        Sensors             #
##############################

##############################
#        MQTT                #
##############################

mqtt:
  sensor:
    - name: "Family Arrived"
      state_topic: "house/family/arrived"
      payload_available: "online"
      payload_not_available: "offline"
    - name: "Family Arrived"
      state_topic: "house/family/arrived"
      payload_available: "online"
      payload_not_available: "offline"

##############################
#        Template            #
##############################

template:
  - binary_sensor:
    - name: "Daves Samsung Galaxy Home"
      unique_id: daves_samsung_galaxy_home
      state: >
        {{ states('sensor.daves_samsung_galaxy_wifi_connection') == "ForresterQ5G" or states('sensor.daves_samsung_galaxy_wifi_connection') == "ForresterQ"}}
    - name: "Gems Samsung Galaxy Home"
      unique_id: gems_samsung_galaxy_home
      state: >
        {{ states('sensor.sm_s901b_wifi_connection') == "ForresterQ5G" or states('sensor.sm_s901b_wifi_connection') == "ForresterQ" }}
    - name: "Seans Samsung Tablet Home"
      unique_id: seans_samsung_galaxy_home
      state: >
        {{ states('sensor.sean_s_samsung_galaxy_wifi_connection') == "ForresterQ5G" or states('sensor.sean_s_samsung_galaxy_wifi_connection') == "ForresterQ"}}
    - name: "Jamies Samsung Tablet Home"
      unique_id: jamies_samsung_galaxy_home
      state: >
        {{ states('sensor.jamie_s_samsung_tablet_wifi_connection') == "ForresterQ5G" or states('sensor.jamie_s_samsung_tablet_wifi_connection') == "ForresterQ"}}
    - name: "Dave Home"
      unique_id: dave_home 
      state: >-
        {{ is_state('device_tracker.daves_samsung_galaxy', 'home') or is_state('device_tracker.dmforrester_s22fe5g', 'home')}}
    - name: "Gem Home"
      unique_id: gem_home 
      state: >- 
        {{ is_state('device_tracker.sm_s901b', 'home') }}
    - name: "Family Home"
      unique_id: family_home 
      state: >- 
        {{ is_state('binary_sensor.daves_samsung_galaxy_home','on') or  
          is_state('binary_sensor.gems_samsung_galaxy_home','on') }}
  - sensor:
      ### another location based sensor ###
      - name: "Dave is in da hoose"
        unique_id: dave_is_in_da_hoose
        state: |-
          {% set dave_location = states('binary_sensor.daves_samsung_galaxy_home')%}
          {% if dave_location == "on" %}
            home
          {% else %}
          not_home
          {% endif %}

      ### yet another location based sensor ###
      - name: "Gem is in da hoose"
        unique_id: gem_is_in_da_hoose
        state: |-
          {% set gem_location = states('binary_sensor.gems_samsung_galaxy_home')%}
          {% if gem_location == "on" %}
            home
          {% else %}
          not_home
          {% endif %}
          
      - name: "Dave"
        unique_id: dave_location
        state: >-
          {% set person = states('person.david_forrester') %}
          {%- if person in ['abbotsford','abbotsford_house'] %}
            Abbotsford House
          {% elif person in ['Asda'] %}
            Asda
          {% elif person in ['dave_s_mum_and_dad'] %}
            Daves Mum and Dad
          {% elif person in ['dawn','john','dawn_john'] %}
            The Winpennys
          {% elif person in ['dentist'] %}
            Penicuik Dentist
          {% elif person in ['doctors','surgery','doctors_surgery'] %}
            St Ronans Health Centre
          {% elif person in ['galashiels','playpark','galashiels_playpark'] %} 
            Galashiels Playpark
          {% elif person in ['gem_s_mum_and_dad'] %}
            Moxo and Poxo
          {% elif person in ['gem_work'] %}
            Gems Work
          {% elif person in ['harestanes'] %}
            Harestanes Adventure Park
          {% elif person in ['tesco'] %} 
            Tesco
          {% elif person in ['karen'] %}
            Karens Place
          {% elif person in ['swimming'] %}
            Galashiels Swimming Pool
          {% else %}
            {% if person in ['not_home','away'] %}
              {{ states('sensor.daves_samsung_galaxy_geocoded_location') }} 
            {% else %}
              {{ states('person.david_forrester') }}
            {%- endif %}
          {%- endif %}
 
      - name: "Gem"
        unique_id: gem_location
        state: >-
          {% set person = states('person.gem_forrester') %}
          {%- if person in ['abbotsford','abbotsford_house'] %}
            Abbotsford House
          {% elif person in ['Asda'] %}
            Asda
          {% elif person in ['dave_s_mum_and_dad'] %}
            Daves Mum and Dad
          {% elif person in ['dawn','john','dawn_john'] %}
            The Winpennys
          {% elif person in ['dentist'] %}
            Penicuik Dentist
          {% elif person in ['doctors','surgery','doctors_surgery'] %}
            St Ronans Health Centre
          {% elif person in ['galashiels','playpark','galashiels_playpark'] %} 
            Galashiels Playpark
          {% elif person in ['gem_s_mum_and_dad'] %}
            Moxo and Poxo
          {% elif person in ['gem_work'] %}
            Gems Work
          {% elif person in ['harestanes'] %}
            Harestanes Adventure Park
          {% elif person in ['tesco'] %} 
            Tesco
          {% elif person in ['karen'] %}
            Karens Place
          {% elif person in ['swimming'] %}
            Galashiels Swimming Pool
          {% else %}
            {% if person in ['not_home','away'] %}
              {{ states('sensor.sm_s901b_geocoded_location') }} 
            {% else %}
              {{ states('person.gem_forrester') }}
            {%- endif %}
          {%- endif %}

automation:

##############################
#        Automations         #
##############################

##############################
#        Family Arrived      #
##############################

    - id: family_has_arrived
      alias: Family Has Arrived
      description: ""
      mode: single
      initial_state: true
      trigger:
        - platform: state
          entity_id:
            - binary_sensor.family_home
          from: "off"
          to: "on"
          id: Auto
        - platform: state
          entity_id:
            - input_boolean.family_is_home
          from: "off"
          to: "on"
          id: Manual
      condition:
        - condition: state
          entity_id: input_boolean.family_is_home
          state: "off"
      action:
        - service: input_boolean.turn_on
          data: {}
          target:
            entity_id: input_boolean.family_is_home
      
##############################
#        Family Left         #
##############################

  - id: family_has_left
    alias: "Family has left"
    description: ""
    mode: single
    initial_state: true
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.family_home
        from: "on"
        to: "off"
        id: Auto
      - platform: state
        entity_id:
          - input_boolean.family_is_home
        from: "on"
        to: "off"
        id: Manual
    condition: []
    action:
      - choose:
          - conditions:
              - condition: trigger
                id:
                  - Auto
            sequence:
              - service: input_boolean.turn_off
                data: {}
                target:
                 entity_id: input_boolean.family_is_home
    



  - id: welcome_home
    alias: Welcome Home
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - person.chris
          - person.steven
          - person.kaitlyn
          - person.ronald
          - person.mari
          - person.rheena
          - person.danielle
          - person.daniel
          - person.brian
          - person.rathnam
          - person.nico
        from: "not_home"
        to: "home"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.welcome_home
                state: "on"
            sequence:
              - wait_for_trigger:
                  - platform: state
                    entity_id: binary_sensor.front_door
                    from: "off"
                    to: "on"
              - service: scene.turn_on
                target:
                  entity_id: scene.arrival
              - delay:
                  hours: 0
                  minutes: 0
                  seconds: 10
                  milliseconds: 0
              - service: script.turn_on
                entity_id: script.welcome_briefing
        default:
          - service: group.set
            data:
              object_id: "arriving"
              add_entities: >-
                {{ trigger.to_state.entity_id }}
          - wait_for_trigger:
              - platform: state
                entity_id: binary_sensor.front_door
                from: "off"
                to: "on"
          - delay:
              hours: 0
              minutes: 0
              seconds: 10
              milliseconds: 0
          - service: script.status_annc
            data:
              who: "{{ states('sensor.room_presence') }}"
              call_interuption: 1
              speech_message: >
                {% set person = expand('group.arriving')|map(attribute='name')|join(' and ') %}
                {% set peoplecount = expand('group.arriving') | count %}
                {% if peoplecount == 1 %}
                  {% set is_are = ' is ' %}
                  {% set has_have = ' has ' %}
                {% else %}
                  {% set is_are = ' are ' %}
                  {% set has_have = ' have ' %}
                {% endif %}
                {%- macro greeting_sentence(person, is_are, has_have) -%}
                  {{ [
                  person ~ has_have + " arrived.",
                  "My sensors are picking up the presence of additional humans. " ~ person ~ has_have + " been identified as home.",
                  "Guess who is in the hub?" ~ person ~ is_are,
                  "I am sensing a disturbance in the force. "  ~ person +" must be back!",
                  person ~ is_are + "now in the house.",
                  person  ~ is_are + " now here.  Welcome Home.",
                  person  ~ is_are + " now here.",
                  "Just a quick announcement. " ~ person ~ has_have + "  arrived!",
                  person ~ has_have + " finally made it home."
                  ] | random }}
                {%- endmacro -%}
                {{greeting_sentence(person, is_are, has_have)}}
          - delay: 00:02:00
          - service: group.set
            data:
              object_id: "arriving"
              entities: []

  - id: guests_have_arrived
    alias: Guests have arrived
    trigger:
      - platform: state
        entity_id:
          - person.kaitlyn
          - person.ronald
          - person.mari
          - person.rheena
          - person.danielle
          - person.daniel
          - person.brian
          - person.rathnam
          - person.nico
        from: "not_home"
        to: "home"
    action:
      # - service: script.standby
      - service: script.family_is_home
      - service: script.visitors_here
    initial_state: true

  - id: guests_have_left
    alias: Guests have left
    trigger:
      - entity_id: group.friends
        from: home
        to: not_home
        platform: state
    action:
      - service: script.visitors_gone
      - condition: not
        conditions:
          - condition: state
            entity_id: group.family
            state: home
      - service: script.family_is_away
        data: {}
    initial_state: true

script:
  family_is_home:
    sequence:
      - condition: state
        entity_id: group.family
        state: "home"
      - service: script.standby

  family_is_away:
    sequence:
      - condition: state
        entity_id: group.family
        state: "not_home"
      # - service: script.appliances_off
      - service: scene.turn_on
        entity_id: scene.all_off
      - service: input_boolean.turn_on
        entity_id: input_boolean.sentry_mode
      - service: input_boolean.turn_off
        entity_id: input_boolean.motion_lights_master
      # - service: scene.turn_on
      #   entity_id: scene.all_fans_off
      - service: input_boolean.turn_on
        entity_id: input_boolean.welcome_home
